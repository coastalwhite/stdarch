/// AUTOGENERATED FILE

macro_rules! poison {
    () => {{
        crate::core_arch::simd_llvm::simd_reinterpret(())
    }};
}

#[repr(isize)]
#[derive(Clone, Copy, PartialEq, Eq)]
pub enum SelectedElementWidth {
    E8 = 0b000,
    E16 = 0b001,
    E32 = 0b010,
    E64 = 0b011,
}

#[repr(isize)]
#[derive(Clone, Copy, PartialEq, Eq)]
pub enum VectorLengthMultiplier {
    F8 = 0b101,
    F4 = 0b110,
    F2 = 0b111,
    M1 = 0b000,
    M2 = 0b001,
    M4 = 0b010,
    M8 = 0b011,
}

impl core::marker::ConstParamTy for SelectedElementWidth {}
impl core::marker::ConstParamTy for VectorLengthMultiplier {}

#[inline]
#[target_feature(enable = "v")]
#[rustc_legacy_const_generics(1, 2)]
pub unsafe fn vsetvli<const SEW: SelectedElementWidth, const LMUL: VectorLengthMultiplier>(
    vl: usize,
) -> usize {
    #[allow(improper_ctypes)]
    extern "C" {
        #[link_name = "llvm.riscv.vsetvli.i64"]
        fn _vsetvli(vl: i64, ei: i64, mi: i64) -> i64;
    }

    unsafe { _vsetvli(vl as i64, SEW as isize as i64, LMUL as isize as i64) as usize }
}

#[repr(simd, scalable(8))]
#[allow(non_camel_case_types)]
pub struct vint8mf8 {
    _ty: [u8],
}
#[repr(simd, scalable(8))]
#[allow(non_camel_case_types)]
pub struct vint8mf4 {
    _ty: [u8],
}
#[repr(simd, scalable(8))]
#[allow(non_camel_case_types)]
pub struct vint8mf2 {
    _ty: [u8],
}
#[repr(simd, scalable(8))]
#[allow(non_camel_case_types)]
pub struct vint8m1 {
    _ty: [u8],
}
#[repr(simd, scalable(8))]
#[allow(non_camel_case_types)]
pub struct vint8m2 {
    _ty: [u8],
}
#[repr(simd, scalable(8))]
#[allow(non_camel_case_types)]
pub struct vint8m4 {
    _ty: [u8],
}
#[repr(simd, scalable(8))]
#[allow(non_camel_case_types)]
pub struct vint8m8 {
    _ty: [u8],
}
#[repr(simd, scalable(16))]
#[allow(non_camel_case_types)]
pub struct vint16mf8 {
    _ty: [u16],
}
#[repr(simd, scalable(16))]
#[allow(non_camel_case_types)]
pub struct vint16mf4 {
    _ty: [u16],
}
#[repr(simd, scalable(16))]
#[allow(non_camel_case_types)]
pub struct vint16mf2 {
    _ty: [u16],
}
#[repr(simd, scalable(16))]
#[allow(non_camel_case_types)]
pub struct vint16m1 {
    _ty: [u16],
}
#[repr(simd, scalable(16))]
#[allow(non_camel_case_types)]
pub struct vint16m2 {
    _ty: [u16],
}
#[repr(simd, scalable(16))]
#[allow(non_camel_case_types)]
pub struct vint16m4 {
    _ty: [u16],
}
#[repr(simd, scalable(16))]
#[allow(non_camel_case_types)]
pub struct vint16m8 {
    _ty: [u16],
}
#[repr(simd, scalable(32))]
#[allow(non_camel_case_types)]
pub struct vint32mf8 {
    _ty: [u32],
}
#[repr(simd, scalable(32))]
#[allow(non_camel_case_types)]
pub struct vint32mf4 {
    _ty: [u32],
}
#[repr(simd, scalable(32))]
#[allow(non_camel_case_types)]
pub struct vint32mf2 {
    _ty: [u32],
}
#[repr(simd, scalable(32))]
#[allow(non_camel_case_types)]
pub struct vint32m1 {
    _ty: [u32],
}
#[repr(simd, scalable(32))]
#[allow(non_camel_case_types)]
pub struct vint32m2 {
    _ty: [u32],
}
#[repr(simd, scalable(32))]
#[allow(non_camel_case_types)]
pub struct vint32m4 {
    _ty: [u32],
}
#[repr(simd, scalable(32))]
#[allow(non_camel_case_types)]
pub struct vint32m8 {
    _ty: [u32],
}
#[repr(simd, scalable(64))]
#[allow(non_camel_case_types)]
pub struct vint64mf8 {
    _ty: [u64],
}
#[repr(simd, scalable(64))]
#[allow(non_camel_case_types)]
pub struct vint64mf4 {
    _ty: [u64],
}
#[repr(simd, scalable(64))]
#[allow(non_camel_case_types)]
pub struct vint64mf2 {
    _ty: [u64],
}
#[repr(simd, scalable(64))]
#[allow(non_camel_case_types)]
pub struct vint64m1 {
    _ty: [u64],
}
#[repr(simd, scalable(64))]
#[allow(non_camel_case_types)]
pub struct vint64m2 {
    _ty: [u64],
}
#[repr(simd, scalable(64))]
#[allow(non_camel_case_types)]
pub struct vint64m4 {
    _ty: [u64],
}
#[repr(simd, scalable(64))]
#[allow(non_camel_case_types)]
pub struct vint64m8 {
    _ty: [u64],
}
#[repr(simd, scalable(1))]
#[allow(non_camel_case_types)]
pub struct vboolf8 {
    _ty: [bool],
}
#[repr(simd, scalable(1))]
#[allow(non_camel_case_types)]
pub struct vboolf4 {
    _ty: [bool],
}
#[repr(simd, scalable(1))]
#[allow(non_camel_case_types)]
pub struct vboolf2 {
    _ty: [bool],
}
#[repr(simd, scalable(1))]
#[allow(non_camel_case_types)]
pub struct vbool1 {
    _ty: [bool],
}
#[repr(simd, scalable(1))]
#[allow(non_camel_case_types)]
pub struct vbool2 {
    _ty: [bool],
}
#[repr(simd, scalable(1))]
#[allow(non_camel_case_types)]
pub struct vbool4 {
    _ty: [bool],
}
#[repr(simd, scalable(1))]
#[allow(non_camel_case_types)]
pub struct vbool8 {
    _ty: [bool],
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8_v_i8mf8(base: *const u8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv1i8.i64"]
        fn _vle8_v_i8mf8(_poison: vint8mf8, base: *const i8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vle8_v_i8mf8(poison!(), base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8_v_i8mf4(base: *const u8, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv2i8.i64"]
        fn _vle8_v_i8mf4(_poison: vint8mf4, base: *const i8, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vle8_v_i8mf4(poison!(), base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8_v_i8mf2(base: *const u8, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv4i8.i64"]
        fn _vle8_v_i8mf2(_poison: vint8mf2, base: *const i8, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vle8_v_i8mf2(poison!(), base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8_v_i8m1(base: *const u8, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv8i8.i64"]
        fn _vle8_v_i8m1(_poison: vint8m1, base: *const i8, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vle8_v_i8m1(poison!(), base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8_v_i8m2(base: *const u8, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv16i8.i64"]
        fn _vle8_v_i8m2(_poison: vint8m2, base: *const i8, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vle8_v_i8m2(poison!(), base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8_v_i8m4(base: *const u8, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv32i8.i64"]
        fn _vle8_v_i8m4(_poison: vint8m4, base: *const i8, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vle8_v_i8m4(poison!(), base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8_v_i8m8(base: *const u8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv64i8.i64"]
        fn _vle8_v_i8m8(_poison: vint8m8, base: *const i8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vle8_v_i8m8(poison!(), base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16_v_i16mf8(base: *const u16, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv1i16.i64"]
        fn _vle16_v_i16mf8(_poison: vint16mf8, base: *const i16, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vle16_v_i16mf8(poison!(), base as *const i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16_v_i16mf4(base: *const u16, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv2i16.i64"]
        fn _vle16_v_i16mf4(_poison: vint16mf4, base: *const i16, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vle16_v_i16mf4(poison!(), base as *const i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16_v_i16mf2(base: *const u16, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv4i16.i64"]
        fn _vle16_v_i16mf2(_poison: vint16mf2, base: *const i16, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vle16_v_i16mf2(poison!(), base as *const i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16_v_i16m1(base: *const u16, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv8i16.i64"]
        fn _vle16_v_i16m1(_poison: vint16m1, base: *const i16, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vle16_v_i16m1(poison!(), base as *const i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16_v_i16m2(base: *const u16, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv16i16.i64"]
        fn _vle16_v_i16m2(_poison: vint16m2, base: *const i16, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vle16_v_i16m2(poison!(), base as *const i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16_v_i16m4(base: *const u16, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv32i16.i64"]
        fn _vle16_v_i16m4(_poison: vint16m4, base: *const i16, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vle16_v_i16m4(poison!(), base as *const i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16_v_i16m8(base: *const u16, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv64i16.i64"]
        fn _vle16_v_i16m8(_poison: vint16m8, base: *const i16, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vle16_v_i16m8(poison!(), base as *const i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32_v_i32mf8(base: *const u32, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv1i32.i64"]
        fn _vle32_v_i32mf8(_poison: vint32mf8, base: *const i32, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vle32_v_i32mf8(poison!(), base as *const i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32_v_i32mf4(base: *const u32, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv2i32.i64"]
        fn _vle32_v_i32mf4(_poison: vint32mf4, base: *const i32, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vle32_v_i32mf4(poison!(), base as *const i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32_v_i32mf2(base: *const u32, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv4i32.i64"]
        fn _vle32_v_i32mf2(_poison: vint32mf2, base: *const i32, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vle32_v_i32mf2(poison!(), base as *const i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32_v_i32m1(base: *const u32, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv8i32.i64"]
        fn _vle32_v_i32m1(_poison: vint32m1, base: *const i32, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vle32_v_i32m1(poison!(), base as *const i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32_v_i32m2(base: *const u32, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv16i32.i64"]
        fn _vle32_v_i32m2(_poison: vint32m2, base: *const i32, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vle32_v_i32m2(poison!(), base as *const i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32_v_i32m4(base: *const u32, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv32i32.i64"]
        fn _vle32_v_i32m4(_poison: vint32m4, base: *const i32, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vle32_v_i32m4(poison!(), base as *const i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32_v_i32m8(base: *const u32, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv64i32.i64"]
        fn _vle32_v_i32m8(_poison: vint32m8, base: *const i32, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vle32_v_i32m8(poison!(), base as *const i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64_v_i64mf8(base: *const u64, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv1i64.i64"]
        fn _vle64_v_i64mf8(_poison: vint64mf8, base: *const i64, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vle64_v_i64mf8(poison!(), base as *const i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64_v_i64mf4(base: *const u64, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv2i64.i64"]
        fn _vle64_v_i64mf4(_poison: vint64mf4, base: *const i64, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vle64_v_i64mf4(poison!(), base as *const i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64_v_i64mf2(base: *const u64, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv4i64.i64"]
        fn _vle64_v_i64mf2(_poison: vint64mf2, base: *const i64, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vle64_v_i64mf2(poison!(), base as *const i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64_v_i64m1(base: *const u64, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv8i64.i64"]
        fn _vle64_v_i64m1(_poison: vint64m1, base: *const i64, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vle64_v_i64m1(poison!(), base as *const i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64_v_i64m2(base: *const u64, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv16i64.i64"]
        fn _vle64_v_i64m2(_poison: vint64m2, base: *const i64, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vle64_v_i64m2(poison!(), base as *const i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64_v_i64m4(base: *const u64, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv32i64.i64"]
        fn _vle64_v_i64m4(_poison: vint64m4, base: *const i64, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vle64_v_i64m4(poison!(), base as *const i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64_v_i64m8(base: *const u64, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.nxv64i64.i64"]
        fn _vle64_v_i64m8(_poison: vint64m8, base: *const i64, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vle64_v_i64m8(poison!(), base as *const i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8_v_i8mf8_m(base: *const u8, mask: vboolf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv1i8.i64"]
        fn _vle8_v_i8mf8_m(_poison: vint8mf8, base: *const i8, mask: vboolf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vle8_v_i8mf8_m(poison!(), base as *const i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8_v_i8mf4_m(base: *const u8, mask: vboolf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv2i8.i64"]
        fn _vle8_v_i8mf4_m(_poison: vint8mf4, base: *const i8, mask: vboolf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vle8_v_i8mf4_m(poison!(), base as *const i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8_v_i8mf2_m(base: *const u8, mask: vboolf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv4i8.i64"]
        fn _vle8_v_i8mf2_m(_poison: vint8mf2, base: *const i8, mask: vboolf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vle8_v_i8mf2_m(poison!(), base as *const i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8_v_i8m1_m(base: *const u8, mask: vbool1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv8i8.i64"]
        fn _vle8_v_i8m1_m(_poison: vint8m1, base: *const i8, mask: vbool1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vle8_v_i8m1_m(poison!(), base as *const i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8_v_i8m2_m(base: *const u8, mask: vbool2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv16i8.i64"]
        fn _vle8_v_i8m2_m(_poison: vint8m2, base: *const i8, mask: vbool2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vle8_v_i8m2_m(poison!(), base as *const i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8_v_i8m4_m(base: *const u8, mask: vbool4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv32i8.i64"]
        fn _vle8_v_i8m4_m(_poison: vint8m4, base: *const i8, mask: vbool4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vle8_v_i8m4_m(poison!(), base as *const i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8_v_i8m8_m(base: *const u8, mask: vbool8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv64i8.i64"]
        fn _vle8_v_i8m8_m(_poison: vint8m8, base: *const i8, mask: vbool8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vle8_v_i8m8_m(poison!(), base as *const i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16_v_i16mf8_m(base: *const u16, mask: vboolf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv1i16.i64"]
        fn _vle16_v_i16mf8_m(_poison: vint16mf8, base: *const i16, mask: vboolf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vle16_v_i16mf8_m(poison!(), base as *const i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16_v_i16mf4_m(base: *const u16, mask: vboolf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv2i16.i64"]
        fn _vle16_v_i16mf4_m(_poison: vint16mf4, base: *const i16, mask: vboolf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vle16_v_i16mf4_m(poison!(), base as *const i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16_v_i16mf2_m(base: *const u16, mask: vboolf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv4i16.i64"]
        fn _vle16_v_i16mf2_m(_poison: vint16mf2, base: *const i16, mask: vboolf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vle16_v_i16mf2_m(poison!(), base as *const i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16_v_i16m1_m(base: *const u16, mask: vbool1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv8i16.i64"]
        fn _vle16_v_i16m1_m(_poison: vint16m1, base: *const i16, mask: vbool1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vle16_v_i16m1_m(poison!(), base as *const i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16_v_i16m2_m(base: *const u16, mask: vbool2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv16i16.i64"]
        fn _vle16_v_i16m2_m(_poison: vint16m2, base: *const i16, mask: vbool2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vle16_v_i16m2_m(poison!(), base as *const i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16_v_i16m4_m(base: *const u16, mask: vbool4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv32i16.i64"]
        fn _vle16_v_i16m4_m(_poison: vint16m4, base: *const i16, mask: vbool4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vle16_v_i16m4_m(poison!(), base as *const i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16_v_i16m8_m(base: *const u16, mask: vbool8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv64i16.i64"]
        fn _vle16_v_i16m8_m(_poison: vint16m8, base: *const i16, mask: vbool8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vle16_v_i16m8_m(poison!(), base as *const i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32_v_i32mf8_m(base: *const u32, mask: vboolf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv1i32.i64"]
        fn _vle32_v_i32mf8_m(_poison: vint32mf8, base: *const i32, mask: vboolf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vle32_v_i32mf8_m(poison!(), base as *const i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32_v_i32mf4_m(base: *const u32, mask: vboolf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv2i32.i64"]
        fn _vle32_v_i32mf4_m(_poison: vint32mf4, base: *const i32, mask: vboolf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vle32_v_i32mf4_m(poison!(), base as *const i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32_v_i32mf2_m(base: *const u32, mask: vboolf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv4i32.i64"]
        fn _vle32_v_i32mf2_m(_poison: vint32mf2, base: *const i32, mask: vboolf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vle32_v_i32mf2_m(poison!(), base as *const i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32_v_i32m1_m(base: *const u32, mask: vbool1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv8i32.i64"]
        fn _vle32_v_i32m1_m(_poison: vint32m1, base: *const i32, mask: vbool1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vle32_v_i32m1_m(poison!(), base as *const i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32_v_i32m2_m(base: *const u32, mask: vbool2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv16i32.i64"]
        fn _vle32_v_i32m2_m(_poison: vint32m2, base: *const i32, mask: vbool2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vle32_v_i32m2_m(poison!(), base as *const i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32_v_i32m4_m(base: *const u32, mask: vbool4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv32i32.i64"]
        fn _vle32_v_i32m4_m(_poison: vint32m4, base: *const i32, mask: vbool4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vle32_v_i32m4_m(poison!(), base as *const i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32_v_i32m8_m(base: *const u32, mask: vbool8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv64i32.i64"]
        fn _vle32_v_i32m8_m(_poison: vint32m8, base: *const i32, mask: vbool8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vle32_v_i32m8_m(poison!(), base as *const i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64_v_i64mf8_m(base: *const u64, mask: vboolf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv1i64.i64"]
        fn _vle64_v_i64mf8_m(_poison: vint64mf8, base: *const i64, mask: vboolf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vle64_v_i64mf8_m(poison!(), base as *const i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64_v_i64mf4_m(base: *const u64, mask: vboolf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv2i64.i64"]
        fn _vle64_v_i64mf4_m(_poison: vint64mf4, base: *const i64, mask: vboolf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vle64_v_i64mf4_m(poison!(), base as *const i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64_v_i64mf2_m(base: *const u64, mask: vboolf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv4i64.i64"]
        fn _vle64_v_i64mf2_m(_poison: vint64mf2, base: *const i64, mask: vboolf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vle64_v_i64mf2_m(poison!(), base as *const i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64_v_i64m1_m(base: *const u64, mask: vbool1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv8i64.i64"]
        fn _vle64_v_i64m1_m(_poison: vint64m1, base: *const i64, mask: vbool1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vle64_v_i64m1_m(poison!(), base as *const i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64_v_i64m2_m(base: *const u64, mask: vbool2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv16i64.i64"]
        fn _vle64_v_i64m2_m(_poison: vint64m2, base: *const i64, mask: vbool2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vle64_v_i64m2_m(poison!(), base as *const i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64_v_i64m4_m(base: *const u64, mask: vbool4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv32i64.i64"]
        fn _vle64_v_i64m4_m(_poison: vint64m4, base: *const i64, mask: vbool4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vle64_v_i64m4_m(poison!(), base as *const i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64_v_i64m8_m(base: *const u64, mask: vbool8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vle.mask.nxv64i64.i64"]
        fn _vle64_v_i64m8_m(_poison: vint64m8, base: *const i64, mask: vbool8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vle64_v_i64m8_m(poison!(), base as *const i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse8_v_i8mf8(vs: vint8mf8, base: *mut u8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv1i8.i64"]
        fn _vse8_v_i8mf8(vs: vint8mf8, base: *mut i8, vl: isize);
    }
    
    unsafe {
        _vse8_v_i8mf8(vs, base as *mut i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse8_v_i8mf4(vs: vint8mf4, base: *mut u8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv2i8.i64"]
        fn _vse8_v_i8mf4(vs: vint8mf4, base: *mut i8, vl: isize);
    }
    
    unsafe {
        _vse8_v_i8mf4(vs, base as *mut i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse8_v_i8mf2(vs: vint8mf2, base: *mut u8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv4i8.i64"]
        fn _vse8_v_i8mf2(vs: vint8mf2, base: *mut i8, vl: isize);
    }
    
    unsafe {
        _vse8_v_i8mf2(vs, base as *mut i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse8_v_i8m1(vs: vint8m1, base: *mut u8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv8i8.i64"]
        fn _vse8_v_i8m1(vs: vint8m1, base: *mut i8, vl: isize);
    }
    
    unsafe {
        _vse8_v_i8m1(vs, base as *mut i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse8_v_i8m2(vs: vint8m2, base: *mut u8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv16i8.i64"]
        fn _vse8_v_i8m2(vs: vint8m2, base: *mut i8, vl: isize);
    }
    
    unsafe {
        _vse8_v_i8m2(vs, base as *mut i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse8_v_i8m4(vs: vint8m4, base: *mut u8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv32i8.i64"]
        fn _vse8_v_i8m4(vs: vint8m4, base: *mut i8, vl: isize);
    }
    
    unsafe {
        _vse8_v_i8m4(vs, base as *mut i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse8_v_i8m8(vs: vint8m8, base: *mut u8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv64i8.i64"]
        fn _vse8_v_i8m8(vs: vint8m8, base: *mut i8, vl: isize);
    }
    
    unsafe {
        _vse8_v_i8m8(vs, base as *mut i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse16_v_i16mf8(vs: vint16mf8, base: *mut u16, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv1i16.i64"]
        fn _vse16_v_i16mf8(vs: vint16mf8, base: *mut i16, vl: isize);
    }
    
    unsafe {
        _vse16_v_i16mf8(vs, base as *mut i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse16_v_i16mf4(vs: vint16mf4, base: *mut u16, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv2i16.i64"]
        fn _vse16_v_i16mf4(vs: vint16mf4, base: *mut i16, vl: isize);
    }
    
    unsafe {
        _vse16_v_i16mf4(vs, base as *mut i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse16_v_i16mf2(vs: vint16mf2, base: *mut u16, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv4i16.i64"]
        fn _vse16_v_i16mf2(vs: vint16mf2, base: *mut i16, vl: isize);
    }
    
    unsafe {
        _vse16_v_i16mf2(vs, base as *mut i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse16_v_i16m1(vs: vint16m1, base: *mut u16, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv8i16.i64"]
        fn _vse16_v_i16m1(vs: vint16m1, base: *mut i16, vl: isize);
    }
    
    unsafe {
        _vse16_v_i16m1(vs, base as *mut i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse16_v_i16m2(vs: vint16m2, base: *mut u16, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv16i16.i64"]
        fn _vse16_v_i16m2(vs: vint16m2, base: *mut i16, vl: isize);
    }
    
    unsafe {
        _vse16_v_i16m2(vs, base as *mut i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse16_v_i16m4(vs: vint16m4, base: *mut u16, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv32i16.i64"]
        fn _vse16_v_i16m4(vs: vint16m4, base: *mut i16, vl: isize);
    }
    
    unsafe {
        _vse16_v_i16m4(vs, base as *mut i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse16_v_i16m8(vs: vint16m8, base: *mut u16, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv64i16.i64"]
        fn _vse16_v_i16m8(vs: vint16m8, base: *mut i16, vl: isize);
    }
    
    unsafe {
        _vse16_v_i16m8(vs, base as *mut i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse32_v_i32mf8(vs: vint32mf8, base: *mut u32, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv1i32.i64"]
        fn _vse32_v_i32mf8(vs: vint32mf8, base: *mut i32, vl: isize);
    }
    
    unsafe {
        _vse32_v_i32mf8(vs, base as *mut i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse32_v_i32mf4(vs: vint32mf4, base: *mut u32, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv2i32.i64"]
        fn _vse32_v_i32mf4(vs: vint32mf4, base: *mut i32, vl: isize);
    }
    
    unsafe {
        _vse32_v_i32mf4(vs, base as *mut i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse32_v_i32mf2(vs: vint32mf2, base: *mut u32, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv4i32.i64"]
        fn _vse32_v_i32mf2(vs: vint32mf2, base: *mut i32, vl: isize);
    }
    
    unsafe {
        _vse32_v_i32mf2(vs, base as *mut i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse32_v_i32m1(vs: vint32m1, base: *mut u32, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv8i32.i64"]
        fn _vse32_v_i32m1(vs: vint32m1, base: *mut i32, vl: isize);
    }
    
    unsafe {
        _vse32_v_i32m1(vs, base as *mut i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse32_v_i32m2(vs: vint32m2, base: *mut u32, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv16i32.i64"]
        fn _vse32_v_i32m2(vs: vint32m2, base: *mut i32, vl: isize);
    }
    
    unsafe {
        _vse32_v_i32m2(vs, base as *mut i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse32_v_i32m4(vs: vint32m4, base: *mut u32, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv32i32.i64"]
        fn _vse32_v_i32m4(vs: vint32m4, base: *mut i32, vl: isize);
    }
    
    unsafe {
        _vse32_v_i32m4(vs, base as *mut i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse32_v_i32m8(vs: vint32m8, base: *mut u32, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv64i32.i64"]
        fn _vse32_v_i32m8(vs: vint32m8, base: *mut i32, vl: isize);
    }
    
    unsafe {
        _vse32_v_i32m8(vs, base as *mut i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse64_v_i64mf8(vs: vint64mf8, base: *mut u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv1i64.i64"]
        fn _vse64_v_i64mf8(vs: vint64mf8, base: *mut i64, vl: isize);
    }
    
    unsafe {
        _vse64_v_i64mf8(vs, base as *mut i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse64_v_i64mf4(vs: vint64mf4, base: *mut u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv2i64.i64"]
        fn _vse64_v_i64mf4(vs: vint64mf4, base: *mut i64, vl: isize);
    }
    
    unsafe {
        _vse64_v_i64mf4(vs, base as *mut i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse64_v_i64mf2(vs: vint64mf2, base: *mut u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv4i64.i64"]
        fn _vse64_v_i64mf2(vs: vint64mf2, base: *mut i64, vl: isize);
    }
    
    unsafe {
        _vse64_v_i64mf2(vs, base as *mut i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse64_v_i64m1(vs: vint64m1, base: *mut u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv8i64.i64"]
        fn _vse64_v_i64m1(vs: vint64m1, base: *mut i64, vl: isize);
    }
    
    unsafe {
        _vse64_v_i64m1(vs, base as *mut i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse64_v_i64m2(vs: vint64m2, base: *mut u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv16i64.i64"]
        fn _vse64_v_i64m2(vs: vint64m2, base: *mut i64, vl: isize);
    }
    
    unsafe {
        _vse64_v_i64m2(vs, base as *mut i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse64_v_i64m4(vs: vint64m4, base: *mut u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv32i64.i64"]
        fn _vse64_v_i64m4(vs: vint64m4, base: *mut i64, vl: isize);
    }
    
    unsafe {
        _vse64_v_i64m4(vs, base as *mut i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse64_v_i64m8(vs: vint64m8, base: *mut u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.nxv64i64.i64"]
        fn _vse64_v_i64m8(vs: vint64m8, base: *mut i64, vl: isize);
    }
    
    unsafe {
        _vse64_v_i64m8(vs, base as *mut i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse8_v_i8mf8_m(vs: vint8mf8, base: *mut u8, mask: vboolf8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv1i8.i64"]
        fn _vse8_v_i8mf8_m(vs: vint8mf8, base: *mut i8, mask: vboolf8, vl: isize);
    }
    
    unsafe {
        _vse8_v_i8mf8_m(vs, base as *mut i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse8_v_i8mf4_m(vs: vint8mf4, base: *mut u8, mask: vboolf4, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv2i8.i64"]
        fn _vse8_v_i8mf4_m(vs: vint8mf4, base: *mut i8, mask: vboolf4, vl: isize);
    }
    
    unsafe {
        _vse8_v_i8mf4_m(vs, base as *mut i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse8_v_i8mf2_m(vs: vint8mf2, base: *mut u8, mask: vboolf2, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv4i8.i64"]
        fn _vse8_v_i8mf2_m(vs: vint8mf2, base: *mut i8, mask: vboolf2, vl: isize);
    }
    
    unsafe {
        _vse8_v_i8mf2_m(vs, base as *mut i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse8_v_i8m1_m(vs: vint8m1, base: *mut u8, mask: vbool1, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv8i8.i64"]
        fn _vse8_v_i8m1_m(vs: vint8m1, base: *mut i8, mask: vbool1, vl: isize);
    }
    
    unsafe {
        _vse8_v_i8m1_m(vs, base as *mut i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse8_v_i8m2_m(vs: vint8m2, base: *mut u8, mask: vbool2, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv16i8.i64"]
        fn _vse8_v_i8m2_m(vs: vint8m2, base: *mut i8, mask: vbool2, vl: isize);
    }
    
    unsafe {
        _vse8_v_i8m2_m(vs, base as *mut i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse8_v_i8m4_m(vs: vint8m4, base: *mut u8, mask: vbool4, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv32i8.i64"]
        fn _vse8_v_i8m4_m(vs: vint8m4, base: *mut i8, mask: vbool4, vl: isize);
    }
    
    unsafe {
        _vse8_v_i8m4_m(vs, base as *mut i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse8_v_i8m8_m(vs: vint8m8, base: *mut u8, mask: vbool8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv64i8.i64"]
        fn _vse8_v_i8m8_m(vs: vint8m8, base: *mut i8, mask: vbool8, vl: isize);
    }
    
    unsafe {
        _vse8_v_i8m8_m(vs, base as *mut i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse16_v_i16mf8_m(vs: vint16mf8, base: *mut u16, mask: vboolf8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv1i16.i64"]
        fn _vse16_v_i16mf8_m(vs: vint16mf8, base: *mut i16, mask: vboolf8, vl: isize);
    }
    
    unsafe {
        _vse16_v_i16mf8_m(vs, base as *mut i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse16_v_i16mf4_m(vs: vint16mf4, base: *mut u16, mask: vboolf4, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv2i16.i64"]
        fn _vse16_v_i16mf4_m(vs: vint16mf4, base: *mut i16, mask: vboolf4, vl: isize);
    }
    
    unsafe {
        _vse16_v_i16mf4_m(vs, base as *mut i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse16_v_i16mf2_m(vs: vint16mf2, base: *mut u16, mask: vboolf2, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv4i16.i64"]
        fn _vse16_v_i16mf2_m(vs: vint16mf2, base: *mut i16, mask: vboolf2, vl: isize);
    }
    
    unsafe {
        _vse16_v_i16mf2_m(vs, base as *mut i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse16_v_i16m1_m(vs: vint16m1, base: *mut u16, mask: vbool1, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv8i16.i64"]
        fn _vse16_v_i16m1_m(vs: vint16m1, base: *mut i16, mask: vbool1, vl: isize);
    }
    
    unsafe {
        _vse16_v_i16m1_m(vs, base as *mut i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse16_v_i16m2_m(vs: vint16m2, base: *mut u16, mask: vbool2, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv16i16.i64"]
        fn _vse16_v_i16m2_m(vs: vint16m2, base: *mut i16, mask: vbool2, vl: isize);
    }
    
    unsafe {
        _vse16_v_i16m2_m(vs, base as *mut i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse16_v_i16m4_m(vs: vint16m4, base: *mut u16, mask: vbool4, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv32i16.i64"]
        fn _vse16_v_i16m4_m(vs: vint16m4, base: *mut i16, mask: vbool4, vl: isize);
    }
    
    unsafe {
        _vse16_v_i16m4_m(vs, base as *mut i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse16_v_i16m8_m(vs: vint16m8, base: *mut u16, mask: vbool8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv64i16.i64"]
        fn _vse16_v_i16m8_m(vs: vint16m8, base: *mut i16, mask: vbool8, vl: isize);
    }
    
    unsafe {
        _vse16_v_i16m8_m(vs, base as *mut i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse32_v_i32mf8_m(vs: vint32mf8, base: *mut u32, mask: vboolf8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv1i32.i64"]
        fn _vse32_v_i32mf8_m(vs: vint32mf8, base: *mut i32, mask: vboolf8, vl: isize);
    }
    
    unsafe {
        _vse32_v_i32mf8_m(vs, base as *mut i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse32_v_i32mf4_m(vs: vint32mf4, base: *mut u32, mask: vboolf4, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv2i32.i64"]
        fn _vse32_v_i32mf4_m(vs: vint32mf4, base: *mut i32, mask: vboolf4, vl: isize);
    }
    
    unsafe {
        _vse32_v_i32mf4_m(vs, base as *mut i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse32_v_i32mf2_m(vs: vint32mf2, base: *mut u32, mask: vboolf2, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv4i32.i64"]
        fn _vse32_v_i32mf2_m(vs: vint32mf2, base: *mut i32, mask: vboolf2, vl: isize);
    }
    
    unsafe {
        _vse32_v_i32mf2_m(vs, base as *mut i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse32_v_i32m1_m(vs: vint32m1, base: *mut u32, mask: vbool1, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv8i32.i64"]
        fn _vse32_v_i32m1_m(vs: vint32m1, base: *mut i32, mask: vbool1, vl: isize);
    }
    
    unsafe {
        _vse32_v_i32m1_m(vs, base as *mut i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse32_v_i32m2_m(vs: vint32m2, base: *mut u32, mask: vbool2, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv16i32.i64"]
        fn _vse32_v_i32m2_m(vs: vint32m2, base: *mut i32, mask: vbool2, vl: isize);
    }
    
    unsafe {
        _vse32_v_i32m2_m(vs, base as *mut i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse32_v_i32m4_m(vs: vint32m4, base: *mut u32, mask: vbool4, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv32i32.i64"]
        fn _vse32_v_i32m4_m(vs: vint32m4, base: *mut i32, mask: vbool4, vl: isize);
    }
    
    unsafe {
        _vse32_v_i32m4_m(vs, base as *mut i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse32_v_i32m8_m(vs: vint32m8, base: *mut u32, mask: vbool8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv64i32.i64"]
        fn _vse32_v_i32m8_m(vs: vint32m8, base: *mut i32, mask: vbool8, vl: isize);
    }
    
    unsafe {
        _vse32_v_i32m8_m(vs, base as *mut i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse64_v_i64mf8_m(vs: vint64mf8, base: *mut u64, mask: vboolf8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv1i64.i64"]
        fn _vse64_v_i64mf8_m(vs: vint64mf8, base: *mut i64, mask: vboolf8, vl: isize);
    }
    
    unsafe {
        _vse64_v_i64mf8_m(vs, base as *mut i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse64_v_i64mf4_m(vs: vint64mf4, base: *mut u64, mask: vboolf4, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv2i64.i64"]
        fn _vse64_v_i64mf4_m(vs: vint64mf4, base: *mut i64, mask: vboolf4, vl: isize);
    }
    
    unsafe {
        _vse64_v_i64mf4_m(vs, base as *mut i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse64_v_i64mf2_m(vs: vint64mf2, base: *mut u64, mask: vboolf2, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv4i64.i64"]
        fn _vse64_v_i64mf2_m(vs: vint64mf2, base: *mut i64, mask: vboolf2, vl: isize);
    }
    
    unsafe {
        _vse64_v_i64mf2_m(vs, base as *mut i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse64_v_i64m1_m(vs: vint64m1, base: *mut u64, mask: vbool1, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv8i64.i64"]
        fn _vse64_v_i64m1_m(vs: vint64m1, base: *mut i64, mask: vbool1, vl: isize);
    }
    
    unsafe {
        _vse64_v_i64m1_m(vs, base as *mut i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse64_v_i64m2_m(vs: vint64m2, base: *mut u64, mask: vbool2, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv16i64.i64"]
        fn _vse64_v_i64m2_m(vs: vint64m2, base: *mut i64, mask: vbool2, vl: isize);
    }
    
    unsafe {
        _vse64_v_i64m2_m(vs, base as *mut i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse64_v_i64m4_m(vs: vint64m4, base: *mut u64, mask: vbool4, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv32i64.i64"]
        fn _vse64_v_i64m4_m(vs: vint64m4, base: *mut i64, mask: vbool4, vl: isize);
    }
    
    unsafe {
        _vse64_v_i64m4_m(vs, base as *mut i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vse64_v_i64m8_m(vs: vint64m8, base: *mut u64, mask: vbool8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vse.mask.nxv64i64.i64"]
        fn _vse64_v_i64m8_m(vs: vint64m8, base: *mut i64, mask: vbool8, vl: isize);
    }
    
    unsafe {
        _vse64_v_i64m8_m(vs, base as *mut i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse8_v_i8mf8(base: *const u8, bstride: u64, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv1i8.i64"]
        fn _vlse8_v_i8mf8(_poison: vint8mf8, base: *const i8, bstride: i64, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vlse8_v_i8mf8(poison!(), base as *const i8, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse8_v_i8mf4(base: *const u8, bstride: u64, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv2i8.i64"]
        fn _vlse8_v_i8mf4(_poison: vint8mf4, base: *const i8, bstride: i64, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vlse8_v_i8mf4(poison!(), base as *const i8, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse8_v_i8mf2(base: *const u8, bstride: u64, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv4i8.i64"]
        fn _vlse8_v_i8mf2(_poison: vint8mf2, base: *const i8, bstride: i64, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vlse8_v_i8mf2(poison!(), base as *const i8, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse8_v_i8m1(base: *const u8, bstride: u64, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv8i8.i64"]
        fn _vlse8_v_i8m1(_poison: vint8m1, base: *const i8, bstride: i64, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vlse8_v_i8m1(poison!(), base as *const i8, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse8_v_i8m2(base: *const u8, bstride: u64, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv16i8.i64"]
        fn _vlse8_v_i8m2(_poison: vint8m2, base: *const i8, bstride: i64, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vlse8_v_i8m2(poison!(), base as *const i8, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse8_v_i8m4(base: *const u8, bstride: u64, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv32i8.i64"]
        fn _vlse8_v_i8m4(_poison: vint8m4, base: *const i8, bstride: i64, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vlse8_v_i8m4(poison!(), base as *const i8, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse8_v_i8m8(base: *const u8, bstride: u64, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv64i8.i64"]
        fn _vlse8_v_i8m8(_poison: vint8m8, base: *const i8, bstride: i64, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vlse8_v_i8m8(poison!(), base as *const i8, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse16_v_i16mf8(base: *const u16, bstride: u64, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv1i16.i64"]
        fn _vlse16_v_i16mf8(_poison: vint16mf8, base: *const i16, bstride: i64, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vlse16_v_i16mf8(poison!(), base as *const i16, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse16_v_i16mf4(base: *const u16, bstride: u64, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv2i16.i64"]
        fn _vlse16_v_i16mf4(_poison: vint16mf4, base: *const i16, bstride: i64, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vlse16_v_i16mf4(poison!(), base as *const i16, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse16_v_i16mf2(base: *const u16, bstride: u64, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv4i16.i64"]
        fn _vlse16_v_i16mf2(_poison: vint16mf2, base: *const i16, bstride: i64, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vlse16_v_i16mf2(poison!(), base as *const i16, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse16_v_i16m1(base: *const u16, bstride: u64, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv8i16.i64"]
        fn _vlse16_v_i16m1(_poison: vint16m1, base: *const i16, bstride: i64, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vlse16_v_i16m1(poison!(), base as *const i16, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse16_v_i16m2(base: *const u16, bstride: u64, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv16i16.i64"]
        fn _vlse16_v_i16m2(_poison: vint16m2, base: *const i16, bstride: i64, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vlse16_v_i16m2(poison!(), base as *const i16, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse16_v_i16m4(base: *const u16, bstride: u64, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv32i16.i64"]
        fn _vlse16_v_i16m4(_poison: vint16m4, base: *const i16, bstride: i64, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vlse16_v_i16m4(poison!(), base as *const i16, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse16_v_i16m8(base: *const u16, bstride: u64, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv64i16.i64"]
        fn _vlse16_v_i16m8(_poison: vint16m8, base: *const i16, bstride: i64, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vlse16_v_i16m8(poison!(), base as *const i16, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse32_v_i32mf8(base: *const u32, bstride: u64, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv1i32.i64"]
        fn _vlse32_v_i32mf8(_poison: vint32mf8, base: *const i32, bstride: i64, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vlse32_v_i32mf8(poison!(), base as *const i32, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse32_v_i32mf4(base: *const u32, bstride: u64, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv2i32.i64"]
        fn _vlse32_v_i32mf4(_poison: vint32mf4, base: *const i32, bstride: i64, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vlse32_v_i32mf4(poison!(), base as *const i32, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse32_v_i32mf2(base: *const u32, bstride: u64, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv4i32.i64"]
        fn _vlse32_v_i32mf2(_poison: vint32mf2, base: *const i32, bstride: i64, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vlse32_v_i32mf2(poison!(), base as *const i32, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse32_v_i32m1(base: *const u32, bstride: u64, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv8i32.i64"]
        fn _vlse32_v_i32m1(_poison: vint32m1, base: *const i32, bstride: i64, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vlse32_v_i32m1(poison!(), base as *const i32, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse32_v_i32m2(base: *const u32, bstride: u64, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv16i32.i64"]
        fn _vlse32_v_i32m2(_poison: vint32m2, base: *const i32, bstride: i64, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vlse32_v_i32m2(poison!(), base as *const i32, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse32_v_i32m4(base: *const u32, bstride: u64, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv32i32.i64"]
        fn _vlse32_v_i32m4(_poison: vint32m4, base: *const i32, bstride: i64, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vlse32_v_i32m4(poison!(), base as *const i32, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse32_v_i32m8(base: *const u32, bstride: u64, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv64i32.i64"]
        fn _vlse32_v_i32m8(_poison: vint32m8, base: *const i32, bstride: i64, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vlse32_v_i32m8(poison!(), base as *const i32, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse64_v_i64mf8(base: *const u64, bstride: u64, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv1i64.i64"]
        fn _vlse64_v_i64mf8(_poison: vint64mf8, base: *const i64, bstride: i64, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vlse64_v_i64mf8(poison!(), base as *const i64, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse64_v_i64mf4(base: *const u64, bstride: u64, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv2i64.i64"]
        fn _vlse64_v_i64mf4(_poison: vint64mf4, base: *const i64, bstride: i64, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vlse64_v_i64mf4(poison!(), base as *const i64, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse64_v_i64mf2(base: *const u64, bstride: u64, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv4i64.i64"]
        fn _vlse64_v_i64mf2(_poison: vint64mf2, base: *const i64, bstride: i64, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vlse64_v_i64mf2(poison!(), base as *const i64, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse64_v_i64m1(base: *const u64, bstride: u64, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv8i64.i64"]
        fn _vlse64_v_i64m1(_poison: vint64m1, base: *const i64, bstride: i64, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vlse64_v_i64m1(poison!(), base as *const i64, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse64_v_i64m2(base: *const u64, bstride: u64, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv16i64.i64"]
        fn _vlse64_v_i64m2(_poison: vint64m2, base: *const i64, bstride: i64, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vlse64_v_i64m2(poison!(), base as *const i64, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse64_v_i64m4(base: *const u64, bstride: u64, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv32i64.i64"]
        fn _vlse64_v_i64m4(_poison: vint64m4, base: *const i64, bstride: i64, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vlse64_v_i64m4(poison!(), base as *const i64, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse64_v_i64m8(base: *const u64, bstride: u64, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.nxv64i64.i64"]
        fn _vlse64_v_i64m8(_poison: vint64m8, base: *const i64, bstride: i64, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vlse64_v_i64m8(poison!(), base as *const i64, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse8_v_i8mf8_m(base: *const u8, bstride: u64, mask: vboolf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv1i8.i64"]
        fn _vlse8_v_i8mf8_m(_poison: vint8mf8, base: *const i8, bstride: i64, mask: vboolf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vlse8_v_i8mf8_m(poison!(), base as *const i8, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse8_v_i8mf4_m(base: *const u8, bstride: u64, mask: vboolf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv2i8.i64"]
        fn _vlse8_v_i8mf4_m(_poison: vint8mf4, base: *const i8, bstride: i64, mask: vboolf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vlse8_v_i8mf4_m(poison!(), base as *const i8, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse8_v_i8mf2_m(base: *const u8, bstride: u64, mask: vboolf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv4i8.i64"]
        fn _vlse8_v_i8mf2_m(_poison: vint8mf2, base: *const i8, bstride: i64, mask: vboolf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vlse8_v_i8mf2_m(poison!(), base as *const i8, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse8_v_i8m1_m(base: *const u8, bstride: u64, mask: vbool1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv8i8.i64"]
        fn _vlse8_v_i8m1_m(_poison: vint8m1, base: *const i8, bstride: i64, mask: vbool1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vlse8_v_i8m1_m(poison!(), base as *const i8, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse8_v_i8m2_m(base: *const u8, bstride: u64, mask: vbool2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv16i8.i64"]
        fn _vlse8_v_i8m2_m(_poison: vint8m2, base: *const i8, bstride: i64, mask: vbool2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vlse8_v_i8m2_m(poison!(), base as *const i8, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse8_v_i8m4_m(base: *const u8, bstride: u64, mask: vbool4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv32i8.i64"]
        fn _vlse8_v_i8m4_m(_poison: vint8m4, base: *const i8, bstride: i64, mask: vbool4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vlse8_v_i8m4_m(poison!(), base as *const i8, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse8_v_i8m8_m(base: *const u8, bstride: u64, mask: vbool8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv64i8.i64"]
        fn _vlse8_v_i8m8_m(_poison: vint8m8, base: *const i8, bstride: i64, mask: vbool8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vlse8_v_i8m8_m(poison!(), base as *const i8, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse16_v_i16mf8_m(base: *const u16, bstride: u64, mask: vboolf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv1i16.i64"]
        fn _vlse16_v_i16mf8_m(_poison: vint16mf8, base: *const i16, bstride: i64, mask: vboolf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vlse16_v_i16mf8_m(poison!(), base as *const i16, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse16_v_i16mf4_m(base: *const u16, bstride: u64, mask: vboolf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv2i16.i64"]
        fn _vlse16_v_i16mf4_m(_poison: vint16mf4, base: *const i16, bstride: i64, mask: vboolf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vlse16_v_i16mf4_m(poison!(), base as *const i16, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse16_v_i16mf2_m(base: *const u16, bstride: u64, mask: vboolf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv4i16.i64"]
        fn _vlse16_v_i16mf2_m(_poison: vint16mf2, base: *const i16, bstride: i64, mask: vboolf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vlse16_v_i16mf2_m(poison!(), base as *const i16, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse16_v_i16m1_m(base: *const u16, bstride: u64, mask: vbool1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv8i16.i64"]
        fn _vlse16_v_i16m1_m(_poison: vint16m1, base: *const i16, bstride: i64, mask: vbool1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vlse16_v_i16m1_m(poison!(), base as *const i16, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse16_v_i16m2_m(base: *const u16, bstride: u64, mask: vbool2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv16i16.i64"]
        fn _vlse16_v_i16m2_m(_poison: vint16m2, base: *const i16, bstride: i64, mask: vbool2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vlse16_v_i16m2_m(poison!(), base as *const i16, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse16_v_i16m4_m(base: *const u16, bstride: u64, mask: vbool4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv32i16.i64"]
        fn _vlse16_v_i16m4_m(_poison: vint16m4, base: *const i16, bstride: i64, mask: vbool4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vlse16_v_i16m4_m(poison!(), base as *const i16, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse16_v_i16m8_m(base: *const u16, bstride: u64, mask: vbool8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv64i16.i64"]
        fn _vlse16_v_i16m8_m(_poison: vint16m8, base: *const i16, bstride: i64, mask: vbool8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vlse16_v_i16m8_m(poison!(), base as *const i16, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse32_v_i32mf8_m(base: *const u32, bstride: u64, mask: vboolf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv1i32.i64"]
        fn _vlse32_v_i32mf8_m(_poison: vint32mf8, base: *const i32, bstride: i64, mask: vboolf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vlse32_v_i32mf8_m(poison!(), base as *const i32, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse32_v_i32mf4_m(base: *const u32, bstride: u64, mask: vboolf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv2i32.i64"]
        fn _vlse32_v_i32mf4_m(_poison: vint32mf4, base: *const i32, bstride: i64, mask: vboolf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vlse32_v_i32mf4_m(poison!(), base as *const i32, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse32_v_i32mf2_m(base: *const u32, bstride: u64, mask: vboolf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv4i32.i64"]
        fn _vlse32_v_i32mf2_m(_poison: vint32mf2, base: *const i32, bstride: i64, mask: vboolf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vlse32_v_i32mf2_m(poison!(), base as *const i32, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse32_v_i32m1_m(base: *const u32, bstride: u64, mask: vbool1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv8i32.i64"]
        fn _vlse32_v_i32m1_m(_poison: vint32m1, base: *const i32, bstride: i64, mask: vbool1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vlse32_v_i32m1_m(poison!(), base as *const i32, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse32_v_i32m2_m(base: *const u32, bstride: u64, mask: vbool2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv16i32.i64"]
        fn _vlse32_v_i32m2_m(_poison: vint32m2, base: *const i32, bstride: i64, mask: vbool2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vlse32_v_i32m2_m(poison!(), base as *const i32, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse32_v_i32m4_m(base: *const u32, bstride: u64, mask: vbool4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv32i32.i64"]
        fn _vlse32_v_i32m4_m(_poison: vint32m4, base: *const i32, bstride: i64, mask: vbool4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vlse32_v_i32m4_m(poison!(), base as *const i32, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse32_v_i32m8_m(base: *const u32, bstride: u64, mask: vbool8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv64i32.i64"]
        fn _vlse32_v_i32m8_m(_poison: vint32m8, base: *const i32, bstride: i64, mask: vbool8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vlse32_v_i32m8_m(poison!(), base as *const i32, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse64_v_i64mf8_m(base: *const u64, bstride: u64, mask: vboolf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv1i64.i64"]
        fn _vlse64_v_i64mf8_m(_poison: vint64mf8, base: *const i64, bstride: i64, mask: vboolf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vlse64_v_i64mf8_m(poison!(), base as *const i64, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse64_v_i64mf4_m(base: *const u64, bstride: u64, mask: vboolf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv2i64.i64"]
        fn _vlse64_v_i64mf4_m(_poison: vint64mf4, base: *const i64, bstride: i64, mask: vboolf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vlse64_v_i64mf4_m(poison!(), base as *const i64, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse64_v_i64mf2_m(base: *const u64, bstride: u64, mask: vboolf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv4i64.i64"]
        fn _vlse64_v_i64mf2_m(_poison: vint64mf2, base: *const i64, bstride: i64, mask: vboolf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vlse64_v_i64mf2_m(poison!(), base as *const i64, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse64_v_i64m1_m(base: *const u64, bstride: u64, mask: vbool1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv8i64.i64"]
        fn _vlse64_v_i64m1_m(_poison: vint64m1, base: *const i64, bstride: i64, mask: vbool1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vlse64_v_i64m1_m(poison!(), base as *const i64, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse64_v_i64m2_m(base: *const u64, bstride: u64, mask: vbool2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv16i64.i64"]
        fn _vlse64_v_i64m2_m(_poison: vint64m2, base: *const i64, bstride: i64, mask: vbool2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vlse64_v_i64m2_m(poison!(), base as *const i64, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse64_v_i64m4_m(base: *const u64, bstride: u64, mask: vbool4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv32i64.i64"]
        fn _vlse64_v_i64m4_m(_poison: vint64m4, base: *const i64, bstride: i64, mask: vbool4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vlse64_v_i64m4_m(poison!(), base as *const i64, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlse64_v_i64m8_m(base: *const u64, bstride: u64, mask: vbool8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlse.mask.nxv64i64.i64"]
        fn _vlse64_v_i64m8_m(_poison: vint64m8, base: *const i64, bstride: i64, mask: vbool8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vlse64_v_i64m8_m(poison!(), base as *const i64, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse8_v_i8mf8(vs: vint8mf8, base: *mut u8, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv1i8.i64"]
        fn _vsse8_v_i8mf8(vs: vint8mf8, base: *mut i8, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse8_v_i8mf8(vs, base as *mut i8, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse8_v_i8mf4(vs: vint8mf4, base: *mut u8, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv2i8.i64"]
        fn _vsse8_v_i8mf4(vs: vint8mf4, base: *mut i8, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse8_v_i8mf4(vs, base as *mut i8, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse8_v_i8mf2(vs: vint8mf2, base: *mut u8, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv4i8.i64"]
        fn _vsse8_v_i8mf2(vs: vint8mf2, base: *mut i8, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse8_v_i8mf2(vs, base as *mut i8, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse8_v_i8m1(vs: vint8m1, base: *mut u8, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv8i8.i64"]
        fn _vsse8_v_i8m1(vs: vint8m1, base: *mut i8, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse8_v_i8m1(vs, base as *mut i8, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse8_v_i8m2(vs: vint8m2, base: *mut u8, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv16i8.i64"]
        fn _vsse8_v_i8m2(vs: vint8m2, base: *mut i8, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse8_v_i8m2(vs, base as *mut i8, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse8_v_i8m4(vs: vint8m4, base: *mut u8, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv32i8.i64"]
        fn _vsse8_v_i8m4(vs: vint8m4, base: *mut i8, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse8_v_i8m4(vs, base as *mut i8, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse8_v_i8m8(vs: vint8m8, base: *mut u8, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv64i8.i64"]
        fn _vsse8_v_i8m8(vs: vint8m8, base: *mut i8, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse8_v_i8m8(vs, base as *mut i8, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse16_v_i16mf8(vs: vint16mf8, base: *mut u16, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv1i16.i64"]
        fn _vsse16_v_i16mf8(vs: vint16mf8, base: *mut i16, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse16_v_i16mf8(vs, base as *mut i16, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse16_v_i16mf4(vs: vint16mf4, base: *mut u16, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv2i16.i64"]
        fn _vsse16_v_i16mf4(vs: vint16mf4, base: *mut i16, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse16_v_i16mf4(vs, base as *mut i16, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse16_v_i16mf2(vs: vint16mf2, base: *mut u16, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv4i16.i64"]
        fn _vsse16_v_i16mf2(vs: vint16mf2, base: *mut i16, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse16_v_i16mf2(vs, base as *mut i16, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse16_v_i16m1(vs: vint16m1, base: *mut u16, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv8i16.i64"]
        fn _vsse16_v_i16m1(vs: vint16m1, base: *mut i16, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse16_v_i16m1(vs, base as *mut i16, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse16_v_i16m2(vs: vint16m2, base: *mut u16, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv16i16.i64"]
        fn _vsse16_v_i16m2(vs: vint16m2, base: *mut i16, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse16_v_i16m2(vs, base as *mut i16, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse16_v_i16m4(vs: vint16m4, base: *mut u16, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv32i16.i64"]
        fn _vsse16_v_i16m4(vs: vint16m4, base: *mut i16, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse16_v_i16m4(vs, base as *mut i16, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse16_v_i16m8(vs: vint16m8, base: *mut u16, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv64i16.i64"]
        fn _vsse16_v_i16m8(vs: vint16m8, base: *mut i16, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse16_v_i16m8(vs, base as *mut i16, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse32_v_i32mf8(vs: vint32mf8, base: *mut u32, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv1i32.i64"]
        fn _vsse32_v_i32mf8(vs: vint32mf8, base: *mut i32, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse32_v_i32mf8(vs, base as *mut i32, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse32_v_i32mf4(vs: vint32mf4, base: *mut u32, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv2i32.i64"]
        fn _vsse32_v_i32mf4(vs: vint32mf4, base: *mut i32, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse32_v_i32mf4(vs, base as *mut i32, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse32_v_i32mf2(vs: vint32mf2, base: *mut u32, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv4i32.i64"]
        fn _vsse32_v_i32mf2(vs: vint32mf2, base: *mut i32, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse32_v_i32mf2(vs, base as *mut i32, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse32_v_i32m1(vs: vint32m1, base: *mut u32, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv8i32.i64"]
        fn _vsse32_v_i32m1(vs: vint32m1, base: *mut i32, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse32_v_i32m1(vs, base as *mut i32, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse32_v_i32m2(vs: vint32m2, base: *mut u32, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv16i32.i64"]
        fn _vsse32_v_i32m2(vs: vint32m2, base: *mut i32, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse32_v_i32m2(vs, base as *mut i32, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse32_v_i32m4(vs: vint32m4, base: *mut u32, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv32i32.i64"]
        fn _vsse32_v_i32m4(vs: vint32m4, base: *mut i32, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse32_v_i32m4(vs, base as *mut i32, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse32_v_i32m8(vs: vint32m8, base: *mut u32, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv64i32.i64"]
        fn _vsse32_v_i32m8(vs: vint32m8, base: *mut i32, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse32_v_i32m8(vs, base as *mut i32, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse64_v_i64mf8(vs: vint64mf8, base: *mut u64, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv1i64.i64"]
        fn _vsse64_v_i64mf8(vs: vint64mf8, base: *mut i64, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse64_v_i64mf8(vs, base as *mut i64, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse64_v_i64mf4(vs: vint64mf4, base: *mut u64, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv2i64.i64"]
        fn _vsse64_v_i64mf4(vs: vint64mf4, base: *mut i64, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse64_v_i64mf4(vs, base as *mut i64, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse64_v_i64mf2(vs: vint64mf2, base: *mut u64, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv4i64.i64"]
        fn _vsse64_v_i64mf2(vs: vint64mf2, base: *mut i64, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse64_v_i64mf2(vs, base as *mut i64, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse64_v_i64m1(vs: vint64m1, base: *mut u64, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv8i64.i64"]
        fn _vsse64_v_i64m1(vs: vint64m1, base: *mut i64, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse64_v_i64m1(vs, base as *mut i64, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse64_v_i64m2(vs: vint64m2, base: *mut u64, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv16i64.i64"]
        fn _vsse64_v_i64m2(vs: vint64m2, base: *mut i64, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse64_v_i64m2(vs, base as *mut i64, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse64_v_i64m4(vs: vint64m4, base: *mut u64, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv32i64.i64"]
        fn _vsse64_v_i64m4(vs: vint64m4, base: *mut i64, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse64_v_i64m4(vs, base as *mut i64, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse64_v_i64m8(vs: vint64m8, base: *mut u64, bstride: u64, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.nxv64i64.i64"]
        fn _vsse64_v_i64m8(vs: vint64m8, base: *mut i64, bstride: i64, vl: isize);
    }
    
    unsafe {
        _vsse64_v_i64m8(vs, base as *mut i64, bstride as i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse8_v_i8mf8_m(vs: vint8mf8, base: *mut u8, bstride: u64, mask: vboolf8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv1i8.i64"]
        fn _vsse8_v_i8mf8_m(vs: vint8mf8, base: *mut i8, bstride: i64, mask: vboolf8, vl: isize);
    }
    
    unsafe {
        _vsse8_v_i8mf8_m(vs, base as *mut i8, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse8_v_i8mf4_m(vs: vint8mf4, base: *mut u8, bstride: u64, mask: vboolf4, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv2i8.i64"]
        fn _vsse8_v_i8mf4_m(vs: vint8mf4, base: *mut i8, bstride: i64, mask: vboolf4, vl: isize);
    }
    
    unsafe {
        _vsse8_v_i8mf4_m(vs, base as *mut i8, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse8_v_i8mf2_m(vs: vint8mf2, base: *mut u8, bstride: u64, mask: vboolf2, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv4i8.i64"]
        fn _vsse8_v_i8mf2_m(vs: vint8mf2, base: *mut i8, bstride: i64, mask: vboolf2, vl: isize);
    }
    
    unsafe {
        _vsse8_v_i8mf2_m(vs, base as *mut i8, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse8_v_i8m1_m(vs: vint8m1, base: *mut u8, bstride: u64, mask: vbool1, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv8i8.i64"]
        fn _vsse8_v_i8m1_m(vs: vint8m1, base: *mut i8, bstride: i64, mask: vbool1, vl: isize);
    }
    
    unsafe {
        _vsse8_v_i8m1_m(vs, base as *mut i8, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse8_v_i8m2_m(vs: vint8m2, base: *mut u8, bstride: u64, mask: vbool2, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv16i8.i64"]
        fn _vsse8_v_i8m2_m(vs: vint8m2, base: *mut i8, bstride: i64, mask: vbool2, vl: isize);
    }
    
    unsafe {
        _vsse8_v_i8m2_m(vs, base as *mut i8, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse8_v_i8m4_m(vs: vint8m4, base: *mut u8, bstride: u64, mask: vbool4, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv32i8.i64"]
        fn _vsse8_v_i8m4_m(vs: vint8m4, base: *mut i8, bstride: i64, mask: vbool4, vl: isize);
    }
    
    unsafe {
        _vsse8_v_i8m4_m(vs, base as *mut i8, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse8_v_i8m8_m(vs: vint8m8, base: *mut u8, bstride: u64, mask: vbool8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv64i8.i64"]
        fn _vsse8_v_i8m8_m(vs: vint8m8, base: *mut i8, bstride: i64, mask: vbool8, vl: isize);
    }
    
    unsafe {
        _vsse8_v_i8m8_m(vs, base as *mut i8, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse16_v_i16mf8_m(vs: vint16mf8, base: *mut u16, bstride: u64, mask: vboolf8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv1i16.i64"]
        fn _vsse16_v_i16mf8_m(vs: vint16mf8, base: *mut i16, bstride: i64, mask: vboolf8, vl: isize);
    }
    
    unsafe {
        _vsse16_v_i16mf8_m(vs, base as *mut i16, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse16_v_i16mf4_m(vs: vint16mf4, base: *mut u16, bstride: u64, mask: vboolf4, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv2i16.i64"]
        fn _vsse16_v_i16mf4_m(vs: vint16mf4, base: *mut i16, bstride: i64, mask: vboolf4, vl: isize);
    }
    
    unsafe {
        _vsse16_v_i16mf4_m(vs, base as *mut i16, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse16_v_i16mf2_m(vs: vint16mf2, base: *mut u16, bstride: u64, mask: vboolf2, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv4i16.i64"]
        fn _vsse16_v_i16mf2_m(vs: vint16mf2, base: *mut i16, bstride: i64, mask: vboolf2, vl: isize);
    }
    
    unsafe {
        _vsse16_v_i16mf2_m(vs, base as *mut i16, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse16_v_i16m1_m(vs: vint16m1, base: *mut u16, bstride: u64, mask: vbool1, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv8i16.i64"]
        fn _vsse16_v_i16m1_m(vs: vint16m1, base: *mut i16, bstride: i64, mask: vbool1, vl: isize);
    }
    
    unsafe {
        _vsse16_v_i16m1_m(vs, base as *mut i16, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse16_v_i16m2_m(vs: vint16m2, base: *mut u16, bstride: u64, mask: vbool2, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv16i16.i64"]
        fn _vsse16_v_i16m2_m(vs: vint16m2, base: *mut i16, bstride: i64, mask: vbool2, vl: isize);
    }
    
    unsafe {
        _vsse16_v_i16m2_m(vs, base as *mut i16, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse16_v_i16m4_m(vs: vint16m4, base: *mut u16, bstride: u64, mask: vbool4, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv32i16.i64"]
        fn _vsse16_v_i16m4_m(vs: vint16m4, base: *mut i16, bstride: i64, mask: vbool4, vl: isize);
    }
    
    unsafe {
        _vsse16_v_i16m4_m(vs, base as *mut i16, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse16_v_i16m8_m(vs: vint16m8, base: *mut u16, bstride: u64, mask: vbool8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv64i16.i64"]
        fn _vsse16_v_i16m8_m(vs: vint16m8, base: *mut i16, bstride: i64, mask: vbool8, vl: isize);
    }
    
    unsafe {
        _vsse16_v_i16m8_m(vs, base as *mut i16, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse32_v_i32mf8_m(vs: vint32mf8, base: *mut u32, bstride: u64, mask: vboolf8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv1i32.i64"]
        fn _vsse32_v_i32mf8_m(vs: vint32mf8, base: *mut i32, bstride: i64, mask: vboolf8, vl: isize);
    }
    
    unsafe {
        _vsse32_v_i32mf8_m(vs, base as *mut i32, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse32_v_i32mf4_m(vs: vint32mf4, base: *mut u32, bstride: u64, mask: vboolf4, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv2i32.i64"]
        fn _vsse32_v_i32mf4_m(vs: vint32mf4, base: *mut i32, bstride: i64, mask: vboolf4, vl: isize);
    }
    
    unsafe {
        _vsse32_v_i32mf4_m(vs, base as *mut i32, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse32_v_i32mf2_m(vs: vint32mf2, base: *mut u32, bstride: u64, mask: vboolf2, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv4i32.i64"]
        fn _vsse32_v_i32mf2_m(vs: vint32mf2, base: *mut i32, bstride: i64, mask: vboolf2, vl: isize);
    }
    
    unsafe {
        _vsse32_v_i32mf2_m(vs, base as *mut i32, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse32_v_i32m1_m(vs: vint32m1, base: *mut u32, bstride: u64, mask: vbool1, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv8i32.i64"]
        fn _vsse32_v_i32m1_m(vs: vint32m1, base: *mut i32, bstride: i64, mask: vbool1, vl: isize);
    }
    
    unsafe {
        _vsse32_v_i32m1_m(vs, base as *mut i32, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse32_v_i32m2_m(vs: vint32m2, base: *mut u32, bstride: u64, mask: vbool2, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv16i32.i64"]
        fn _vsse32_v_i32m2_m(vs: vint32m2, base: *mut i32, bstride: i64, mask: vbool2, vl: isize);
    }
    
    unsafe {
        _vsse32_v_i32m2_m(vs, base as *mut i32, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse32_v_i32m4_m(vs: vint32m4, base: *mut u32, bstride: u64, mask: vbool4, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv32i32.i64"]
        fn _vsse32_v_i32m4_m(vs: vint32m4, base: *mut i32, bstride: i64, mask: vbool4, vl: isize);
    }
    
    unsafe {
        _vsse32_v_i32m4_m(vs, base as *mut i32, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse32_v_i32m8_m(vs: vint32m8, base: *mut u32, bstride: u64, mask: vbool8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv64i32.i64"]
        fn _vsse32_v_i32m8_m(vs: vint32m8, base: *mut i32, bstride: i64, mask: vbool8, vl: isize);
    }
    
    unsafe {
        _vsse32_v_i32m8_m(vs, base as *mut i32, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse64_v_i64mf8_m(vs: vint64mf8, base: *mut u64, bstride: u64, mask: vboolf8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv1i64.i64"]
        fn _vsse64_v_i64mf8_m(vs: vint64mf8, base: *mut i64, bstride: i64, mask: vboolf8, vl: isize);
    }
    
    unsafe {
        _vsse64_v_i64mf8_m(vs, base as *mut i64, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse64_v_i64mf4_m(vs: vint64mf4, base: *mut u64, bstride: u64, mask: vboolf4, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv2i64.i64"]
        fn _vsse64_v_i64mf4_m(vs: vint64mf4, base: *mut i64, bstride: i64, mask: vboolf4, vl: isize);
    }
    
    unsafe {
        _vsse64_v_i64mf4_m(vs, base as *mut i64, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse64_v_i64mf2_m(vs: vint64mf2, base: *mut u64, bstride: u64, mask: vboolf2, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv4i64.i64"]
        fn _vsse64_v_i64mf2_m(vs: vint64mf2, base: *mut i64, bstride: i64, mask: vboolf2, vl: isize);
    }
    
    unsafe {
        _vsse64_v_i64mf2_m(vs, base as *mut i64, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse64_v_i64m1_m(vs: vint64m1, base: *mut u64, bstride: u64, mask: vbool1, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv8i64.i64"]
        fn _vsse64_v_i64m1_m(vs: vint64m1, base: *mut i64, bstride: i64, mask: vbool1, vl: isize);
    }
    
    unsafe {
        _vsse64_v_i64m1_m(vs, base as *mut i64, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse64_v_i64m2_m(vs: vint64m2, base: *mut u64, bstride: u64, mask: vbool2, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv16i64.i64"]
        fn _vsse64_v_i64m2_m(vs: vint64m2, base: *mut i64, bstride: i64, mask: vbool2, vl: isize);
    }
    
    unsafe {
        _vsse64_v_i64m2_m(vs, base as *mut i64, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse64_v_i64m4_m(vs: vint64m4, base: *mut u64, bstride: u64, mask: vbool4, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv32i64.i64"]
        fn _vsse64_v_i64m4_m(vs: vint64m4, base: *mut i64, bstride: i64, mask: vbool4, vl: isize);
    }
    
    unsafe {
        _vsse64_v_i64m4_m(vs, base as *mut i64, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsse64_v_i64m8_m(vs: vint64m8, base: *mut u64, bstride: u64, mask: vbool8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsse.mask.nxv64i64.i64"]
        fn _vsse64_v_i64m8_m(vs: vint64m8, base: *mut i64, bstride: i64, mask: vbool8, vl: isize);
    }
    
    unsafe {
        _vsse64_v_i64m8_m(vs, base as *mut i64, bstride as i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8ff_v_i8mf8(base: *const u8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv1i8.i64"]
        fn _vle8ff_v_i8mf8(_poison: vint8mf8, base: *const i8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vle8ff_v_i8mf8(poison!(), base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8ff_v_i8mf4(base: *const u8, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv2i8.i64"]
        fn _vle8ff_v_i8mf4(_poison: vint8mf4, base: *const i8, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vle8ff_v_i8mf4(poison!(), base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8ff_v_i8mf2(base: *const u8, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv4i8.i64"]
        fn _vle8ff_v_i8mf2(_poison: vint8mf2, base: *const i8, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vle8ff_v_i8mf2(poison!(), base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8ff_v_i8m1(base: *const u8, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv8i8.i64"]
        fn _vle8ff_v_i8m1(_poison: vint8m1, base: *const i8, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vle8ff_v_i8m1(poison!(), base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8ff_v_i8m2(base: *const u8, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv16i8.i64"]
        fn _vle8ff_v_i8m2(_poison: vint8m2, base: *const i8, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vle8ff_v_i8m2(poison!(), base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8ff_v_i8m4(base: *const u8, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv32i8.i64"]
        fn _vle8ff_v_i8m4(_poison: vint8m4, base: *const i8, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vle8ff_v_i8m4(poison!(), base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8ff_v_i8m8(base: *const u8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv64i8.i64"]
        fn _vle8ff_v_i8m8(_poison: vint8m8, base: *const i8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vle8ff_v_i8m8(poison!(), base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16ff_v_i16mf8(base: *const u16, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv1i16.i64"]
        fn _vle16ff_v_i16mf8(_poison: vint16mf8, base: *const i16, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vle16ff_v_i16mf8(poison!(), base as *const i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16ff_v_i16mf4(base: *const u16, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv2i16.i64"]
        fn _vle16ff_v_i16mf4(_poison: vint16mf4, base: *const i16, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vle16ff_v_i16mf4(poison!(), base as *const i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16ff_v_i16mf2(base: *const u16, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv4i16.i64"]
        fn _vle16ff_v_i16mf2(_poison: vint16mf2, base: *const i16, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vle16ff_v_i16mf2(poison!(), base as *const i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16ff_v_i16m1(base: *const u16, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv8i16.i64"]
        fn _vle16ff_v_i16m1(_poison: vint16m1, base: *const i16, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vle16ff_v_i16m1(poison!(), base as *const i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16ff_v_i16m2(base: *const u16, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv16i16.i64"]
        fn _vle16ff_v_i16m2(_poison: vint16m2, base: *const i16, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vle16ff_v_i16m2(poison!(), base as *const i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16ff_v_i16m4(base: *const u16, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv32i16.i64"]
        fn _vle16ff_v_i16m4(_poison: vint16m4, base: *const i16, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vle16ff_v_i16m4(poison!(), base as *const i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16ff_v_i16m8(base: *const u16, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv64i16.i64"]
        fn _vle16ff_v_i16m8(_poison: vint16m8, base: *const i16, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vle16ff_v_i16m8(poison!(), base as *const i16, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32ff_v_i32mf8(base: *const u32, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv1i32.i64"]
        fn _vle32ff_v_i32mf8(_poison: vint32mf8, base: *const i32, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vle32ff_v_i32mf8(poison!(), base as *const i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32ff_v_i32mf4(base: *const u32, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv2i32.i64"]
        fn _vle32ff_v_i32mf4(_poison: vint32mf4, base: *const i32, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vle32ff_v_i32mf4(poison!(), base as *const i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32ff_v_i32mf2(base: *const u32, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv4i32.i64"]
        fn _vle32ff_v_i32mf2(_poison: vint32mf2, base: *const i32, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vle32ff_v_i32mf2(poison!(), base as *const i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32ff_v_i32m1(base: *const u32, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv8i32.i64"]
        fn _vle32ff_v_i32m1(_poison: vint32m1, base: *const i32, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vle32ff_v_i32m1(poison!(), base as *const i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32ff_v_i32m2(base: *const u32, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv16i32.i64"]
        fn _vle32ff_v_i32m2(_poison: vint32m2, base: *const i32, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vle32ff_v_i32m2(poison!(), base as *const i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32ff_v_i32m4(base: *const u32, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv32i32.i64"]
        fn _vle32ff_v_i32m4(_poison: vint32m4, base: *const i32, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vle32ff_v_i32m4(poison!(), base as *const i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32ff_v_i32m8(base: *const u32, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv64i32.i64"]
        fn _vle32ff_v_i32m8(_poison: vint32m8, base: *const i32, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vle32ff_v_i32m8(poison!(), base as *const i32, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64ff_v_i64mf8(base: *const u64, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv1i64.i64"]
        fn _vle64ff_v_i64mf8(_poison: vint64mf8, base: *const i64, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vle64ff_v_i64mf8(poison!(), base as *const i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64ff_v_i64mf4(base: *const u64, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv2i64.i64"]
        fn _vle64ff_v_i64mf4(_poison: vint64mf4, base: *const i64, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vle64ff_v_i64mf4(poison!(), base as *const i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64ff_v_i64mf2(base: *const u64, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv4i64.i64"]
        fn _vle64ff_v_i64mf2(_poison: vint64mf2, base: *const i64, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vle64ff_v_i64mf2(poison!(), base as *const i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64ff_v_i64m1(base: *const u64, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv8i64.i64"]
        fn _vle64ff_v_i64m1(_poison: vint64m1, base: *const i64, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vle64ff_v_i64m1(poison!(), base as *const i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64ff_v_i64m2(base: *const u64, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv16i64.i64"]
        fn _vle64ff_v_i64m2(_poison: vint64m2, base: *const i64, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vle64ff_v_i64m2(poison!(), base as *const i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64ff_v_i64m4(base: *const u64, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv32i64.i64"]
        fn _vle64ff_v_i64m4(_poison: vint64m4, base: *const i64, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vle64ff_v_i64m4(poison!(), base as *const i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64ff_v_i64m8(base: *const u64, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.nxv64i64.i64"]
        fn _vle64ff_v_i64m8(_poison: vint64m8, base: *const i64, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vle64ff_v_i64m8(poison!(), base as *const i64, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8ff_v_i8mf8_m(base: *const u8, mask: vboolf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv1i8.i64"]
        fn _vle8ff_v_i8mf8_m(_poison: vint8mf8, base: *const i8, mask: vboolf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vle8ff_v_i8mf8_m(poison!(), base as *const i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8ff_v_i8mf4_m(base: *const u8, mask: vboolf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv2i8.i64"]
        fn _vle8ff_v_i8mf4_m(_poison: vint8mf4, base: *const i8, mask: vboolf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vle8ff_v_i8mf4_m(poison!(), base as *const i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8ff_v_i8mf2_m(base: *const u8, mask: vboolf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv4i8.i64"]
        fn _vle8ff_v_i8mf2_m(_poison: vint8mf2, base: *const i8, mask: vboolf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vle8ff_v_i8mf2_m(poison!(), base as *const i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8ff_v_i8m1_m(base: *const u8, mask: vbool1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv8i8.i64"]
        fn _vle8ff_v_i8m1_m(_poison: vint8m1, base: *const i8, mask: vbool1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vle8ff_v_i8m1_m(poison!(), base as *const i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8ff_v_i8m2_m(base: *const u8, mask: vbool2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv16i8.i64"]
        fn _vle8ff_v_i8m2_m(_poison: vint8m2, base: *const i8, mask: vbool2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vle8ff_v_i8m2_m(poison!(), base as *const i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8ff_v_i8m4_m(base: *const u8, mask: vbool4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv32i8.i64"]
        fn _vle8ff_v_i8m4_m(_poison: vint8m4, base: *const i8, mask: vbool4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vle8ff_v_i8m4_m(poison!(), base as *const i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle8ff_v_i8m8_m(base: *const u8, mask: vbool8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv64i8.i64"]
        fn _vle8ff_v_i8m8_m(_poison: vint8m8, base: *const i8, mask: vbool8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vle8ff_v_i8m8_m(poison!(), base as *const i8, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16ff_v_i16mf8_m(base: *const u16, mask: vboolf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv1i16.i64"]
        fn _vle16ff_v_i16mf8_m(_poison: vint16mf8, base: *const i16, mask: vboolf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vle16ff_v_i16mf8_m(poison!(), base as *const i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16ff_v_i16mf4_m(base: *const u16, mask: vboolf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv2i16.i64"]
        fn _vle16ff_v_i16mf4_m(_poison: vint16mf4, base: *const i16, mask: vboolf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vle16ff_v_i16mf4_m(poison!(), base as *const i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16ff_v_i16mf2_m(base: *const u16, mask: vboolf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv4i16.i64"]
        fn _vle16ff_v_i16mf2_m(_poison: vint16mf2, base: *const i16, mask: vboolf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vle16ff_v_i16mf2_m(poison!(), base as *const i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16ff_v_i16m1_m(base: *const u16, mask: vbool1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv8i16.i64"]
        fn _vle16ff_v_i16m1_m(_poison: vint16m1, base: *const i16, mask: vbool1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vle16ff_v_i16m1_m(poison!(), base as *const i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16ff_v_i16m2_m(base: *const u16, mask: vbool2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv16i16.i64"]
        fn _vle16ff_v_i16m2_m(_poison: vint16m2, base: *const i16, mask: vbool2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vle16ff_v_i16m2_m(poison!(), base as *const i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16ff_v_i16m4_m(base: *const u16, mask: vbool4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv32i16.i64"]
        fn _vle16ff_v_i16m4_m(_poison: vint16m4, base: *const i16, mask: vbool4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vle16ff_v_i16m4_m(poison!(), base as *const i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle16ff_v_i16m8_m(base: *const u16, mask: vbool8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv64i16.i64"]
        fn _vle16ff_v_i16m8_m(_poison: vint16m8, base: *const i16, mask: vbool8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vle16ff_v_i16m8_m(poison!(), base as *const i16, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32ff_v_i32mf8_m(base: *const u32, mask: vboolf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv1i32.i64"]
        fn _vle32ff_v_i32mf8_m(_poison: vint32mf8, base: *const i32, mask: vboolf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vle32ff_v_i32mf8_m(poison!(), base as *const i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32ff_v_i32mf4_m(base: *const u32, mask: vboolf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv2i32.i64"]
        fn _vle32ff_v_i32mf4_m(_poison: vint32mf4, base: *const i32, mask: vboolf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vle32ff_v_i32mf4_m(poison!(), base as *const i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32ff_v_i32mf2_m(base: *const u32, mask: vboolf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv4i32.i64"]
        fn _vle32ff_v_i32mf2_m(_poison: vint32mf2, base: *const i32, mask: vboolf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vle32ff_v_i32mf2_m(poison!(), base as *const i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32ff_v_i32m1_m(base: *const u32, mask: vbool1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv8i32.i64"]
        fn _vle32ff_v_i32m1_m(_poison: vint32m1, base: *const i32, mask: vbool1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vle32ff_v_i32m1_m(poison!(), base as *const i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32ff_v_i32m2_m(base: *const u32, mask: vbool2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv16i32.i64"]
        fn _vle32ff_v_i32m2_m(_poison: vint32m2, base: *const i32, mask: vbool2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vle32ff_v_i32m2_m(poison!(), base as *const i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32ff_v_i32m4_m(base: *const u32, mask: vbool4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv32i32.i64"]
        fn _vle32ff_v_i32m4_m(_poison: vint32m4, base: *const i32, mask: vbool4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vle32ff_v_i32m4_m(poison!(), base as *const i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle32ff_v_i32m8_m(base: *const u32, mask: vbool8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv64i32.i64"]
        fn _vle32ff_v_i32m8_m(_poison: vint32m8, base: *const i32, mask: vbool8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vle32ff_v_i32m8_m(poison!(), base as *const i32, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64ff_v_i64mf8_m(base: *const u64, mask: vboolf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv1i64.i64"]
        fn _vle64ff_v_i64mf8_m(_poison: vint64mf8, base: *const i64, mask: vboolf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vle64ff_v_i64mf8_m(poison!(), base as *const i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64ff_v_i64mf4_m(base: *const u64, mask: vboolf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv2i64.i64"]
        fn _vle64ff_v_i64mf4_m(_poison: vint64mf4, base: *const i64, mask: vboolf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vle64ff_v_i64mf4_m(poison!(), base as *const i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64ff_v_i64mf2_m(base: *const u64, mask: vboolf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv4i64.i64"]
        fn _vle64ff_v_i64mf2_m(_poison: vint64mf2, base: *const i64, mask: vboolf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vle64ff_v_i64mf2_m(poison!(), base as *const i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64ff_v_i64m1_m(base: *const u64, mask: vbool1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv8i64.i64"]
        fn _vle64ff_v_i64m1_m(_poison: vint64m1, base: *const i64, mask: vbool1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vle64ff_v_i64m1_m(poison!(), base as *const i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64ff_v_i64m2_m(base: *const u64, mask: vbool2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv16i64.i64"]
        fn _vle64ff_v_i64m2_m(_poison: vint64m2, base: *const i64, mask: vbool2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vle64ff_v_i64m2_m(poison!(), base as *const i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64ff_v_i64m4_m(base: *const u64, mask: vbool4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv32i64.i64"]
        fn _vle64ff_v_i64m4_m(_poison: vint64m4, base: *const i64, mask: vbool4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vle64ff_v_i64m4_m(poison!(), base as *const i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vle64ff_v_i64m8_m(base: *const u64, mask: vbool8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vleff.mask.nxv64i64.i64"]
        fn _vle64ff_v_i64m8_m(_poison: vint64m8, base: *const i64, mask: vbool8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vle64ff_v_i64m8_m(poison!(), base as *const i64, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i8mf8(base: *const u8, bindex: vint8mf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv1i8.nxv1i8.i64"]
        fn _vloxei8_v_i8mf8(_poison: vint8mf8, base: *const i8, bindex: vint8mf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vloxei8_v_i8mf8(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i8mf4(base: *const u8, bindex: vint8mf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv2i8.nxv2i8.i64"]
        fn _vloxei8_v_i8mf4(_poison: vint8mf4, base: *const i8, bindex: vint8mf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vloxei8_v_i8mf4(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i8mf2(base: *const u8, bindex: vint8mf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv4i8.nxv4i8.i64"]
        fn _vloxei8_v_i8mf2(_poison: vint8mf2, base: *const i8, bindex: vint8mf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vloxei8_v_i8mf2(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i8m1(base: *const u8, bindex: vint8m1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv8i8.nxv8i8.i64"]
        fn _vloxei8_v_i8m1(_poison: vint8m1, base: *const i8, bindex: vint8m1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vloxei8_v_i8m1(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i8m2(base: *const u8, bindex: vint8m2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv16i8.nxv16i8.i64"]
        fn _vloxei8_v_i8m2(_poison: vint8m2, base: *const i8, bindex: vint8m2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vloxei8_v_i8m2(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i8m4(base: *const u8, bindex: vint8m4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv32i8.nxv32i8.i64"]
        fn _vloxei8_v_i8m4(_poison: vint8m4, base: *const i8, bindex: vint8m4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vloxei8_v_i8m4(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i8m8(base: *const u8, bindex: vint8m8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv64i8.nxv64i8.i64"]
        fn _vloxei8_v_i8m8(_poison: vint8m8, base: *const i8, bindex: vint8m8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vloxei8_v_i8m8(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i16mf8(base: *const u16, bindex: vint16mf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv1i16.nxv1i8.i64"]
        fn _vloxei8_v_i16mf8(_poison: vint16mf8, base: *const i16, bindex: vint16mf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vloxei8_v_i16mf8(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i16mf4(base: *const u16, bindex: vint16mf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv2i16.nxv2i8.i64"]
        fn _vloxei8_v_i16mf4(_poison: vint16mf4, base: *const i16, bindex: vint16mf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vloxei8_v_i16mf4(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i16mf2(base: *const u16, bindex: vint16mf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv4i16.nxv4i8.i64"]
        fn _vloxei8_v_i16mf2(_poison: vint16mf2, base: *const i16, bindex: vint16mf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vloxei8_v_i16mf2(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i16m1(base: *const u16, bindex: vint16m1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv8i16.nxv8i8.i64"]
        fn _vloxei8_v_i16m1(_poison: vint16m1, base: *const i16, bindex: vint16m1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vloxei8_v_i16m1(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i16m2(base: *const u16, bindex: vint16m2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv16i16.nxv16i8.i64"]
        fn _vloxei8_v_i16m2(_poison: vint16m2, base: *const i16, bindex: vint16m2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vloxei8_v_i16m2(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i16m4(base: *const u16, bindex: vint16m4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv32i16.nxv32i8.i64"]
        fn _vloxei8_v_i16m4(_poison: vint16m4, base: *const i16, bindex: vint16m4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vloxei8_v_i16m4(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i16m8(base: *const u16, bindex: vint16m8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv64i16.nxv64i8.i64"]
        fn _vloxei8_v_i16m8(_poison: vint16m8, base: *const i16, bindex: vint16m8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vloxei8_v_i16m8(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i32mf8(base: *const u32, bindex: vint32mf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv1i32.nxv1i8.i64"]
        fn _vloxei8_v_i32mf8(_poison: vint32mf8, base: *const i32, bindex: vint32mf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vloxei8_v_i32mf8(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i32mf4(base: *const u32, bindex: vint32mf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv2i32.nxv2i8.i64"]
        fn _vloxei8_v_i32mf4(_poison: vint32mf4, base: *const i32, bindex: vint32mf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vloxei8_v_i32mf4(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i32mf2(base: *const u32, bindex: vint32mf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv4i32.nxv4i8.i64"]
        fn _vloxei8_v_i32mf2(_poison: vint32mf2, base: *const i32, bindex: vint32mf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vloxei8_v_i32mf2(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i32m1(base: *const u32, bindex: vint32m1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv8i32.nxv8i8.i64"]
        fn _vloxei8_v_i32m1(_poison: vint32m1, base: *const i32, bindex: vint32m1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vloxei8_v_i32m1(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i32m2(base: *const u32, bindex: vint32m2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv16i32.nxv16i8.i64"]
        fn _vloxei8_v_i32m2(_poison: vint32m2, base: *const i32, bindex: vint32m2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vloxei8_v_i32m2(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i32m4(base: *const u32, bindex: vint32m4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv32i32.nxv32i8.i64"]
        fn _vloxei8_v_i32m4(_poison: vint32m4, base: *const i32, bindex: vint32m4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vloxei8_v_i32m4(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i32m8(base: *const u32, bindex: vint32m8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv64i32.nxv64i8.i64"]
        fn _vloxei8_v_i32m8(_poison: vint32m8, base: *const i32, bindex: vint32m8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vloxei8_v_i32m8(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i64mf8(base: *const u64, bindex: vint64mf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv1i64.nxv1i8.i64"]
        fn _vloxei8_v_i64mf8(_poison: vint64mf8, base: *const i64, bindex: vint64mf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vloxei8_v_i64mf8(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i64mf4(base: *const u64, bindex: vint64mf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv2i64.nxv2i8.i64"]
        fn _vloxei8_v_i64mf4(_poison: vint64mf4, base: *const i64, bindex: vint64mf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vloxei8_v_i64mf4(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i64mf2(base: *const u64, bindex: vint64mf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv4i64.nxv4i8.i64"]
        fn _vloxei8_v_i64mf2(_poison: vint64mf2, base: *const i64, bindex: vint64mf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vloxei8_v_i64mf2(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i64m1(base: *const u64, bindex: vint64m1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv8i64.nxv8i8.i64"]
        fn _vloxei8_v_i64m1(_poison: vint64m1, base: *const i64, bindex: vint64m1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vloxei8_v_i64m1(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i64m2(base: *const u64, bindex: vint64m2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv16i64.nxv16i8.i64"]
        fn _vloxei8_v_i64m2(_poison: vint64m2, base: *const i64, bindex: vint64m2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vloxei8_v_i64m2(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i64m4(base: *const u64, bindex: vint64m4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv32i64.nxv32i8.i64"]
        fn _vloxei8_v_i64m4(_poison: vint64m4, base: *const i64, bindex: vint64m4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vloxei8_v_i64m4(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i64m8(base: *const u64, bindex: vint64m8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv64i64.nxv64i8.i64"]
        fn _vloxei8_v_i64m8(_poison: vint64m8, base: *const i64, bindex: vint64m8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vloxei8_v_i64m8(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i8mf8(base: *const u8, bindex: vint8mf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv1i8.nxv1i16.i64"]
        fn _vloxei16_v_i8mf8(_poison: vint8mf8, base: *const i8, bindex: vint8mf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vloxei16_v_i8mf8(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i8mf4(base: *const u8, bindex: vint8mf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv2i8.nxv2i16.i64"]
        fn _vloxei16_v_i8mf4(_poison: vint8mf4, base: *const i8, bindex: vint8mf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vloxei16_v_i8mf4(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i8mf2(base: *const u8, bindex: vint8mf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv4i8.nxv4i16.i64"]
        fn _vloxei16_v_i8mf2(_poison: vint8mf2, base: *const i8, bindex: vint8mf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vloxei16_v_i8mf2(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i8m1(base: *const u8, bindex: vint8m1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv8i8.nxv8i16.i64"]
        fn _vloxei16_v_i8m1(_poison: vint8m1, base: *const i8, bindex: vint8m1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vloxei16_v_i8m1(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i8m2(base: *const u8, bindex: vint8m2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv16i8.nxv16i16.i64"]
        fn _vloxei16_v_i8m2(_poison: vint8m2, base: *const i8, bindex: vint8m2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vloxei16_v_i8m2(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i8m4(base: *const u8, bindex: vint8m4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv32i8.nxv32i16.i64"]
        fn _vloxei16_v_i8m4(_poison: vint8m4, base: *const i8, bindex: vint8m4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vloxei16_v_i8m4(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i8m8(base: *const u8, bindex: vint8m8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv64i8.nxv64i16.i64"]
        fn _vloxei16_v_i8m8(_poison: vint8m8, base: *const i8, bindex: vint8m8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vloxei16_v_i8m8(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i16mf8(base: *const u16, bindex: vint16mf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv1i16.nxv1i16.i64"]
        fn _vloxei16_v_i16mf8(_poison: vint16mf8, base: *const i16, bindex: vint16mf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vloxei16_v_i16mf8(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i16mf4(base: *const u16, bindex: vint16mf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv2i16.nxv2i16.i64"]
        fn _vloxei16_v_i16mf4(_poison: vint16mf4, base: *const i16, bindex: vint16mf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vloxei16_v_i16mf4(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i16mf2(base: *const u16, bindex: vint16mf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv4i16.nxv4i16.i64"]
        fn _vloxei16_v_i16mf2(_poison: vint16mf2, base: *const i16, bindex: vint16mf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vloxei16_v_i16mf2(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i16m1(base: *const u16, bindex: vint16m1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv8i16.nxv8i16.i64"]
        fn _vloxei16_v_i16m1(_poison: vint16m1, base: *const i16, bindex: vint16m1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vloxei16_v_i16m1(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i16m2(base: *const u16, bindex: vint16m2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv16i16.nxv16i16.i64"]
        fn _vloxei16_v_i16m2(_poison: vint16m2, base: *const i16, bindex: vint16m2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vloxei16_v_i16m2(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i16m4(base: *const u16, bindex: vint16m4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv32i16.nxv32i16.i64"]
        fn _vloxei16_v_i16m4(_poison: vint16m4, base: *const i16, bindex: vint16m4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vloxei16_v_i16m4(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i16m8(base: *const u16, bindex: vint16m8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv64i16.nxv64i16.i64"]
        fn _vloxei16_v_i16m8(_poison: vint16m8, base: *const i16, bindex: vint16m8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vloxei16_v_i16m8(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i32mf8(base: *const u32, bindex: vint32mf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv1i32.nxv1i16.i64"]
        fn _vloxei16_v_i32mf8(_poison: vint32mf8, base: *const i32, bindex: vint32mf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vloxei16_v_i32mf8(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i32mf4(base: *const u32, bindex: vint32mf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv2i32.nxv2i16.i64"]
        fn _vloxei16_v_i32mf4(_poison: vint32mf4, base: *const i32, bindex: vint32mf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vloxei16_v_i32mf4(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i32mf2(base: *const u32, bindex: vint32mf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv4i32.nxv4i16.i64"]
        fn _vloxei16_v_i32mf2(_poison: vint32mf2, base: *const i32, bindex: vint32mf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vloxei16_v_i32mf2(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i32m1(base: *const u32, bindex: vint32m1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv8i32.nxv8i16.i64"]
        fn _vloxei16_v_i32m1(_poison: vint32m1, base: *const i32, bindex: vint32m1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vloxei16_v_i32m1(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i32m2(base: *const u32, bindex: vint32m2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv16i32.nxv16i16.i64"]
        fn _vloxei16_v_i32m2(_poison: vint32m2, base: *const i32, bindex: vint32m2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vloxei16_v_i32m2(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i32m4(base: *const u32, bindex: vint32m4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv32i32.nxv32i16.i64"]
        fn _vloxei16_v_i32m4(_poison: vint32m4, base: *const i32, bindex: vint32m4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vloxei16_v_i32m4(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i32m8(base: *const u32, bindex: vint32m8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv64i32.nxv64i16.i64"]
        fn _vloxei16_v_i32m8(_poison: vint32m8, base: *const i32, bindex: vint32m8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vloxei16_v_i32m8(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i64mf8(base: *const u64, bindex: vint64mf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv1i64.nxv1i16.i64"]
        fn _vloxei16_v_i64mf8(_poison: vint64mf8, base: *const i64, bindex: vint64mf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vloxei16_v_i64mf8(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i64mf4(base: *const u64, bindex: vint64mf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv2i64.nxv2i16.i64"]
        fn _vloxei16_v_i64mf4(_poison: vint64mf4, base: *const i64, bindex: vint64mf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vloxei16_v_i64mf4(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i64mf2(base: *const u64, bindex: vint64mf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv4i64.nxv4i16.i64"]
        fn _vloxei16_v_i64mf2(_poison: vint64mf2, base: *const i64, bindex: vint64mf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vloxei16_v_i64mf2(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i64m1(base: *const u64, bindex: vint64m1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv8i64.nxv8i16.i64"]
        fn _vloxei16_v_i64m1(_poison: vint64m1, base: *const i64, bindex: vint64m1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vloxei16_v_i64m1(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i64m2(base: *const u64, bindex: vint64m2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv16i64.nxv16i16.i64"]
        fn _vloxei16_v_i64m2(_poison: vint64m2, base: *const i64, bindex: vint64m2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vloxei16_v_i64m2(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i64m4(base: *const u64, bindex: vint64m4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv32i64.nxv32i16.i64"]
        fn _vloxei16_v_i64m4(_poison: vint64m4, base: *const i64, bindex: vint64m4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vloxei16_v_i64m4(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i64m8(base: *const u64, bindex: vint64m8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv64i64.nxv64i16.i64"]
        fn _vloxei16_v_i64m8(_poison: vint64m8, base: *const i64, bindex: vint64m8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vloxei16_v_i64m8(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i8mf8(base: *const u8, bindex: vint8mf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv1i8.nxv1i32.i64"]
        fn _vloxei32_v_i8mf8(_poison: vint8mf8, base: *const i8, bindex: vint8mf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vloxei32_v_i8mf8(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i8mf4(base: *const u8, bindex: vint8mf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv2i8.nxv2i32.i64"]
        fn _vloxei32_v_i8mf4(_poison: vint8mf4, base: *const i8, bindex: vint8mf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vloxei32_v_i8mf4(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i8mf2(base: *const u8, bindex: vint8mf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv4i8.nxv4i32.i64"]
        fn _vloxei32_v_i8mf2(_poison: vint8mf2, base: *const i8, bindex: vint8mf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vloxei32_v_i8mf2(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i8m1(base: *const u8, bindex: vint8m1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv8i8.nxv8i32.i64"]
        fn _vloxei32_v_i8m1(_poison: vint8m1, base: *const i8, bindex: vint8m1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vloxei32_v_i8m1(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i8m2(base: *const u8, bindex: vint8m2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv16i8.nxv16i32.i64"]
        fn _vloxei32_v_i8m2(_poison: vint8m2, base: *const i8, bindex: vint8m2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vloxei32_v_i8m2(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i8m4(base: *const u8, bindex: vint8m4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv32i8.nxv32i32.i64"]
        fn _vloxei32_v_i8m4(_poison: vint8m4, base: *const i8, bindex: vint8m4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vloxei32_v_i8m4(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i8m8(base: *const u8, bindex: vint8m8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv64i8.nxv64i32.i64"]
        fn _vloxei32_v_i8m8(_poison: vint8m8, base: *const i8, bindex: vint8m8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vloxei32_v_i8m8(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i16mf8(base: *const u16, bindex: vint16mf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv1i16.nxv1i32.i64"]
        fn _vloxei32_v_i16mf8(_poison: vint16mf8, base: *const i16, bindex: vint16mf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vloxei32_v_i16mf8(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i16mf4(base: *const u16, bindex: vint16mf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv2i16.nxv2i32.i64"]
        fn _vloxei32_v_i16mf4(_poison: vint16mf4, base: *const i16, bindex: vint16mf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vloxei32_v_i16mf4(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i16mf2(base: *const u16, bindex: vint16mf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv4i16.nxv4i32.i64"]
        fn _vloxei32_v_i16mf2(_poison: vint16mf2, base: *const i16, bindex: vint16mf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vloxei32_v_i16mf2(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i16m1(base: *const u16, bindex: vint16m1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv8i16.nxv8i32.i64"]
        fn _vloxei32_v_i16m1(_poison: vint16m1, base: *const i16, bindex: vint16m1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vloxei32_v_i16m1(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i16m2(base: *const u16, bindex: vint16m2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv16i16.nxv16i32.i64"]
        fn _vloxei32_v_i16m2(_poison: vint16m2, base: *const i16, bindex: vint16m2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vloxei32_v_i16m2(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i16m4(base: *const u16, bindex: vint16m4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv32i16.nxv32i32.i64"]
        fn _vloxei32_v_i16m4(_poison: vint16m4, base: *const i16, bindex: vint16m4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vloxei32_v_i16m4(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i16m8(base: *const u16, bindex: vint16m8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv64i16.nxv64i32.i64"]
        fn _vloxei32_v_i16m8(_poison: vint16m8, base: *const i16, bindex: vint16m8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vloxei32_v_i16m8(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i32mf8(base: *const u32, bindex: vint32mf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv1i32.nxv1i32.i64"]
        fn _vloxei32_v_i32mf8(_poison: vint32mf8, base: *const i32, bindex: vint32mf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vloxei32_v_i32mf8(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i32mf4(base: *const u32, bindex: vint32mf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv2i32.nxv2i32.i64"]
        fn _vloxei32_v_i32mf4(_poison: vint32mf4, base: *const i32, bindex: vint32mf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vloxei32_v_i32mf4(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i32mf2(base: *const u32, bindex: vint32mf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv4i32.nxv4i32.i64"]
        fn _vloxei32_v_i32mf2(_poison: vint32mf2, base: *const i32, bindex: vint32mf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vloxei32_v_i32mf2(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i32m1(base: *const u32, bindex: vint32m1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv8i32.nxv8i32.i64"]
        fn _vloxei32_v_i32m1(_poison: vint32m1, base: *const i32, bindex: vint32m1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vloxei32_v_i32m1(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i32m2(base: *const u32, bindex: vint32m2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv16i32.nxv16i32.i64"]
        fn _vloxei32_v_i32m2(_poison: vint32m2, base: *const i32, bindex: vint32m2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vloxei32_v_i32m2(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i32m4(base: *const u32, bindex: vint32m4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv32i32.nxv32i32.i64"]
        fn _vloxei32_v_i32m4(_poison: vint32m4, base: *const i32, bindex: vint32m4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vloxei32_v_i32m4(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i32m8(base: *const u32, bindex: vint32m8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv64i32.nxv64i32.i64"]
        fn _vloxei32_v_i32m8(_poison: vint32m8, base: *const i32, bindex: vint32m8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vloxei32_v_i32m8(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i64mf8(base: *const u64, bindex: vint64mf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv1i64.nxv1i32.i64"]
        fn _vloxei32_v_i64mf8(_poison: vint64mf8, base: *const i64, bindex: vint64mf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vloxei32_v_i64mf8(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i64mf4(base: *const u64, bindex: vint64mf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv2i64.nxv2i32.i64"]
        fn _vloxei32_v_i64mf4(_poison: vint64mf4, base: *const i64, bindex: vint64mf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vloxei32_v_i64mf4(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i64mf2(base: *const u64, bindex: vint64mf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv4i64.nxv4i32.i64"]
        fn _vloxei32_v_i64mf2(_poison: vint64mf2, base: *const i64, bindex: vint64mf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vloxei32_v_i64mf2(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i64m1(base: *const u64, bindex: vint64m1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv8i64.nxv8i32.i64"]
        fn _vloxei32_v_i64m1(_poison: vint64m1, base: *const i64, bindex: vint64m1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vloxei32_v_i64m1(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i64m2(base: *const u64, bindex: vint64m2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv16i64.nxv16i32.i64"]
        fn _vloxei32_v_i64m2(_poison: vint64m2, base: *const i64, bindex: vint64m2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vloxei32_v_i64m2(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i64m4(base: *const u64, bindex: vint64m4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv32i64.nxv32i32.i64"]
        fn _vloxei32_v_i64m4(_poison: vint64m4, base: *const i64, bindex: vint64m4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vloxei32_v_i64m4(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i64m8(base: *const u64, bindex: vint64m8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv64i64.nxv64i32.i64"]
        fn _vloxei32_v_i64m8(_poison: vint64m8, base: *const i64, bindex: vint64m8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vloxei32_v_i64m8(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i8mf8(base: *const u8, bindex: vint8mf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv1i8.nxv1i64.i64"]
        fn _vloxei64_v_i8mf8(_poison: vint8mf8, base: *const i8, bindex: vint8mf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vloxei64_v_i8mf8(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i8mf4(base: *const u8, bindex: vint8mf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv2i8.nxv2i64.i64"]
        fn _vloxei64_v_i8mf4(_poison: vint8mf4, base: *const i8, bindex: vint8mf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vloxei64_v_i8mf4(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i8mf2(base: *const u8, bindex: vint8mf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv4i8.nxv4i64.i64"]
        fn _vloxei64_v_i8mf2(_poison: vint8mf2, base: *const i8, bindex: vint8mf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vloxei64_v_i8mf2(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i8m1(base: *const u8, bindex: vint8m1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv8i8.nxv8i64.i64"]
        fn _vloxei64_v_i8m1(_poison: vint8m1, base: *const i8, bindex: vint8m1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vloxei64_v_i8m1(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i8m2(base: *const u8, bindex: vint8m2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv16i8.nxv16i64.i64"]
        fn _vloxei64_v_i8m2(_poison: vint8m2, base: *const i8, bindex: vint8m2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vloxei64_v_i8m2(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i8m4(base: *const u8, bindex: vint8m4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv32i8.nxv32i64.i64"]
        fn _vloxei64_v_i8m4(_poison: vint8m4, base: *const i8, bindex: vint8m4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vloxei64_v_i8m4(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i8m8(base: *const u8, bindex: vint8m8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv64i8.nxv64i64.i64"]
        fn _vloxei64_v_i8m8(_poison: vint8m8, base: *const i8, bindex: vint8m8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vloxei64_v_i8m8(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i16mf8(base: *const u16, bindex: vint16mf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv1i16.nxv1i64.i64"]
        fn _vloxei64_v_i16mf8(_poison: vint16mf8, base: *const i16, bindex: vint16mf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vloxei64_v_i16mf8(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i16mf4(base: *const u16, bindex: vint16mf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv2i16.nxv2i64.i64"]
        fn _vloxei64_v_i16mf4(_poison: vint16mf4, base: *const i16, bindex: vint16mf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vloxei64_v_i16mf4(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i16mf2(base: *const u16, bindex: vint16mf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv4i16.nxv4i64.i64"]
        fn _vloxei64_v_i16mf2(_poison: vint16mf2, base: *const i16, bindex: vint16mf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vloxei64_v_i16mf2(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i16m1(base: *const u16, bindex: vint16m1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv8i16.nxv8i64.i64"]
        fn _vloxei64_v_i16m1(_poison: vint16m1, base: *const i16, bindex: vint16m1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vloxei64_v_i16m1(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i16m2(base: *const u16, bindex: vint16m2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv16i16.nxv16i64.i64"]
        fn _vloxei64_v_i16m2(_poison: vint16m2, base: *const i16, bindex: vint16m2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vloxei64_v_i16m2(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i16m4(base: *const u16, bindex: vint16m4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv32i16.nxv32i64.i64"]
        fn _vloxei64_v_i16m4(_poison: vint16m4, base: *const i16, bindex: vint16m4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vloxei64_v_i16m4(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i16m8(base: *const u16, bindex: vint16m8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv64i16.nxv64i64.i64"]
        fn _vloxei64_v_i16m8(_poison: vint16m8, base: *const i16, bindex: vint16m8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vloxei64_v_i16m8(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i32mf8(base: *const u32, bindex: vint32mf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv1i32.nxv1i64.i64"]
        fn _vloxei64_v_i32mf8(_poison: vint32mf8, base: *const i32, bindex: vint32mf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vloxei64_v_i32mf8(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i32mf4(base: *const u32, bindex: vint32mf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv2i32.nxv2i64.i64"]
        fn _vloxei64_v_i32mf4(_poison: vint32mf4, base: *const i32, bindex: vint32mf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vloxei64_v_i32mf4(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i32mf2(base: *const u32, bindex: vint32mf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv4i32.nxv4i64.i64"]
        fn _vloxei64_v_i32mf2(_poison: vint32mf2, base: *const i32, bindex: vint32mf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vloxei64_v_i32mf2(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i32m1(base: *const u32, bindex: vint32m1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv8i32.nxv8i64.i64"]
        fn _vloxei64_v_i32m1(_poison: vint32m1, base: *const i32, bindex: vint32m1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vloxei64_v_i32m1(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i32m2(base: *const u32, bindex: vint32m2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv16i32.nxv16i64.i64"]
        fn _vloxei64_v_i32m2(_poison: vint32m2, base: *const i32, bindex: vint32m2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vloxei64_v_i32m2(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i32m4(base: *const u32, bindex: vint32m4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv32i32.nxv32i64.i64"]
        fn _vloxei64_v_i32m4(_poison: vint32m4, base: *const i32, bindex: vint32m4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vloxei64_v_i32m4(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i32m8(base: *const u32, bindex: vint32m8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv64i32.nxv64i64.i64"]
        fn _vloxei64_v_i32m8(_poison: vint32m8, base: *const i32, bindex: vint32m8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vloxei64_v_i32m8(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i64mf8(base: *const u64, bindex: vint64mf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv1i64.nxv1i64.i64"]
        fn _vloxei64_v_i64mf8(_poison: vint64mf8, base: *const i64, bindex: vint64mf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vloxei64_v_i64mf8(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i64mf4(base: *const u64, bindex: vint64mf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv2i64.nxv2i64.i64"]
        fn _vloxei64_v_i64mf4(_poison: vint64mf4, base: *const i64, bindex: vint64mf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vloxei64_v_i64mf4(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i64mf2(base: *const u64, bindex: vint64mf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv4i64.nxv4i64.i64"]
        fn _vloxei64_v_i64mf2(_poison: vint64mf2, base: *const i64, bindex: vint64mf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vloxei64_v_i64mf2(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i64m1(base: *const u64, bindex: vint64m1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv8i64.nxv8i64.i64"]
        fn _vloxei64_v_i64m1(_poison: vint64m1, base: *const i64, bindex: vint64m1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vloxei64_v_i64m1(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i64m2(base: *const u64, bindex: vint64m2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv16i64.nxv16i64.i64"]
        fn _vloxei64_v_i64m2(_poison: vint64m2, base: *const i64, bindex: vint64m2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vloxei64_v_i64m2(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i64m4(base: *const u64, bindex: vint64m4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv32i64.nxv32i64.i64"]
        fn _vloxei64_v_i64m4(_poison: vint64m4, base: *const i64, bindex: vint64m4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vloxei64_v_i64m4(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i64m8(base: *const u64, bindex: vint64m8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.nxv64i64.nxv64i64.i64"]
        fn _vloxei64_v_i64m8(_poison: vint64m8, base: *const i64, bindex: vint64m8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vloxei64_v_i64m8(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i8mf8_m(base: *const u8, bindex: vint8mf8, mask: vboolf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv1i8.nxv1i8.i64"]
        fn _vloxei8_v_i8mf8_m(_poison: vint8mf8, base: *const i8, bindex: vint8mf8, mask: vboolf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vloxei8_v_i8mf8_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i8mf4_m(base: *const u8, bindex: vint8mf4, mask: vboolf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv2i8.nxv2i8.i64"]
        fn _vloxei8_v_i8mf4_m(_poison: vint8mf4, base: *const i8, bindex: vint8mf4, mask: vboolf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vloxei8_v_i8mf4_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i8mf2_m(base: *const u8, bindex: vint8mf2, mask: vboolf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv4i8.nxv4i8.i64"]
        fn _vloxei8_v_i8mf2_m(_poison: vint8mf2, base: *const i8, bindex: vint8mf2, mask: vboolf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vloxei8_v_i8mf2_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i8m1_m(base: *const u8, bindex: vint8m1, mask: vbool1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv8i8.nxv8i8.i64"]
        fn _vloxei8_v_i8m1_m(_poison: vint8m1, base: *const i8, bindex: vint8m1, mask: vbool1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vloxei8_v_i8m1_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i8m2_m(base: *const u8, bindex: vint8m2, mask: vbool2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv16i8.nxv16i8.i64"]
        fn _vloxei8_v_i8m2_m(_poison: vint8m2, base: *const i8, bindex: vint8m2, mask: vbool2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vloxei8_v_i8m2_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i8m4_m(base: *const u8, bindex: vint8m4, mask: vbool4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv32i8.nxv32i8.i64"]
        fn _vloxei8_v_i8m4_m(_poison: vint8m4, base: *const i8, bindex: vint8m4, mask: vbool4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vloxei8_v_i8m4_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i8m8_m(base: *const u8, bindex: vint8m8, mask: vbool8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv64i8.nxv64i8.i64"]
        fn _vloxei8_v_i8m8_m(_poison: vint8m8, base: *const i8, bindex: vint8m8, mask: vbool8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vloxei8_v_i8m8_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i16mf8_m(base: *const u16, bindex: vint16mf8, mask: vboolf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv1i16.nxv1i8.i64"]
        fn _vloxei8_v_i16mf8_m(_poison: vint16mf8, base: *const i16, bindex: vint16mf8, mask: vboolf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vloxei8_v_i16mf8_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i16mf4_m(base: *const u16, bindex: vint16mf4, mask: vboolf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv2i16.nxv2i8.i64"]
        fn _vloxei8_v_i16mf4_m(_poison: vint16mf4, base: *const i16, bindex: vint16mf4, mask: vboolf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vloxei8_v_i16mf4_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i16mf2_m(base: *const u16, bindex: vint16mf2, mask: vboolf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv4i16.nxv4i8.i64"]
        fn _vloxei8_v_i16mf2_m(_poison: vint16mf2, base: *const i16, bindex: vint16mf2, mask: vboolf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vloxei8_v_i16mf2_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i16m1_m(base: *const u16, bindex: vint16m1, mask: vbool1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv8i16.nxv8i8.i64"]
        fn _vloxei8_v_i16m1_m(_poison: vint16m1, base: *const i16, bindex: vint16m1, mask: vbool1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vloxei8_v_i16m1_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i16m2_m(base: *const u16, bindex: vint16m2, mask: vbool2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv16i16.nxv16i8.i64"]
        fn _vloxei8_v_i16m2_m(_poison: vint16m2, base: *const i16, bindex: vint16m2, mask: vbool2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vloxei8_v_i16m2_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i16m4_m(base: *const u16, bindex: vint16m4, mask: vbool4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv32i16.nxv32i8.i64"]
        fn _vloxei8_v_i16m4_m(_poison: vint16m4, base: *const i16, bindex: vint16m4, mask: vbool4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vloxei8_v_i16m4_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i16m8_m(base: *const u16, bindex: vint16m8, mask: vbool8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv64i16.nxv64i8.i64"]
        fn _vloxei8_v_i16m8_m(_poison: vint16m8, base: *const i16, bindex: vint16m8, mask: vbool8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vloxei8_v_i16m8_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i32mf8_m(base: *const u32, bindex: vint32mf8, mask: vboolf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv1i32.nxv1i8.i64"]
        fn _vloxei8_v_i32mf8_m(_poison: vint32mf8, base: *const i32, bindex: vint32mf8, mask: vboolf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vloxei8_v_i32mf8_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i32mf4_m(base: *const u32, bindex: vint32mf4, mask: vboolf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv2i32.nxv2i8.i64"]
        fn _vloxei8_v_i32mf4_m(_poison: vint32mf4, base: *const i32, bindex: vint32mf4, mask: vboolf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vloxei8_v_i32mf4_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i32mf2_m(base: *const u32, bindex: vint32mf2, mask: vboolf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv4i32.nxv4i8.i64"]
        fn _vloxei8_v_i32mf2_m(_poison: vint32mf2, base: *const i32, bindex: vint32mf2, mask: vboolf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vloxei8_v_i32mf2_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i32m1_m(base: *const u32, bindex: vint32m1, mask: vbool1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv8i32.nxv8i8.i64"]
        fn _vloxei8_v_i32m1_m(_poison: vint32m1, base: *const i32, bindex: vint32m1, mask: vbool1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vloxei8_v_i32m1_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i32m2_m(base: *const u32, bindex: vint32m2, mask: vbool2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv16i32.nxv16i8.i64"]
        fn _vloxei8_v_i32m2_m(_poison: vint32m2, base: *const i32, bindex: vint32m2, mask: vbool2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vloxei8_v_i32m2_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i32m4_m(base: *const u32, bindex: vint32m4, mask: vbool4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv32i32.nxv32i8.i64"]
        fn _vloxei8_v_i32m4_m(_poison: vint32m4, base: *const i32, bindex: vint32m4, mask: vbool4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vloxei8_v_i32m4_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i32m8_m(base: *const u32, bindex: vint32m8, mask: vbool8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv64i32.nxv64i8.i64"]
        fn _vloxei8_v_i32m8_m(_poison: vint32m8, base: *const i32, bindex: vint32m8, mask: vbool8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vloxei8_v_i32m8_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i64mf8_m(base: *const u64, bindex: vint64mf8, mask: vboolf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv1i64.nxv1i8.i64"]
        fn _vloxei8_v_i64mf8_m(_poison: vint64mf8, base: *const i64, bindex: vint64mf8, mask: vboolf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vloxei8_v_i64mf8_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i64mf4_m(base: *const u64, bindex: vint64mf4, mask: vboolf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv2i64.nxv2i8.i64"]
        fn _vloxei8_v_i64mf4_m(_poison: vint64mf4, base: *const i64, bindex: vint64mf4, mask: vboolf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vloxei8_v_i64mf4_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i64mf2_m(base: *const u64, bindex: vint64mf2, mask: vboolf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv4i64.nxv4i8.i64"]
        fn _vloxei8_v_i64mf2_m(_poison: vint64mf2, base: *const i64, bindex: vint64mf2, mask: vboolf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vloxei8_v_i64mf2_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i64m1_m(base: *const u64, bindex: vint64m1, mask: vbool1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv8i64.nxv8i8.i64"]
        fn _vloxei8_v_i64m1_m(_poison: vint64m1, base: *const i64, bindex: vint64m1, mask: vbool1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vloxei8_v_i64m1_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i64m2_m(base: *const u64, bindex: vint64m2, mask: vbool2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv16i64.nxv16i8.i64"]
        fn _vloxei8_v_i64m2_m(_poison: vint64m2, base: *const i64, bindex: vint64m2, mask: vbool2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vloxei8_v_i64m2_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i64m4_m(base: *const u64, bindex: vint64m4, mask: vbool4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv32i64.nxv32i8.i64"]
        fn _vloxei8_v_i64m4_m(_poison: vint64m4, base: *const i64, bindex: vint64m4, mask: vbool4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vloxei8_v_i64m4_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei8_v_i64m8_m(base: *const u64, bindex: vint64m8, mask: vbool8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv64i64.nxv64i8.i64"]
        fn _vloxei8_v_i64m8_m(_poison: vint64m8, base: *const i64, bindex: vint64m8, mask: vbool8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vloxei8_v_i64m8_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i8mf8_m(base: *const u8, bindex: vint8mf8, mask: vboolf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv1i8.nxv1i16.i64"]
        fn _vloxei16_v_i8mf8_m(_poison: vint8mf8, base: *const i8, bindex: vint8mf8, mask: vboolf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vloxei16_v_i8mf8_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i8mf4_m(base: *const u8, bindex: vint8mf4, mask: vboolf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv2i8.nxv2i16.i64"]
        fn _vloxei16_v_i8mf4_m(_poison: vint8mf4, base: *const i8, bindex: vint8mf4, mask: vboolf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vloxei16_v_i8mf4_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i8mf2_m(base: *const u8, bindex: vint8mf2, mask: vboolf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv4i8.nxv4i16.i64"]
        fn _vloxei16_v_i8mf2_m(_poison: vint8mf2, base: *const i8, bindex: vint8mf2, mask: vboolf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vloxei16_v_i8mf2_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i8m1_m(base: *const u8, bindex: vint8m1, mask: vbool1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv8i8.nxv8i16.i64"]
        fn _vloxei16_v_i8m1_m(_poison: vint8m1, base: *const i8, bindex: vint8m1, mask: vbool1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vloxei16_v_i8m1_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i8m2_m(base: *const u8, bindex: vint8m2, mask: vbool2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv16i8.nxv16i16.i64"]
        fn _vloxei16_v_i8m2_m(_poison: vint8m2, base: *const i8, bindex: vint8m2, mask: vbool2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vloxei16_v_i8m2_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i8m4_m(base: *const u8, bindex: vint8m4, mask: vbool4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv32i8.nxv32i16.i64"]
        fn _vloxei16_v_i8m4_m(_poison: vint8m4, base: *const i8, bindex: vint8m4, mask: vbool4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vloxei16_v_i8m4_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i8m8_m(base: *const u8, bindex: vint8m8, mask: vbool8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv64i8.nxv64i16.i64"]
        fn _vloxei16_v_i8m8_m(_poison: vint8m8, base: *const i8, bindex: vint8m8, mask: vbool8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vloxei16_v_i8m8_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i16mf8_m(base: *const u16, bindex: vint16mf8, mask: vboolf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv1i16.nxv1i16.i64"]
        fn _vloxei16_v_i16mf8_m(_poison: vint16mf8, base: *const i16, bindex: vint16mf8, mask: vboolf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vloxei16_v_i16mf8_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i16mf4_m(base: *const u16, bindex: vint16mf4, mask: vboolf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv2i16.nxv2i16.i64"]
        fn _vloxei16_v_i16mf4_m(_poison: vint16mf4, base: *const i16, bindex: vint16mf4, mask: vboolf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vloxei16_v_i16mf4_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i16mf2_m(base: *const u16, bindex: vint16mf2, mask: vboolf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv4i16.nxv4i16.i64"]
        fn _vloxei16_v_i16mf2_m(_poison: vint16mf2, base: *const i16, bindex: vint16mf2, mask: vboolf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vloxei16_v_i16mf2_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i16m1_m(base: *const u16, bindex: vint16m1, mask: vbool1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv8i16.nxv8i16.i64"]
        fn _vloxei16_v_i16m1_m(_poison: vint16m1, base: *const i16, bindex: vint16m1, mask: vbool1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vloxei16_v_i16m1_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i16m2_m(base: *const u16, bindex: vint16m2, mask: vbool2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv16i16.nxv16i16.i64"]
        fn _vloxei16_v_i16m2_m(_poison: vint16m2, base: *const i16, bindex: vint16m2, mask: vbool2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vloxei16_v_i16m2_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i16m4_m(base: *const u16, bindex: vint16m4, mask: vbool4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv32i16.nxv32i16.i64"]
        fn _vloxei16_v_i16m4_m(_poison: vint16m4, base: *const i16, bindex: vint16m4, mask: vbool4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vloxei16_v_i16m4_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i16m8_m(base: *const u16, bindex: vint16m8, mask: vbool8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv64i16.nxv64i16.i64"]
        fn _vloxei16_v_i16m8_m(_poison: vint16m8, base: *const i16, bindex: vint16m8, mask: vbool8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vloxei16_v_i16m8_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i32mf8_m(base: *const u32, bindex: vint32mf8, mask: vboolf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv1i32.nxv1i16.i64"]
        fn _vloxei16_v_i32mf8_m(_poison: vint32mf8, base: *const i32, bindex: vint32mf8, mask: vboolf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vloxei16_v_i32mf8_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i32mf4_m(base: *const u32, bindex: vint32mf4, mask: vboolf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv2i32.nxv2i16.i64"]
        fn _vloxei16_v_i32mf4_m(_poison: vint32mf4, base: *const i32, bindex: vint32mf4, mask: vboolf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vloxei16_v_i32mf4_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i32mf2_m(base: *const u32, bindex: vint32mf2, mask: vboolf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv4i32.nxv4i16.i64"]
        fn _vloxei16_v_i32mf2_m(_poison: vint32mf2, base: *const i32, bindex: vint32mf2, mask: vboolf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vloxei16_v_i32mf2_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i32m1_m(base: *const u32, bindex: vint32m1, mask: vbool1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv8i32.nxv8i16.i64"]
        fn _vloxei16_v_i32m1_m(_poison: vint32m1, base: *const i32, bindex: vint32m1, mask: vbool1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vloxei16_v_i32m1_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i32m2_m(base: *const u32, bindex: vint32m2, mask: vbool2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv16i32.nxv16i16.i64"]
        fn _vloxei16_v_i32m2_m(_poison: vint32m2, base: *const i32, bindex: vint32m2, mask: vbool2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vloxei16_v_i32m2_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i32m4_m(base: *const u32, bindex: vint32m4, mask: vbool4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv32i32.nxv32i16.i64"]
        fn _vloxei16_v_i32m4_m(_poison: vint32m4, base: *const i32, bindex: vint32m4, mask: vbool4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vloxei16_v_i32m4_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i32m8_m(base: *const u32, bindex: vint32m8, mask: vbool8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv64i32.nxv64i16.i64"]
        fn _vloxei16_v_i32m8_m(_poison: vint32m8, base: *const i32, bindex: vint32m8, mask: vbool8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vloxei16_v_i32m8_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i64mf8_m(base: *const u64, bindex: vint64mf8, mask: vboolf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv1i64.nxv1i16.i64"]
        fn _vloxei16_v_i64mf8_m(_poison: vint64mf8, base: *const i64, bindex: vint64mf8, mask: vboolf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vloxei16_v_i64mf8_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i64mf4_m(base: *const u64, bindex: vint64mf4, mask: vboolf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv2i64.nxv2i16.i64"]
        fn _vloxei16_v_i64mf4_m(_poison: vint64mf4, base: *const i64, bindex: vint64mf4, mask: vboolf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vloxei16_v_i64mf4_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i64mf2_m(base: *const u64, bindex: vint64mf2, mask: vboolf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv4i64.nxv4i16.i64"]
        fn _vloxei16_v_i64mf2_m(_poison: vint64mf2, base: *const i64, bindex: vint64mf2, mask: vboolf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vloxei16_v_i64mf2_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i64m1_m(base: *const u64, bindex: vint64m1, mask: vbool1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv8i64.nxv8i16.i64"]
        fn _vloxei16_v_i64m1_m(_poison: vint64m1, base: *const i64, bindex: vint64m1, mask: vbool1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vloxei16_v_i64m1_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i64m2_m(base: *const u64, bindex: vint64m2, mask: vbool2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv16i64.nxv16i16.i64"]
        fn _vloxei16_v_i64m2_m(_poison: vint64m2, base: *const i64, bindex: vint64m2, mask: vbool2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vloxei16_v_i64m2_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i64m4_m(base: *const u64, bindex: vint64m4, mask: vbool4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv32i64.nxv32i16.i64"]
        fn _vloxei16_v_i64m4_m(_poison: vint64m4, base: *const i64, bindex: vint64m4, mask: vbool4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vloxei16_v_i64m4_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei16_v_i64m8_m(base: *const u64, bindex: vint64m8, mask: vbool8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv64i64.nxv64i16.i64"]
        fn _vloxei16_v_i64m8_m(_poison: vint64m8, base: *const i64, bindex: vint64m8, mask: vbool8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vloxei16_v_i64m8_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i8mf8_m(base: *const u8, bindex: vint8mf8, mask: vboolf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv1i8.nxv1i32.i64"]
        fn _vloxei32_v_i8mf8_m(_poison: vint8mf8, base: *const i8, bindex: vint8mf8, mask: vboolf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vloxei32_v_i8mf8_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i8mf4_m(base: *const u8, bindex: vint8mf4, mask: vboolf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv2i8.nxv2i32.i64"]
        fn _vloxei32_v_i8mf4_m(_poison: vint8mf4, base: *const i8, bindex: vint8mf4, mask: vboolf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vloxei32_v_i8mf4_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i8mf2_m(base: *const u8, bindex: vint8mf2, mask: vboolf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv4i8.nxv4i32.i64"]
        fn _vloxei32_v_i8mf2_m(_poison: vint8mf2, base: *const i8, bindex: vint8mf2, mask: vboolf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vloxei32_v_i8mf2_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i8m1_m(base: *const u8, bindex: vint8m1, mask: vbool1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv8i8.nxv8i32.i64"]
        fn _vloxei32_v_i8m1_m(_poison: vint8m1, base: *const i8, bindex: vint8m1, mask: vbool1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vloxei32_v_i8m1_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i8m2_m(base: *const u8, bindex: vint8m2, mask: vbool2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv16i8.nxv16i32.i64"]
        fn _vloxei32_v_i8m2_m(_poison: vint8m2, base: *const i8, bindex: vint8m2, mask: vbool2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vloxei32_v_i8m2_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i8m4_m(base: *const u8, bindex: vint8m4, mask: vbool4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv32i8.nxv32i32.i64"]
        fn _vloxei32_v_i8m4_m(_poison: vint8m4, base: *const i8, bindex: vint8m4, mask: vbool4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vloxei32_v_i8m4_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i8m8_m(base: *const u8, bindex: vint8m8, mask: vbool8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv64i8.nxv64i32.i64"]
        fn _vloxei32_v_i8m8_m(_poison: vint8m8, base: *const i8, bindex: vint8m8, mask: vbool8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vloxei32_v_i8m8_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i16mf8_m(base: *const u16, bindex: vint16mf8, mask: vboolf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv1i16.nxv1i32.i64"]
        fn _vloxei32_v_i16mf8_m(_poison: vint16mf8, base: *const i16, bindex: vint16mf8, mask: vboolf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vloxei32_v_i16mf8_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i16mf4_m(base: *const u16, bindex: vint16mf4, mask: vboolf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv2i16.nxv2i32.i64"]
        fn _vloxei32_v_i16mf4_m(_poison: vint16mf4, base: *const i16, bindex: vint16mf4, mask: vboolf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vloxei32_v_i16mf4_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i16mf2_m(base: *const u16, bindex: vint16mf2, mask: vboolf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv4i16.nxv4i32.i64"]
        fn _vloxei32_v_i16mf2_m(_poison: vint16mf2, base: *const i16, bindex: vint16mf2, mask: vboolf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vloxei32_v_i16mf2_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i16m1_m(base: *const u16, bindex: vint16m1, mask: vbool1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv8i16.nxv8i32.i64"]
        fn _vloxei32_v_i16m1_m(_poison: vint16m1, base: *const i16, bindex: vint16m1, mask: vbool1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vloxei32_v_i16m1_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i16m2_m(base: *const u16, bindex: vint16m2, mask: vbool2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv16i16.nxv16i32.i64"]
        fn _vloxei32_v_i16m2_m(_poison: vint16m2, base: *const i16, bindex: vint16m2, mask: vbool2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vloxei32_v_i16m2_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i16m4_m(base: *const u16, bindex: vint16m4, mask: vbool4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv32i16.nxv32i32.i64"]
        fn _vloxei32_v_i16m4_m(_poison: vint16m4, base: *const i16, bindex: vint16m4, mask: vbool4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vloxei32_v_i16m4_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i16m8_m(base: *const u16, bindex: vint16m8, mask: vbool8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv64i16.nxv64i32.i64"]
        fn _vloxei32_v_i16m8_m(_poison: vint16m8, base: *const i16, bindex: vint16m8, mask: vbool8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vloxei32_v_i16m8_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i32mf8_m(base: *const u32, bindex: vint32mf8, mask: vboolf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv1i32.nxv1i32.i64"]
        fn _vloxei32_v_i32mf8_m(_poison: vint32mf8, base: *const i32, bindex: vint32mf8, mask: vboolf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vloxei32_v_i32mf8_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i32mf4_m(base: *const u32, bindex: vint32mf4, mask: vboolf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv2i32.nxv2i32.i64"]
        fn _vloxei32_v_i32mf4_m(_poison: vint32mf4, base: *const i32, bindex: vint32mf4, mask: vboolf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vloxei32_v_i32mf4_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i32mf2_m(base: *const u32, bindex: vint32mf2, mask: vboolf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv4i32.nxv4i32.i64"]
        fn _vloxei32_v_i32mf2_m(_poison: vint32mf2, base: *const i32, bindex: vint32mf2, mask: vboolf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vloxei32_v_i32mf2_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i32m1_m(base: *const u32, bindex: vint32m1, mask: vbool1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv8i32.nxv8i32.i64"]
        fn _vloxei32_v_i32m1_m(_poison: vint32m1, base: *const i32, bindex: vint32m1, mask: vbool1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vloxei32_v_i32m1_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i32m2_m(base: *const u32, bindex: vint32m2, mask: vbool2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv16i32.nxv16i32.i64"]
        fn _vloxei32_v_i32m2_m(_poison: vint32m2, base: *const i32, bindex: vint32m2, mask: vbool2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vloxei32_v_i32m2_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i32m4_m(base: *const u32, bindex: vint32m4, mask: vbool4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv32i32.nxv32i32.i64"]
        fn _vloxei32_v_i32m4_m(_poison: vint32m4, base: *const i32, bindex: vint32m4, mask: vbool4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vloxei32_v_i32m4_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i32m8_m(base: *const u32, bindex: vint32m8, mask: vbool8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv64i32.nxv64i32.i64"]
        fn _vloxei32_v_i32m8_m(_poison: vint32m8, base: *const i32, bindex: vint32m8, mask: vbool8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vloxei32_v_i32m8_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i64mf8_m(base: *const u64, bindex: vint64mf8, mask: vboolf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv1i64.nxv1i32.i64"]
        fn _vloxei32_v_i64mf8_m(_poison: vint64mf8, base: *const i64, bindex: vint64mf8, mask: vboolf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vloxei32_v_i64mf8_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i64mf4_m(base: *const u64, bindex: vint64mf4, mask: vboolf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv2i64.nxv2i32.i64"]
        fn _vloxei32_v_i64mf4_m(_poison: vint64mf4, base: *const i64, bindex: vint64mf4, mask: vboolf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vloxei32_v_i64mf4_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i64mf2_m(base: *const u64, bindex: vint64mf2, mask: vboolf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv4i64.nxv4i32.i64"]
        fn _vloxei32_v_i64mf2_m(_poison: vint64mf2, base: *const i64, bindex: vint64mf2, mask: vboolf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vloxei32_v_i64mf2_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i64m1_m(base: *const u64, bindex: vint64m1, mask: vbool1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv8i64.nxv8i32.i64"]
        fn _vloxei32_v_i64m1_m(_poison: vint64m1, base: *const i64, bindex: vint64m1, mask: vbool1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vloxei32_v_i64m1_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i64m2_m(base: *const u64, bindex: vint64m2, mask: vbool2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv16i64.nxv16i32.i64"]
        fn _vloxei32_v_i64m2_m(_poison: vint64m2, base: *const i64, bindex: vint64m2, mask: vbool2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vloxei32_v_i64m2_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i64m4_m(base: *const u64, bindex: vint64m4, mask: vbool4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv32i64.nxv32i32.i64"]
        fn _vloxei32_v_i64m4_m(_poison: vint64m4, base: *const i64, bindex: vint64m4, mask: vbool4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vloxei32_v_i64m4_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei32_v_i64m8_m(base: *const u64, bindex: vint64m8, mask: vbool8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv64i64.nxv64i32.i64"]
        fn _vloxei32_v_i64m8_m(_poison: vint64m8, base: *const i64, bindex: vint64m8, mask: vbool8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vloxei32_v_i64m8_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i8mf8_m(base: *const u8, bindex: vint8mf8, mask: vboolf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv1i8.nxv1i64.i64"]
        fn _vloxei64_v_i8mf8_m(_poison: vint8mf8, base: *const i8, bindex: vint8mf8, mask: vboolf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vloxei64_v_i8mf8_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i8mf4_m(base: *const u8, bindex: vint8mf4, mask: vboolf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv2i8.nxv2i64.i64"]
        fn _vloxei64_v_i8mf4_m(_poison: vint8mf4, base: *const i8, bindex: vint8mf4, mask: vboolf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vloxei64_v_i8mf4_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i8mf2_m(base: *const u8, bindex: vint8mf2, mask: vboolf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv4i8.nxv4i64.i64"]
        fn _vloxei64_v_i8mf2_m(_poison: vint8mf2, base: *const i8, bindex: vint8mf2, mask: vboolf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vloxei64_v_i8mf2_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i8m1_m(base: *const u8, bindex: vint8m1, mask: vbool1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv8i8.nxv8i64.i64"]
        fn _vloxei64_v_i8m1_m(_poison: vint8m1, base: *const i8, bindex: vint8m1, mask: vbool1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vloxei64_v_i8m1_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i8m2_m(base: *const u8, bindex: vint8m2, mask: vbool2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv16i8.nxv16i64.i64"]
        fn _vloxei64_v_i8m2_m(_poison: vint8m2, base: *const i8, bindex: vint8m2, mask: vbool2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vloxei64_v_i8m2_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i8m4_m(base: *const u8, bindex: vint8m4, mask: vbool4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv32i8.nxv32i64.i64"]
        fn _vloxei64_v_i8m4_m(_poison: vint8m4, base: *const i8, bindex: vint8m4, mask: vbool4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vloxei64_v_i8m4_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i8m8_m(base: *const u8, bindex: vint8m8, mask: vbool8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv64i8.nxv64i64.i64"]
        fn _vloxei64_v_i8m8_m(_poison: vint8m8, base: *const i8, bindex: vint8m8, mask: vbool8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vloxei64_v_i8m8_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i16mf8_m(base: *const u16, bindex: vint16mf8, mask: vboolf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv1i16.nxv1i64.i64"]
        fn _vloxei64_v_i16mf8_m(_poison: vint16mf8, base: *const i16, bindex: vint16mf8, mask: vboolf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vloxei64_v_i16mf8_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i16mf4_m(base: *const u16, bindex: vint16mf4, mask: vboolf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv2i16.nxv2i64.i64"]
        fn _vloxei64_v_i16mf4_m(_poison: vint16mf4, base: *const i16, bindex: vint16mf4, mask: vboolf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vloxei64_v_i16mf4_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i16mf2_m(base: *const u16, bindex: vint16mf2, mask: vboolf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv4i16.nxv4i64.i64"]
        fn _vloxei64_v_i16mf2_m(_poison: vint16mf2, base: *const i16, bindex: vint16mf2, mask: vboolf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vloxei64_v_i16mf2_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i16m1_m(base: *const u16, bindex: vint16m1, mask: vbool1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv8i16.nxv8i64.i64"]
        fn _vloxei64_v_i16m1_m(_poison: vint16m1, base: *const i16, bindex: vint16m1, mask: vbool1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vloxei64_v_i16m1_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i16m2_m(base: *const u16, bindex: vint16m2, mask: vbool2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv16i16.nxv16i64.i64"]
        fn _vloxei64_v_i16m2_m(_poison: vint16m2, base: *const i16, bindex: vint16m2, mask: vbool2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vloxei64_v_i16m2_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i16m4_m(base: *const u16, bindex: vint16m4, mask: vbool4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv32i16.nxv32i64.i64"]
        fn _vloxei64_v_i16m4_m(_poison: vint16m4, base: *const i16, bindex: vint16m4, mask: vbool4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vloxei64_v_i16m4_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i16m8_m(base: *const u16, bindex: vint16m8, mask: vbool8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv64i16.nxv64i64.i64"]
        fn _vloxei64_v_i16m8_m(_poison: vint16m8, base: *const i16, bindex: vint16m8, mask: vbool8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vloxei64_v_i16m8_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i32mf8_m(base: *const u32, bindex: vint32mf8, mask: vboolf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv1i32.nxv1i64.i64"]
        fn _vloxei64_v_i32mf8_m(_poison: vint32mf8, base: *const i32, bindex: vint32mf8, mask: vboolf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vloxei64_v_i32mf8_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i32mf4_m(base: *const u32, bindex: vint32mf4, mask: vboolf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv2i32.nxv2i64.i64"]
        fn _vloxei64_v_i32mf4_m(_poison: vint32mf4, base: *const i32, bindex: vint32mf4, mask: vboolf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vloxei64_v_i32mf4_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i32mf2_m(base: *const u32, bindex: vint32mf2, mask: vboolf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv4i32.nxv4i64.i64"]
        fn _vloxei64_v_i32mf2_m(_poison: vint32mf2, base: *const i32, bindex: vint32mf2, mask: vboolf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vloxei64_v_i32mf2_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i32m1_m(base: *const u32, bindex: vint32m1, mask: vbool1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv8i32.nxv8i64.i64"]
        fn _vloxei64_v_i32m1_m(_poison: vint32m1, base: *const i32, bindex: vint32m1, mask: vbool1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vloxei64_v_i32m1_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i32m2_m(base: *const u32, bindex: vint32m2, mask: vbool2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv16i32.nxv16i64.i64"]
        fn _vloxei64_v_i32m2_m(_poison: vint32m2, base: *const i32, bindex: vint32m2, mask: vbool2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vloxei64_v_i32m2_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i32m4_m(base: *const u32, bindex: vint32m4, mask: vbool4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv32i32.nxv32i64.i64"]
        fn _vloxei64_v_i32m4_m(_poison: vint32m4, base: *const i32, bindex: vint32m4, mask: vbool4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vloxei64_v_i32m4_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i32m8_m(base: *const u32, bindex: vint32m8, mask: vbool8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv64i32.nxv64i64.i64"]
        fn _vloxei64_v_i32m8_m(_poison: vint32m8, base: *const i32, bindex: vint32m8, mask: vbool8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vloxei64_v_i32m8_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i64mf8_m(base: *const u64, bindex: vint64mf8, mask: vboolf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv1i64.nxv1i64.i64"]
        fn _vloxei64_v_i64mf8_m(_poison: vint64mf8, base: *const i64, bindex: vint64mf8, mask: vboolf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vloxei64_v_i64mf8_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i64mf4_m(base: *const u64, bindex: vint64mf4, mask: vboolf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv2i64.nxv2i64.i64"]
        fn _vloxei64_v_i64mf4_m(_poison: vint64mf4, base: *const i64, bindex: vint64mf4, mask: vboolf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vloxei64_v_i64mf4_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i64mf2_m(base: *const u64, bindex: vint64mf2, mask: vboolf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv4i64.nxv4i64.i64"]
        fn _vloxei64_v_i64mf2_m(_poison: vint64mf2, base: *const i64, bindex: vint64mf2, mask: vboolf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vloxei64_v_i64mf2_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i64m1_m(base: *const u64, bindex: vint64m1, mask: vbool1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv8i64.nxv8i64.i64"]
        fn _vloxei64_v_i64m1_m(_poison: vint64m1, base: *const i64, bindex: vint64m1, mask: vbool1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vloxei64_v_i64m1_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i64m2_m(base: *const u64, bindex: vint64m2, mask: vbool2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv16i64.nxv16i64.i64"]
        fn _vloxei64_v_i64m2_m(_poison: vint64m2, base: *const i64, bindex: vint64m2, mask: vbool2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vloxei64_v_i64m2_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i64m4_m(base: *const u64, bindex: vint64m4, mask: vbool4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv32i64.nxv32i64.i64"]
        fn _vloxei64_v_i64m4_m(_poison: vint64m4, base: *const i64, bindex: vint64m4, mask: vbool4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vloxei64_v_i64m4_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vloxei64_v_i64m8_m(base: *const u64, bindex: vint64m8, mask: vbool8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vloxei.mask.nxv64i64.nxv64i64.i64"]
        fn _vloxei64_v_i64m8_m(_poison: vint64m8, base: *const i64, bindex: vint64m8, mask: vbool8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vloxei64_v_i64m8_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i8mf8(base: *const u8, bindex: vint8mf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv1i8.nxv1i8.i64"]
        fn _vluxei8_v_i8mf8(_poison: vint8mf8, base: *const i8, bindex: vint8mf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vluxei8_v_i8mf8(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i8mf4(base: *const u8, bindex: vint8mf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv2i8.nxv2i8.i64"]
        fn _vluxei8_v_i8mf4(_poison: vint8mf4, base: *const i8, bindex: vint8mf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vluxei8_v_i8mf4(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i8mf2(base: *const u8, bindex: vint8mf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv4i8.nxv4i8.i64"]
        fn _vluxei8_v_i8mf2(_poison: vint8mf2, base: *const i8, bindex: vint8mf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vluxei8_v_i8mf2(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i8m1(base: *const u8, bindex: vint8m1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv8i8.nxv8i8.i64"]
        fn _vluxei8_v_i8m1(_poison: vint8m1, base: *const i8, bindex: vint8m1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vluxei8_v_i8m1(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i8m2(base: *const u8, bindex: vint8m2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv16i8.nxv16i8.i64"]
        fn _vluxei8_v_i8m2(_poison: vint8m2, base: *const i8, bindex: vint8m2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vluxei8_v_i8m2(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i8m4(base: *const u8, bindex: vint8m4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv32i8.nxv32i8.i64"]
        fn _vluxei8_v_i8m4(_poison: vint8m4, base: *const i8, bindex: vint8m4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vluxei8_v_i8m4(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i8m8(base: *const u8, bindex: vint8m8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv64i8.nxv64i8.i64"]
        fn _vluxei8_v_i8m8(_poison: vint8m8, base: *const i8, bindex: vint8m8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vluxei8_v_i8m8(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i16mf8(base: *const u16, bindex: vint16mf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv1i16.nxv1i8.i64"]
        fn _vluxei8_v_i16mf8(_poison: vint16mf8, base: *const i16, bindex: vint16mf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vluxei8_v_i16mf8(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i16mf4(base: *const u16, bindex: vint16mf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv2i16.nxv2i8.i64"]
        fn _vluxei8_v_i16mf4(_poison: vint16mf4, base: *const i16, bindex: vint16mf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vluxei8_v_i16mf4(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i16mf2(base: *const u16, bindex: vint16mf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv4i16.nxv4i8.i64"]
        fn _vluxei8_v_i16mf2(_poison: vint16mf2, base: *const i16, bindex: vint16mf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vluxei8_v_i16mf2(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i16m1(base: *const u16, bindex: vint16m1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv8i16.nxv8i8.i64"]
        fn _vluxei8_v_i16m1(_poison: vint16m1, base: *const i16, bindex: vint16m1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vluxei8_v_i16m1(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i16m2(base: *const u16, bindex: vint16m2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv16i16.nxv16i8.i64"]
        fn _vluxei8_v_i16m2(_poison: vint16m2, base: *const i16, bindex: vint16m2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vluxei8_v_i16m2(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i16m4(base: *const u16, bindex: vint16m4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv32i16.nxv32i8.i64"]
        fn _vluxei8_v_i16m4(_poison: vint16m4, base: *const i16, bindex: vint16m4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vluxei8_v_i16m4(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i16m8(base: *const u16, bindex: vint16m8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv64i16.nxv64i8.i64"]
        fn _vluxei8_v_i16m8(_poison: vint16m8, base: *const i16, bindex: vint16m8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vluxei8_v_i16m8(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i32mf8(base: *const u32, bindex: vint32mf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv1i32.nxv1i8.i64"]
        fn _vluxei8_v_i32mf8(_poison: vint32mf8, base: *const i32, bindex: vint32mf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vluxei8_v_i32mf8(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i32mf4(base: *const u32, bindex: vint32mf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv2i32.nxv2i8.i64"]
        fn _vluxei8_v_i32mf4(_poison: vint32mf4, base: *const i32, bindex: vint32mf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vluxei8_v_i32mf4(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i32mf2(base: *const u32, bindex: vint32mf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv4i32.nxv4i8.i64"]
        fn _vluxei8_v_i32mf2(_poison: vint32mf2, base: *const i32, bindex: vint32mf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vluxei8_v_i32mf2(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i32m1(base: *const u32, bindex: vint32m1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv8i32.nxv8i8.i64"]
        fn _vluxei8_v_i32m1(_poison: vint32m1, base: *const i32, bindex: vint32m1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vluxei8_v_i32m1(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i32m2(base: *const u32, bindex: vint32m2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv16i32.nxv16i8.i64"]
        fn _vluxei8_v_i32m2(_poison: vint32m2, base: *const i32, bindex: vint32m2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vluxei8_v_i32m2(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i32m4(base: *const u32, bindex: vint32m4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv32i32.nxv32i8.i64"]
        fn _vluxei8_v_i32m4(_poison: vint32m4, base: *const i32, bindex: vint32m4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vluxei8_v_i32m4(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i32m8(base: *const u32, bindex: vint32m8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv64i32.nxv64i8.i64"]
        fn _vluxei8_v_i32m8(_poison: vint32m8, base: *const i32, bindex: vint32m8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vluxei8_v_i32m8(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i64mf8(base: *const u64, bindex: vint64mf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv1i64.nxv1i8.i64"]
        fn _vluxei8_v_i64mf8(_poison: vint64mf8, base: *const i64, bindex: vint64mf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vluxei8_v_i64mf8(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i64mf4(base: *const u64, bindex: vint64mf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv2i64.nxv2i8.i64"]
        fn _vluxei8_v_i64mf4(_poison: vint64mf4, base: *const i64, bindex: vint64mf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vluxei8_v_i64mf4(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i64mf2(base: *const u64, bindex: vint64mf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv4i64.nxv4i8.i64"]
        fn _vluxei8_v_i64mf2(_poison: vint64mf2, base: *const i64, bindex: vint64mf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vluxei8_v_i64mf2(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i64m1(base: *const u64, bindex: vint64m1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv8i64.nxv8i8.i64"]
        fn _vluxei8_v_i64m1(_poison: vint64m1, base: *const i64, bindex: vint64m1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vluxei8_v_i64m1(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i64m2(base: *const u64, bindex: vint64m2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv16i64.nxv16i8.i64"]
        fn _vluxei8_v_i64m2(_poison: vint64m2, base: *const i64, bindex: vint64m2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vluxei8_v_i64m2(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i64m4(base: *const u64, bindex: vint64m4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv32i64.nxv32i8.i64"]
        fn _vluxei8_v_i64m4(_poison: vint64m4, base: *const i64, bindex: vint64m4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vluxei8_v_i64m4(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i64m8(base: *const u64, bindex: vint64m8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv64i64.nxv64i8.i64"]
        fn _vluxei8_v_i64m8(_poison: vint64m8, base: *const i64, bindex: vint64m8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vluxei8_v_i64m8(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i8mf8(base: *const u8, bindex: vint8mf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv1i8.nxv1i16.i64"]
        fn _vluxei16_v_i8mf8(_poison: vint8mf8, base: *const i8, bindex: vint8mf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vluxei16_v_i8mf8(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i8mf4(base: *const u8, bindex: vint8mf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv2i8.nxv2i16.i64"]
        fn _vluxei16_v_i8mf4(_poison: vint8mf4, base: *const i8, bindex: vint8mf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vluxei16_v_i8mf4(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i8mf2(base: *const u8, bindex: vint8mf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv4i8.nxv4i16.i64"]
        fn _vluxei16_v_i8mf2(_poison: vint8mf2, base: *const i8, bindex: vint8mf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vluxei16_v_i8mf2(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i8m1(base: *const u8, bindex: vint8m1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv8i8.nxv8i16.i64"]
        fn _vluxei16_v_i8m1(_poison: vint8m1, base: *const i8, bindex: vint8m1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vluxei16_v_i8m1(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i8m2(base: *const u8, bindex: vint8m2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv16i8.nxv16i16.i64"]
        fn _vluxei16_v_i8m2(_poison: vint8m2, base: *const i8, bindex: vint8m2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vluxei16_v_i8m2(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i8m4(base: *const u8, bindex: vint8m4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv32i8.nxv32i16.i64"]
        fn _vluxei16_v_i8m4(_poison: vint8m4, base: *const i8, bindex: vint8m4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vluxei16_v_i8m4(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i8m8(base: *const u8, bindex: vint8m8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv64i8.nxv64i16.i64"]
        fn _vluxei16_v_i8m8(_poison: vint8m8, base: *const i8, bindex: vint8m8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vluxei16_v_i8m8(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i16mf8(base: *const u16, bindex: vint16mf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv1i16.nxv1i16.i64"]
        fn _vluxei16_v_i16mf8(_poison: vint16mf8, base: *const i16, bindex: vint16mf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vluxei16_v_i16mf8(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i16mf4(base: *const u16, bindex: vint16mf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv2i16.nxv2i16.i64"]
        fn _vluxei16_v_i16mf4(_poison: vint16mf4, base: *const i16, bindex: vint16mf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vluxei16_v_i16mf4(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i16mf2(base: *const u16, bindex: vint16mf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv4i16.nxv4i16.i64"]
        fn _vluxei16_v_i16mf2(_poison: vint16mf2, base: *const i16, bindex: vint16mf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vluxei16_v_i16mf2(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i16m1(base: *const u16, bindex: vint16m1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv8i16.nxv8i16.i64"]
        fn _vluxei16_v_i16m1(_poison: vint16m1, base: *const i16, bindex: vint16m1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vluxei16_v_i16m1(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i16m2(base: *const u16, bindex: vint16m2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv16i16.nxv16i16.i64"]
        fn _vluxei16_v_i16m2(_poison: vint16m2, base: *const i16, bindex: vint16m2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vluxei16_v_i16m2(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i16m4(base: *const u16, bindex: vint16m4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv32i16.nxv32i16.i64"]
        fn _vluxei16_v_i16m4(_poison: vint16m4, base: *const i16, bindex: vint16m4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vluxei16_v_i16m4(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i16m8(base: *const u16, bindex: vint16m8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv64i16.nxv64i16.i64"]
        fn _vluxei16_v_i16m8(_poison: vint16m8, base: *const i16, bindex: vint16m8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vluxei16_v_i16m8(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i32mf8(base: *const u32, bindex: vint32mf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv1i32.nxv1i16.i64"]
        fn _vluxei16_v_i32mf8(_poison: vint32mf8, base: *const i32, bindex: vint32mf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vluxei16_v_i32mf8(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i32mf4(base: *const u32, bindex: vint32mf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv2i32.nxv2i16.i64"]
        fn _vluxei16_v_i32mf4(_poison: vint32mf4, base: *const i32, bindex: vint32mf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vluxei16_v_i32mf4(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i32mf2(base: *const u32, bindex: vint32mf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv4i32.nxv4i16.i64"]
        fn _vluxei16_v_i32mf2(_poison: vint32mf2, base: *const i32, bindex: vint32mf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vluxei16_v_i32mf2(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i32m1(base: *const u32, bindex: vint32m1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv8i32.nxv8i16.i64"]
        fn _vluxei16_v_i32m1(_poison: vint32m1, base: *const i32, bindex: vint32m1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vluxei16_v_i32m1(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i32m2(base: *const u32, bindex: vint32m2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv16i32.nxv16i16.i64"]
        fn _vluxei16_v_i32m2(_poison: vint32m2, base: *const i32, bindex: vint32m2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vluxei16_v_i32m2(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i32m4(base: *const u32, bindex: vint32m4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv32i32.nxv32i16.i64"]
        fn _vluxei16_v_i32m4(_poison: vint32m4, base: *const i32, bindex: vint32m4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vluxei16_v_i32m4(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i32m8(base: *const u32, bindex: vint32m8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv64i32.nxv64i16.i64"]
        fn _vluxei16_v_i32m8(_poison: vint32m8, base: *const i32, bindex: vint32m8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vluxei16_v_i32m8(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i64mf8(base: *const u64, bindex: vint64mf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv1i64.nxv1i16.i64"]
        fn _vluxei16_v_i64mf8(_poison: vint64mf8, base: *const i64, bindex: vint64mf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vluxei16_v_i64mf8(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i64mf4(base: *const u64, bindex: vint64mf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv2i64.nxv2i16.i64"]
        fn _vluxei16_v_i64mf4(_poison: vint64mf4, base: *const i64, bindex: vint64mf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vluxei16_v_i64mf4(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i64mf2(base: *const u64, bindex: vint64mf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv4i64.nxv4i16.i64"]
        fn _vluxei16_v_i64mf2(_poison: vint64mf2, base: *const i64, bindex: vint64mf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vluxei16_v_i64mf2(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i64m1(base: *const u64, bindex: vint64m1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv8i64.nxv8i16.i64"]
        fn _vluxei16_v_i64m1(_poison: vint64m1, base: *const i64, bindex: vint64m1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vluxei16_v_i64m1(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i64m2(base: *const u64, bindex: vint64m2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv16i64.nxv16i16.i64"]
        fn _vluxei16_v_i64m2(_poison: vint64m2, base: *const i64, bindex: vint64m2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vluxei16_v_i64m2(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i64m4(base: *const u64, bindex: vint64m4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv32i64.nxv32i16.i64"]
        fn _vluxei16_v_i64m4(_poison: vint64m4, base: *const i64, bindex: vint64m4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vluxei16_v_i64m4(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i64m8(base: *const u64, bindex: vint64m8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv64i64.nxv64i16.i64"]
        fn _vluxei16_v_i64m8(_poison: vint64m8, base: *const i64, bindex: vint64m8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vluxei16_v_i64m8(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i8mf8(base: *const u8, bindex: vint8mf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv1i8.nxv1i32.i64"]
        fn _vluxei32_v_i8mf8(_poison: vint8mf8, base: *const i8, bindex: vint8mf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vluxei32_v_i8mf8(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i8mf4(base: *const u8, bindex: vint8mf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv2i8.nxv2i32.i64"]
        fn _vluxei32_v_i8mf4(_poison: vint8mf4, base: *const i8, bindex: vint8mf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vluxei32_v_i8mf4(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i8mf2(base: *const u8, bindex: vint8mf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv4i8.nxv4i32.i64"]
        fn _vluxei32_v_i8mf2(_poison: vint8mf2, base: *const i8, bindex: vint8mf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vluxei32_v_i8mf2(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i8m1(base: *const u8, bindex: vint8m1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv8i8.nxv8i32.i64"]
        fn _vluxei32_v_i8m1(_poison: vint8m1, base: *const i8, bindex: vint8m1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vluxei32_v_i8m1(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i8m2(base: *const u8, bindex: vint8m2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv16i8.nxv16i32.i64"]
        fn _vluxei32_v_i8m2(_poison: vint8m2, base: *const i8, bindex: vint8m2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vluxei32_v_i8m2(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i8m4(base: *const u8, bindex: vint8m4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv32i8.nxv32i32.i64"]
        fn _vluxei32_v_i8m4(_poison: vint8m4, base: *const i8, bindex: vint8m4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vluxei32_v_i8m4(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i8m8(base: *const u8, bindex: vint8m8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv64i8.nxv64i32.i64"]
        fn _vluxei32_v_i8m8(_poison: vint8m8, base: *const i8, bindex: vint8m8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vluxei32_v_i8m8(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i16mf8(base: *const u16, bindex: vint16mf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv1i16.nxv1i32.i64"]
        fn _vluxei32_v_i16mf8(_poison: vint16mf8, base: *const i16, bindex: vint16mf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vluxei32_v_i16mf8(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i16mf4(base: *const u16, bindex: vint16mf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv2i16.nxv2i32.i64"]
        fn _vluxei32_v_i16mf4(_poison: vint16mf4, base: *const i16, bindex: vint16mf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vluxei32_v_i16mf4(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i16mf2(base: *const u16, bindex: vint16mf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv4i16.nxv4i32.i64"]
        fn _vluxei32_v_i16mf2(_poison: vint16mf2, base: *const i16, bindex: vint16mf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vluxei32_v_i16mf2(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i16m1(base: *const u16, bindex: vint16m1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv8i16.nxv8i32.i64"]
        fn _vluxei32_v_i16m1(_poison: vint16m1, base: *const i16, bindex: vint16m1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vluxei32_v_i16m1(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i16m2(base: *const u16, bindex: vint16m2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv16i16.nxv16i32.i64"]
        fn _vluxei32_v_i16m2(_poison: vint16m2, base: *const i16, bindex: vint16m2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vluxei32_v_i16m2(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i16m4(base: *const u16, bindex: vint16m4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv32i16.nxv32i32.i64"]
        fn _vluxei32_v_i16m4(_poison: vint16m4, base: *const i16, bindex: vint16m4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vluxei32_v_i16m4(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i16m8(base: *const u16, bindex: vint16m8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv64i16.nxv64i32.i64"]
        fn _vluxei32_v_i16m8(_poison: vint16m8, base: *const i16, bindex: vint16m8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vluxei32_v_i16m8(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i32mf8(base: *const u32, bindex: vint32mf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv1i32.nxv1i32.i64"]
        fn _vluxei32_v_i32mf8(_poison: vint32mf8, base: *const i32, bindex: vint32mf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vluxei32_v_i32mf8(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i32mf4(base: *const u32, bindex: vint32mf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv2i32.nxv2i32.i64"]
        fn _vluxei32_v_i32mf4(_poison: vint32mf4, base: *const i32, bindex: vint32mf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vluxei32_v_i32mf4(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i32mf2(base: *const u32, bindex: vint32mf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv4i32.nxv4i32.i64"]
        fn _vluxei32_v_i32mf2(_poison: vint32mf2, base: *const i32, bindex: vint32mf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vluxei32_v_i32mf2(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i32m1(base: *const u32, bindex: vint32m1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv8i32.nxv8i32.i64"]
        fn _vluxei32_v_i32m1(_poison: vint32m1, base: *const i32, bindex: vint32m1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vluxei32_v_i32m1(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i32m2(base: *const u32, bindex: vint32m2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv16i32.nxv16i32.i64"]
        fn _vluxei32_v_i32m2(_poison: vint32m2, base: *const i32, bindex: vint32m2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vluxei32_v_i32m2(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i32m4(base: *const u32, bindex: vint32m4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv32i32.nxv32i32.i64"]
        fn _vluxei32_v_i32m4(_poison: vint32m4, base: *const i32, bindex: vint32m4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vluxei32_v_i32m4(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i32m8(base: *const u32, bindex: vint32m8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv64i32.nxv64i32.i64"]
        fn _vluxei32_v_i32m8(_poison: vint32m8, base: *const i32, bindex: vint32m8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vluxei32_v_i32m8(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i64mf8(base: *const u64, bindex: vint64mf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv1i64.nxv1i32.i64"]
        fn _vluxei32_v_i64mf8(_poison: vint64mf8, base: *const i64, bindex: vint64mf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vluxei32_v_i64mf8(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i64mf4(base: *const u64, bindex: vint64mf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv2i64.nxv2i32.i64"]
        fn _vluxei32_v_i64mf4(_poison: vint64mf4, base: *const i64, bindex: vint64mf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vluxei32_v_i64mf4(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i64mf2(base: *const u64, bindex: vint64mf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv4i64.nxv4i32.i64"]
        fn _vluxei32_v_i64mf2(_poison: vint64mf2, base: *const i64, bindex: vint64mf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vluxei32_v_i64mf2(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i64m1(base: *const u64, bindex: vint64m1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv8i64.nxv8i32.i64"]
        fn _vluxei32_v_i64m1(_poison: vint64m1, base: *const i64, bindex: vint64m1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vluxei32_v_i64m1(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i64m2(base: *const u64, bindex: vint64m2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv16i64.nxv16i32.i64"]
        fn _vluxei32_v_i64m2(_poison: vint64m2, base: *const i64, bindex: vint64m2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vluxei32_v_i64m2(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i64m4(base: *const u64, bindex: vint64m4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv32i64.nxv32i32.i64"]
        fn _vluxei32_v_i64m4(_poison: vint64m4, base: *const i64, bindex: vint64m4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vluxei32_v_i64m4(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i64m8(base: *const u64, bindex: vint64m8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv64i64.nxv64i32.i64"]
        fn _vluxei32_v_i64m8(_poison: vint64m8, base: *const i64, bindex: vint64m8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vluxei32_v_i64m8(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i8mf8(base: *const u8, bindex: vint8mf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv1i8.nxv1i64.i64"]
        fn _vluxei64_v_i8mf8(_poison: vint8mf8, base: *const i8, bindex: vint8mf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vluxei64_v_i8mf8(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i8mf4(base: *const u8, bindex: vint8mf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv2i8.nxv2i64.i64"]
        fn _vluxei64_v_i8mf4(_poison: vint8mf4, base: *const i8, bindex: vint8mf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vluxei64_v_i8mf4(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i8mf2(base: *const u8, bindex: vint8mf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv4i8.nxv4i64.i64"]
        fn _vluxei64_v_i8mf2(_poison: vint8mf2, base: *const i8, bindex: vint8mf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vluxei64_v_i8mf2(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i8m1(base: *const u8, bindex: vint8m1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv8i8.nxv8i64.i64"]
        fn _vluxei64_v_i8m1(_poison: vint8m1, base: *const i8, bindex: vint8m1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vluxei64_v_i8m1(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i8m2(base: *const u8, bindex: vint8m2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv16i8.nxv16i64.i64"]
        fn _vluxei64_v_i8m2(_poison: vint8m2, base: *const i8, bindex: vint8m2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vluxei64_v_i8m2(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i8m4(base: *const u8, bindex: vint8m4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv32i8.nxv32i64.i64"]
        fn _vluxei64_v_i8m4(_poison: vint8m4, base: *const i8, bindex: vint8m4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vluxei64_v_i8m4(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i8m8(base: *const u8, bindex: vint8m8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv64i8.nxv64i64.i64"]
        fn _vluxei64_v_i8m8(_poison: vint8m8, base: *const i8, bindex: vint8m8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vluxei64_v_i8m8(poison!(), base as *const i8, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i16mf8(base: *const u16, bindex: vint16mf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv1i16.nxv1i64.i64"]
        fn _vluxei64_v_i16mf8(_poison: vint16mf8, base: *const i16, bindex: vint16mf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vluxei64_v_i16mf8(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i16mf4(base: *const u16, bindex: vint16mf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv2i16.nxv2i64.i64"]
        fn _vluxei64_v_i16mf4(_poison: vint16mf4, base: *const i16, bindex: vint16mf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vluxei64_v_i16mf4(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i16mf2(base: *const u16, bindex: vint16mf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv4i16.nxv4i64.i64"]
        fn _vluxei64_v_i16mf2(_poison: vint16mf2, base: *const i16, bindex: vint16mf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vluxei64_v_i16mf2(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i16m1(base: *const u16, bindex: vint16m1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv8i16.nxv8i64.i64"]
        fn _vluxei64_v_i16m1(_poison: vint16m1, base: *const i16, bindex: vint16m1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vluxei64_v_i16m1(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i16m2(base: *const u16, bindex: vint16m2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv16i16.nxv16i64.i64"]
        fn _vluxei64_v_i16m2(_poison: vint16m2, base: *const i16, bindex: vint16m2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vluxei64_v_i16m2(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i16m4(base: *const u16, bindex: vint16m4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv32i16.nxv32i64.i64"]
        fn _vluxei64_v_i16m4(_poison: vint16m4, base: *const i16, bindex: vint16m4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vluxei64_v_i16m4(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i16m8(base: *const u16, bindex: vint16m8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv64i16.nxv64i64.i64"]
        fn _vluxei64_v_i16m8(_poison: vint16m8, base: *const i16, bindex: vint16m8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vluxei64_v_i16m8(poison!(), base as *const i16, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i32mf8(base: *const u32, bindex: vint32mf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv1i32.nxv1i64.i64"]
        fn _vluxei64_v_i32mf8(_poison: vint32mf8, base: *const i32, bindex: vint32mf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vluxei64_v_i32mf8(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i32mf4(base: *const u32, bindex: vint32mf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv2i32.nxv2i64.i64"]
        fn _vluxei64_v_i32mf4(_poison: vint32mf4, base: *const i32, bindex: vint32mf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vluxei64_v_i32mf4(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i32mf2(base: *const u32, bindex: vint32mf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv4i32.nxv4i64.i64"]
        fn _vluxei64_v_i32mf2(_poison: vint32mf2, base: *const i32, bindex: vint32mf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vluxei64_v_i32mf2(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i32m1(base: *const u32, bindex: vint32m1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv8i32.nxv8i64.i64"]
        fn _vluxei64_v_i32m1(_poison: vint32m1, base: *const i32, bindex: vint32m1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vluxei64_v_i32m1(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i32m2(base: *const u32, bindex: vint32m2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv16i32.nxv16i64.i64"]
        fn _vluxei64_v_i32m2(_poison: vint32m2, base: *const i32, bindex: vint32m2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vluxei64_v_i32m2(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i32m4(base: *const u32, bindex: vint32m4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv32i32.nxv32i64.i64"]
        fn _vluxei64_v_i32m4(_poison: vint32m4, base: *const i32, bindex: vint32m4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vluxei64_v_i32m4(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i32m8(base: *const u32, bindex: vint32m8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv64i32.nxv64i64.i64"]
        fn _vluxei64_v_i32m8(_poison: vint32m8, base: *const i32, bindex: vint32m8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vluxei64_v_i32m8(poison!(), base as *const i32, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i64mf8(base: *const u64, bindex: vint64mf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv1i64.nxv1i64.i64"]
        fn _vluxei64_v_i64mf8(_poison: vint64mf8, base: *const i64, bindex: vint64mf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vluxei64_v_i64mf8(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i64mf4(base: *const u64, bindex: vint64mf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv2i64.nxv2i64.i64"]
        fn _vluxei64_v_i64mf4(_poison: vint64mf4, base: *const i64, bindex: vint64mf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vluxei64_v_i64mf4(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i64mf2(base: *const u64, bindex: vint64mf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv4i64.nxv4i64.i64"]
        fn _vluxei64_v_i64mf2(_poison: vint64mf2, base: *const i64, bindex: vint64mf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vluxei64_v_i64mf2(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i64m1(base: *const u64, bindex: vint64m1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv8i64.nxv8i64.i64"]
        fn _vluxei64_v_i64m1(_poison: vint64m1, base: *const i64, bindex: vint64m1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vluxei64_v_i64m1(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i64m2(base: *const u64, bindex: vint64m2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv16i64.nxv16i64.i64"]
        fn _vluxei64_v_i64m2(_poison: vint64m2, base: *const i64, bindex: vint64m2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vluxei64_v_i64m2(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i64m4(base: *const u64, bindex: vint64m4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv32i64.nxv32i64.i64"]
        fn _vluxei64_v_i64m4(_poison: vint64m4, base: *const i64, bindex: vint64m4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vluxei64_v_i64m4(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i64m8(base: *const u64, bindex: vint64m8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.nxv64i64.nxv64i64.i64"]
        fn _vluxei64_v_i64m8(_poison: vint64m8, base: *const i64, bindex: vint64m8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vluxei64_v_i64m8(poison!(), base as *const i64, bindex, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i8mf8_m(base: *const u8, bindex: vint8mf8, mask: vboolf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv1i8.nxv1i8.i64"]
        fn _vluxei8_v_i8mf8_m(_poison: vint8mf8, base: *const i8, bindex: vint8mf8, mask: vboolf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vluxei8_v_i8mf8_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i8mf4_m(base: *const u8, bindex: vint8mf4, mask: vboolf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv2i8.nxv2i8.i64"]
        fn _vluxei8_v_i8mf4_m(_poison: vint8mf4, base: *const i8, bindex: vint8mf4, mask: vboolf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vluxei8_v_i8mf4_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i8mf2_m(base: *const u8, bindex: vint8mf2, mask: vboolf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv4i8.nxv4i8.i64"]
        fn _vluxei8_v_i8mf2_m(_poison: vint8mf2, base: *const i8, bindex: vint8mf2, mask: vboolf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vluxei8_v_i8mf2_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i8m1_m(base: *const u8, bindex: vint8m1, mask: vbool1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv8i8.nxv8i8.i64"]
        fn _vluxei8_v_i8m1_m(_poison: vint8m1, base: *const i8, bindex: vint8m1, mask: vbool1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vluxei8_v_i8m1_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i8m2_m(base: *const u8, bindex: vint8m2, mask: vbool2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv16i8.nxv16i8.i64"]
        fn _vluxei8_v_i8m2_m(_poison: vint8m2, base: *const i8, bindex: vint8m2, mask: vbool2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vluxei8_v_i8m2_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i8m4_m(base: *const u8, bindex: vint8m4, mask: vbool4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv32i8.nxv32i8.i64"]
        fn _vluxei8_v_i8m4_m(_poison: vint8m4, base: *const i8, bindex: vint8m4, mask: vbool4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vluxei8_v_i8m4_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i8m8_m(base: *const u8, bindex: vint8m8, mask: vbool8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv64i8.nxv64i8.i64"]
        fn _vluxei8_v_i8m8_m(_poison: vint8m8, base: *const i8, bindex: vint8m8, mask: vbool8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vluxei8_v_i8m8_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i16mf8_m(base: *const u16, bindex: vint16mf8, mask: vboolf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv1i16.nxv1i8.i64"]
        fn _vluxei8_v_i16mf8_m(_poison: vint16mf8, base: *const i16, bindex: vint16mf8, mask: vboolf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vluxei8_v_i16mf8_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i16mf4_m(base: *const u16, bindex: vint16mf4, mask: vboolf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv2i16.nxv2i8.i64"]
        fn _vluxei8_v_i16mf4_m(_poison: vint16mf4, base: *const i16, bindex: vint16mf4, mask: vboolf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vluxei8_v_i16mf4_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i16mf2_m(base: *const u16, bindex: vint16mf2, mask: vboolf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv4i16.nxv4i8.i64"]
        fn _vluxei8_v_i16mf2_m(_poison: vint16mf2, base: *const i16, bindex: vint16mf2, mask: vboolf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vluxei8_v_i16mf2_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i16m1_m(base: *const u16, bindex: vint16m1, mask: vbool1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv8i16.nxv8i8.i64"]
        fn _vluxei8_v_i16m1_m(_poison: vint16m1, base: *const i16, bindex: vint16m1, mask: vbool1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vluxei8_v_i16m1_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i16m2_m(base: *const u16, bindex: vint16m2, mask: vbool2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv16i16.nxv16i8.i64"]
        fn _vluxei8_v_i16m2_m(_poison: vint16m2, base: *const i16, bindex: vint16m2, mask: vbool2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vluxei8_v_i16m2_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i16m4_m(base: *const u16, bindex: vint16m4, mask: vbool4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv32i16.nxv32i8.i64"]
        fn _vluxei8_v_i16m4_m(_poison: vint16m4, base: *const i16, bindex: vint16m4, mask: vbool4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vluxei8_v_i16m4_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i16m8_m(base: *const u16, bindex: vint16m8, mask: vbool8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv64i16.nxv64i8.i64"]
        fn _vluxei8_v_i16m8_m(_poison: vint16m8, base: *const i16, bindex: vint16m8, mask: vbool8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vluxei8_v_i16m8_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i32mf8_m(base: *const u32, bindex: vint32mf8, mask: vboolf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv1i32.nxv1i8.i64"]
        fn _vluxei8_v_i32mf8_m(_poison: vint32mf8, base: *const i32, bindex: vint32mf8, mask: vboolf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vluxei8_v_i32mf8_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i32mf4_m(base: *const u32, bindex: vint32mf4, mask: vboolf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv2i32.nxv2i8.i64"]
        fn _vluxei8_v_i32mf4_m(_poison: vint32mf4, base: *const i32, bindex: vint32mf4, mask: vboolf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vluxei8_v_i32mf4_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i32mf2_m(base: *const u32, bindex: vint32mf2, mask: vboolf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv4i32.nxv4i8.i64"]
        fn _vluxei8_v_i32mf2_m(_poison: vint32mf2, base: *const i32, bindex: vint32mf2, mask: vboolf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vluxei8_v_i32mf2_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i32m1_m(base: *const u32, bindex: vint32m1, mask: vbool1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv8i32.nxv8i8.i64"]
        fn _vluxei8_v_i32m1_m(_poison: vint32m1, base: *const i32, bindex: vint32m1, mask: vbool1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vluxei8_v_i32m1_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i32m2_m(base: *const u32, bindex: vint32m2, mask: vbool2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv16i32.nxv16i8.i64"]
        fn _vluxei8_v_i32m2_m(_poison: vint32m2, base: *const i32, bindex: vint32m2, mask: vbool2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vluxei8_v_i32m2_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i32m4_m(base: *const u32, bindex: vint32m4, mask: vbool4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv32i32.nxv32i8.i64"]
        fn _vluxei8_v_i32m4_m(_poison: vint32m4, base: *const i32, bindex: vint32m4, mask: vbool4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vluxei8_v_i32m4_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i32m8_m(base: *const u32, bindex: vint32m8, mask: vbool8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv64i32.nxv64i8.i64"]
        fn _vluxei8_v_i32m8_m(_poison: vint32m8, base: *const i32, bindex: vint32m8, mask: vbool8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vluxei8_v_i32m8_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i64mf8_m(base: *const u64, bindex: vint64mf8, mask: vboolf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv1i64.nxv1i8.i64"]
        fn _vluxei8_v_i64mf8_m(_poison: vint64mf8, base: *const i64, bindex: vint64mf8, mask: vboolf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vluxei8_v_i64mf8_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i64mf4_m(base: *const u64, bindex: vint64mf4, mask: vboolf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv2i64.nxv2i8.i64"]
        fn _vluxei8_v_i64mf4_m(_poison: vint64mf4, base: *const i64, bindex: vint64mf4, mask: vboolf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vluxei8_v_i64mf4_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i64mf2_m(base: *const u64, bindex: vint64mf2, mask: vboolf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv4i64.nxv4i8.i64"]
        fn _vluxei8_v_i64mf2_m(_poison: vint64mf2, base: *const i64, bindex: vint64mf2, mask: vboolf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vluxei8_v_i64mf2_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i64m1_m(base: *const u64, bindex: vint64m1, mask: vbool1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv8i64.nxv8i8.i64"]
        fn _vluxei8_v_i64m1_m(_poison: vint64m1, base: *const i64, bindex: vint64m1, mask: vbool1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vluxei8_v_i64m1_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i64m2_m(base: *const u64, bindex: vint64m2, mask: vbool2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv16i64.nxv16i8.i64"]
        fn _vluxei8_v_i64m2_m(_poison: vint64m2, base: *const i64, bindex: vint64m2, mask: vbool2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vluxei8_v_i64m2_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i64m4_m(base: *const u64, bindex: vint64m4, mask: vbool4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv32i64.nxv32i8.i64"]
        fn _vluxei8_v_i64m4_m(_poison: vint64m4, base: *const i64, bindex: vint64m4, mask: vbool4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vluxei8_v_i64m4_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei8_v_i64m8_m(base: *const u64, bindex: vint64m8, mask: vbool8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv64i64.nxv64i8.i64"]
        fn _vluxei8_v_i64m8_m(_poison: vint64m8, base: *const i64, bindex: vint64m8, mask: vbool8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vluxei8_v_i64m8_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i8mf8_m(base: *const u8, bindex: vint8mf8, mask: vboolf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv1i8.nxv1i16.i64"]
        fn _vluxei16_v_i8mf8_m(_poison: vint8mf8, base: *const i8, bindex: vint8mf8, mask: vboolf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vluxei16_v_i8mf8_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i8mf4_m(base: *const u8, bindex: vint8mf4, mask: vboolf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv2i8.nxv2i16.i64"]
        fn _vluxei16_v_i8mf4_m(_poison: vint8mf4, base: *const i8, bindex: vint8mf4, mask: vboolf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vluxei16_v_i8mf4_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i8mf2_m(base: *const u8, bindex: vint8mf2, mask: vboolf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv4i8.nxv4i16.i64"]
        fn _vluxei16_v_i8mf2_m(_poison: vint8mf2, base: *const i8, bindex: vint8mf2, mask: vboolf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vluxei16_v_i8mf2_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i8m1_m(base: *const u8, bindex: vint8m1, mask: vbool1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv8i8.nxv8i16.i64"]
        fn _vluxei16_v_i8m1_m(_poison: vint8m1, base: *const i8, bindex: vint8m1, mask: vbool1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vluxei16_v_i8m1_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i8m2_m(base: *const u8, bindex: vint8m2, mask: vbool2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv16i8.nxv16i16.i64"]
        fn _vluxei16_v_i8m2_m(_poison: vint8m2, base: *const i8, bindex: vint8m2, mask: vbool2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vluxei16_v_i8m2_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i8m4_m(base: *const u8, bindex: vint8m4, mask: vbool4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv32i8.nxv32i16.i64"]
        fn _vluxei16_v_i8m4_m(_poison: vint8m4, base: *const i8, bindex: vint8m4, mask: vbool4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vluxei16_v_i8m4_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i8m8_m(base: *const u8, bindex: vint8m8, mask: vbool8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv64i8.nxv64i16.i64"]
        fn _vluxei16_v_i8m8_m(_poison: vint8m8, base: *const i8, bindex: vint8m8, mask: vbool8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vluxei16_v_i8m8_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i16mf8_m(base: *const u16, bindex: vint16mf8, mask: vboolf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv1i16.nxv1i16.i64"]
        fn _vluxei16_v_i16mf8_m(_poison: vint16mf8, base: *const i16, bindex: vint16mf8, mask: vboolf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vluxei16_v_i16mf8_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i16mf4_m(base: *const u16, bindex: vint16mf4, mask: vboolf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv2i16.nxv2i16.i64"]
        fn _vluxei16_v_i16mf4_m(_poison: vint16mf4, base: *const i16, bindex: vint16mf4, mask: vboolf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vluxei16_v_i16mf4_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i16mf2_m(base: *const u16, bindex: vint16mf2, mask: vboolf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv4i16.nxv4i16.i64"]
        fn _vluxei16_v_i16mf2_m(_poison: vint16mf2, base: *const i16, bindex: vint16mf2, mask: vboolf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vluxei16_v_i16mf2_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i16m1_m(base: *const u16, bindex: vint16m1, mask: vbool1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv8i16.nxv8i16.i64"]
        fn _vluxei16_v_i16m1_m(_poison: vint16m1, base: *const i16, bindex: vint16m1, mask: vbool1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vluxei16_v_i16m1_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i16m2_m(base: *const u16, bindex: vint16m2, mask: vbool2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv16i16.nxv16i16.i64"]
        fn _vluxei16_v_i16m2_m(_poison: vint16m2, base: *const i16, bindex: vint16m2, mask: vbool2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vluxei16_v_i16m2_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i16m4_m(base: *const u16, bindex: vint16m4, mask: vbool4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv32i16.nxv32i16.i64"]
        fn _vluxei16_v_i16m4_m(_poison: vint16m4, base: *const i16, bindex: vint16m4, mask: vbool4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vluxei16_v_i16m4_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i16m8_m(base: *const u16, bindex: vint16m8, mask: vbool8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv64i16.nxv64i16.i64"]
        fn _vluxei16_v_i16m8_m(_poison: vint16m8, base: *const i16, bindex: vint16m8, mask: vbool8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vluxei16_v_i16m8_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i32mf8_m(base: *const u32, bindex: vint32mf8, mask: vboolf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv1i32.nxv1i16.i64"]
        fn _vluxei16_v_i32mf8_m(_poison: vint32mf8, base: *const i32, bindex: vint32mf8, mask: vboolf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vluxei16_v_i32mf8_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i32mf4_m(base: *const u32, bindex: vint32mf4, mask: vboolf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv2i32.nxv2i16.i64"]
        fn _vluxei16_v_i32mf4_m(_poison: vint32mf4, base: *const i32, bindex: vint32mf4, mask: vboolf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vluxei16_v_i32mf4_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i32mf2_m(base: *const u32, bindex: vint32mf2, mask: vboolf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv4i32.nxv4i16.i64"]
        fn _vluxei16_v_i32mf2_m(_poison: vint32mf2, base: *const i32, bindex: vint32mf2, mask: vboolf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vluxei16_v_i32mf2_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i32m1_m(base: *const u32, bindex: vint32m1, mask: vbool1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv8i32.nxv8i16.i64"]
        fn _vluxei16_v_i32m1_m(_poison: vint32m1, base: *const i32, bindex: vint32m1, mask: vbool1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vluxei16_v_i32m1_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i32m2_m(base: *const u32, bindex: vint32m2, mask: vbool2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv16i32.nxv16i16.i64"]
        fn _vluxei16_v_i32m2_m(_poison: vint32m2, base: *const i32, bindex: vint32m2, mask: vbool2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vluxei16_v_i32m2_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i32m4_m(base: *const u32, bindex: vint32m4, mask: vbool4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv32i32.nxv32i16.i64"]
        fn _vluxei16_v_i32m4_m(_poison: vint32m4, base: *const i32, bindex: vint32m4, mask: vbool4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vluxei16_v_i32m4_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i32m8_m(base: *const u32, bindex: vint32m8, mask: vbool8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv64i32.nxv64i16.i64"]
        fn _vluxei16_v_i32m8_m(_poison: vint32m8, base: *const i32, bindex: vint32m8, mask: vbool8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vluxei16_v_i32m8_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i64mf8_m(base: *const u64, bindex: vint64mf8, mask: vboolf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv1i64.nxv1i16.i64"]
        fn _vluxei16_v_i64mf8_m(_poison: vint64mf8, base: *const i64, bindex: vint64mf8, mask: vboolf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vluxei16_v_i64mf8_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i64mf4_m(base: *const u64, bindex: vint64mf4, mask: vboolf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv2i64.nxv2i16.i64"]
        fn _vluxei16_v_i64mf4_m(_poison: vint64mf4, base: *const i64, bindex: vint64mf4, mask: vboolf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vluxei16_v_i64mf4_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i64mf2_m(base: *const u64, bindex: vint64mf2, mask: vboolf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv4i64.nxv4i16.i64"]
        fn _vluxei16_v_i64mf2_m(_poison: vint64mf2, base: *const i64, bindex: vint64mf2, mask: vboolf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vluxei16_v_i64mf2_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i64m1_m(base: *const u64, bindex: vint64m1, mask: vbool1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv8i64.nxv8i16.i64"]
        fn _vluxei16_v_i64m1_m(_poison: vint64m1, base: *const i64, bindex: vint64m1, mask: vbool1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vluxei16_v_i64m1_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i64m2_m(base: *const u64, bindex: vint64m2, mask: vbool2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv16i64.nxv16i16.i64"]
        fn _vluxei16_v_i64m2_m(_poison: vint64m2, base: *const i64, bindex: vint64m2, mask: vbool2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vluxei16_v_i64m2_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i64m4_m(base: *const u64, bindex: vint64m4, mask: vbool4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv32i64.nxv32i16.i64"]
        fn _vluxei16_v_i64m4_m(_poison: vint64m4, base: *const i64, bindex: vint64m4, mask: vbool4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vluxei16_v_i64m4_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei16_v_i64m8_m(base: *const u64, bindex: vint64m8, mask: vbool8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv64i64.nxv64i16.i64"]
        fn _vluxei16_v_i64m8_m(_poison: vint64m8, base: *const i64, bindex: vint64m8, mask: vbool8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vluxei16_v_i64m8_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i8mf8_m(base: *const u8, bindex: vint8mf8, mask: vboolf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv1i8.nxv1i32.i64"]
        fn _vluxei32_v_i8mf8_m(_poison: vint8mf8, base: *const i8, bindex: vint8mf8, mask: vboolf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vluxei32_v_i8mf8_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i8mf4_m(base: *const u8, bindex: vint8mf4, mask: vboolf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv2i8.nxv2i32.i64"]
        fn _vluxei32_v_i8mf4_m(_poison: vint8mf4, base: *const i8, bindex: vint8mf4, mask: vboolf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vluxei32_v_i8mf4_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i8mf2_m(base: *const u8, bindex: vint8mf2, mask: vboolf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv4i8.nxv4i32.i64"]
        fn _vluxei32_v_i8mf2_m(_poison: vint8mf2, base: *const i8, bindex: vint8mf2, mask: vboolf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vluxei32_v_i8mf2_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i8m1_m(base: *const u8, bindex: vint8m1, mask: vbool1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv8i8.nxv8i32.i64"]
        fn _vluxei32_v_i8m1_m(_poison: vint8m1, base: *const i8, bindex: vint8m1, mask: vbool1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vluxei32_v_i8m1_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i8m2_m(base: *const u8, bindex: vint8m2, mask: vbool2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv16i8.nxv16i32.i64"]
        fn _vluxei32_v_i8m2_m(_poison: vint8m2, base: *const i8, bindex: vint8m2, mask: vbool2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vluxei32_v_i8m2_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i8m4_m(base: *const u8, bindex: vint8m4, mask: vbool4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv32i8.nxv32i32.i64"]
        fn _vluxei32_v_i8m4_m(_poison: vint8m4, base: *const i8, bindex: vint8m4, mask: vbool4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vluxei32_v_i8m4_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i8m8_m(base: *const u8, bindex: vint8m8, mask: vbool8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv64i8.nxv64i32.i64"]
        fn _vluxei32_v_i8m8_m(_poison: vint8m8, base: *const i8, bindex: vint8m8, mask: vbool8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vluxei32_v_i8m8_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i16mf8_m(base: *const u16, bindex: vint16mf8, mask: vboolf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv1i16.nxv1i32.i64"]
        fn _vluxei32_v_i16mf8_m(_poison: vint16mf8, base: *const i16, bindex: vint16mf8, mask: vboolf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vluxei32_v_i16mf8_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i16mf4_m(base: *const u16, bindex: vint16mf4, mask: vboolf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv2i16.nxv2i32.i64"]
        fn _vluxei32_v_i16mf4_m(_poison: vint16mf4, base: *const i16, bindex: vint16mf4, mask: vboolf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vluxei32_v_i16mf4_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i16mf2_m(base: *const u16, bindex: vint16mf2, mask: vboolf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv4i16.nxv4i32.i64"]
        fn _vluxei32_v_i16mf2_m(_poison: vint16mf2, base: *const i16, bindex: vint16mf2, mask: vboolf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vluxei32_v_i16mf2_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i16m1_m(base: *const u16, bindex: vint16m1, mask: vbool1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv8i16.nxv8i32.i64"]
        fn _vluxei32_v_i16m1_m(_poison: vint16m1, base: *const i16, bindex: vint16m1, mask: vbool1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vluxei32_v_i16m1_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i16m2_m(base: *const u16, bindex: vint16m2, mask: vbool2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv16i16.nxv16i32.i64"]
        fn _vluxei32_v_i16m2_m(_poison: vint16m2, base: *const i16, bindex: vint16m2, mask: vbool2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vluxei32_v_i16m2_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i16m4_m(base: *const u16, bindex: vint16m4, mask: vbool4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv32i16.nxv32i32.i64"]
        fn _vluxei32_v_i16m4_m(_poison: vint16m4, base: *const i16, bindex: vint16m4, mask: vbool4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vluxei32_v_i16m4_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i16m8_m(base: *const u16, bindex: vint16m8, mask: vbool8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv64i16.nxv64i32.i64"]
        fn _vluxei32_v_i16m8_m(_poison: vint16m8, base: *const i16, bindex: vint16m8, mask: vbool8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vluxei32_v_i16m8_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i32mf8_m(base: *const u32, bindex: vint32mf8, mask: vboolf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv1i32.nxv1i32.i64"]
        fn _vluxei32_v_i32mf8_m(_poison: vint32mf8, base: *const i32, bindex: vint32mf8, mask: vboolf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vluxei32_v_i32mf8_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i32mf4_m(base: *const u32, bindex: vint32mf4, mask: vboolf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv2i32.nxv2i32.i64"]
        fn _vluxei32_v_i32mf4_m(_poison: vint32mf4, base: *const i32, bindex: vint32mf4, mask: vboolf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vluxei32_v_i32mf4_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i32mf2_m(base: *const u32, bindex: vint32mf2, mask: vboolf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv4i32.nxv4i32.i64"]
        fn _vluxei32_v_i32mf2_m(_poison: vint32mf2, base: *const i32, bindex: vint32mf2, mask: vboolf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vluxei32_v_i32mf2_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i32m1_m(base: *const u32, bindex: vint32m1, mask: vbool1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv8i32.nxv8i32.i64"]
        fn _vluxei32_v_i32m1_m(_poison: vint32m1, base: *const i32, bindex: vint32m1, mask: vbool1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vluxei32_v_i32m1_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i32m2_m(base: *const u32, bindex: vint32m2, mask: vbool2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv16i32.nxv16i32.i64"]
        fn _vluxei32_v_i32m2_m(_poison: vint32m2, base: *const i32, bindex: vint32m2, mask: vbool2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vluxei32_v_i32m2_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i32m4_m(base: *const u32, bindex: vint32m4, mask: vbool4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv32i32.nxv32i32.i64"]
        fn _vluxei32_v_i32m4_m(_poison: vint32m4, base: *const i32, bindex: vint32m4, mask: vbool4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vluxei32_v_i32m4_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i32m8_m(base: *const u32, bindex: vint32m8, mask: vbool8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv64i32.nxv64i32.i64"]
        fn _vluxei32_v_i32m8_m(_poison: vint32m8, base: *const i32, bindex: vint32m8, mask: vbool8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vluxei32_v_i32m8_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i64mf8_m(base: *const u64, bindex: vint64mf8, mask: vboolf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv1i64.nxv1i32.i64"]
        fn _vluxei32_v_i64mf8_m(_poison: vint64mf8, base: *const i64, bindex: vint64mf8, mask: vboolf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vluxei32_v_i64mf8_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i64mf4_m(base: *const u64, bindex: vint64mf4, mask: vboolf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv2i64.nxv2i32.i64"]
        fn _vluxei32_v_i64mf4_m(_poison: vint64mf4, base: *const i64, bindex: vint64mf4, mask: vboolf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vluxei32_v_i64mf4_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i64mf2_m(base: *const u64, bindex: vint64mf2, mask: vboolf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv4i64.nxv4i32.i64"]
        fn _vluxei32_v_i64mf2_m(_poison: vint64mf2, base: *const i64, bindex: vint64mf2, mask: vboolf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vluxei32_v_i64mf2_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i64m1_m(base: *const u64, bindex: vint64m1, mask: vbool1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv8i64.nxv8i32.i64"]
        fn _vluxei32_v_i64m1_m(_poison: vint64m1, base: *const i64, bindex: vint64m1, mask: vbool1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vluxei32_v_i64m1_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i64m2_m(base: *const u64, bindex: vint64m2, mask: vbool2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv16i64.nxv16i32.i64"]
        fn _vluxei32_v_i64m2_m(_poison: vint64m2, base: *const i64, bindex: vint64m2, mask: vbool2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vluxei32_v_i64m2_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i64m4_m(base: *const u64, bindex: vint64m4, mask: vbool4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv32i64.nxv32i32.i64"]
        fn _vluxei32_v_i64m4_m(_poison: vint64m4, base: *const i64, bindex: vint64m4, mask: vbool4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vluxei32_v_i64m4_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei32_v_i64m8_m(base: *const u64, bindex: vint64m8, mask: vbool8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv64i64.nxv64i32.i64"]
        fn _vluxei32_v_i64m8_m(_poison: vint64m8, base: *const i64, bindex: vint64m8, mask: vbool8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vluxei32_v_i64m8_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i8mf8_m(base: *const u8, bindex: vint8mf8, mask: vboolf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv1i8.nxv1i64.i64"]
        fn _vluxei64_v_i8mf8_m(_poison: vint8mf8, base: *const i8, bindex: vint8mf8, mask: vboolf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vluxei64_v_i8mf8_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i8mf4_m(base: *const u8, bindex: vint8mf4, mask: vboolf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv2i8.nxv2i64.i64"]
        fn _vluxei64_v_i8mf4_m(_poison: vint8mf4, base: *const i8, bindex: vint8mf4, mask: vboolf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vluxei64_v_i8mf4_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i8mf2_m(base: *const u8, bindex: vint8mf2, mask: vboolf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv4i8.nxv4i64.i64"]
        fn _vluxei64_v_i8mf2_m(_poison: vint8mf2, base: *const i8, bindex: vint8mf2, mask: vboolf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vluxei64_v_i8mf2_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i8m1_m(base: *const u8, bindex: vint8m1, mask: vbool1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv8i8.nxv8i64.i64"]
        fn _vluxei64_v_i8m1_m(_poison: vint8m1, base: *const i8, bindex: vint8m1, mask: vbool1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vluxei64_v_i8m1_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i8m2_m(base: *const u8, bindex: vint8m2, mask: vbool2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv16i8.nxv16i64.i64"]
        fn _vluxei64_v_i8m2_m(_poison: vint8m2, base: *const i8, bindex: vint8m2, mask: vbool2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vluxei64_v_i8m2_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i8m4_m(base: *const u8, bindex: vint8m4, mask: vbool4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv32i8.nxv32i64.i64"]
        fn _vluxei64_v_i8m4_m(_poison: vint8m4, base: *const i8, bindex: vint8m4, mask: vbool4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vluxei64_v_i8m4_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i8m8_m(base: *const u8, bindex: vint8m8, mask: vbool8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv64i8.nxv64i64.i64"]
        fn _vluxei64_v_i8m8_m(_poison: vint8m8, base: *const i8, bindex: vint8m8, mask: vbool8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vluxei64_v_i8m8_m(poison!(), base as *const i8, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i16mf8_m(base: *const u16, bindex: vint16mf8, mask: vboolf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv1i16.nxv1i64.i64"]
        fn _vluxei64_v_i16mf8_m(_poison: vint16mf8, base: *const i16, bindex: vint16mf8, mask: vboolf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vluxei64_v_i16mf8_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i16mf4_m(base: *const u16, bindex: vint16mf4, mask: vboolf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv2i16.nxv2i64.i64"]
        fn _vluxei64_v_i16mf4_m(_poison: vint16mf4, base: *const i16, bindex: vint16mf4, mask: vboolf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vluxei64_v_i16mf4_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i16mf2_m(base: *const u16, bindex: vint16mf2, mask: vboolf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv4i16.nxv4i64.i64"]
        fn _vluxei64_v_i16mf2_m(_poison: vint16mf2, base: *const i16, bindex: vint16mf2, mask: vboolf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vluxei64_v_i16mf2_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i16m1_m(base: *const u16, bindex: vint16m1, mask: vbool1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv8i16.nxv8i64.i64"]
        fn _vluxei64_v_i16m1_m(_poison: vint16m1, base: *const i16, bindex: vint16m1, mask: vbool1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vluxei64_v_i16m1_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i16m2_m(base: *const u16, bindex: vint16m2, mask: vbool2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv16i16.nxv16i64.i64"]
        fn _vluxei64_v_i16m2_m(_poison: vint16m2, base: *const i16, bindex: vint16m2, mask: vbool2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vluxei64_v_i16m2_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i16m4_m(base: *const u16, bindex: vint16m4, mask: vbool4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv32i16.nxv32i64.i64"]
        fn _vluxei64_v_i16m4_m(_poison: vint16m4, base: *const i16, bindex: vint16m4, mask: vbool4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vluxei64_v_i16m4_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i16m8_m(base: *const u16, bindex: vint16m8, mask: vbool8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv64i16.nxv64i64.i64"]
        fn _vluxei64_v_i16m8_m(_poison: vint16m8, base: *const i16, bindex: vint16m8, mask: vbool8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vluxei64_v_i16m8_m(poison!(), base as *const i16, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i32mf8_m(base: *const u32, bindex: vint32mf8, mask: vboolf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv1i32.nxv1i64.i64"]
        fn _vluxei64_v_i32mf8_m(_poison: vint32mf8, base: *const i32, bindex: vint32mf8, mask: vboolf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vluxei64_v_i32mf8_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i32mf4_m(base: *const u32, bindex: vint32mf4, mask: vboolf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv2i32.nxv2i64.i64"]
        fn _vluxei64_v_i32mf4_m(_poison: vint32mf4, base: *const i32, bindex: vint32mf4, mask: vboolf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vluxei64_v_i32mf4_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i32mf2_m(base: *const u32, bindex: vint32mf2, mask: vboolf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv4i32.nxv4i64.i64"]
        fn _vluxei64_v_i32mf2_m(_poison: vint32mf2, base: *const i32, bindex: vint32mf2, mask: vboolf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vluxei64_v_i32mf2_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i32m1_m(base: *const u32, bindex: vint32m1, mask: vbool1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv8i32.nxv8i64.i64"]
        fn _vluxei64_v_i32m1_m(_poison: vint32m1, base: *const i32, bindex: vint32m1, mask: vbool1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vluxei64_v_i32m1_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i32m2_m(base: *const u32, bindex: vint32m2, mask: vbool2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv16i32.nxv16i64.i64"]
        fn _vluxei64_v_i32m2_m(_poison: vint32m2, base: *const i32, bindex: vint32m2, mask: vbool2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vluxei64_v_i32m2_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i32m4_m(base: *const u32, bindex: vint32m4, mask: vbool4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv32i32.nxv32i64.i64"]
        fn _vluxei64_v_i32m4_m(_poison: vint32m4, base: *const i32, bindex: vint32m4, mask: vbool4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vluxei64_v_i32m4_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i32m8_m(base: *const u32, bindex: vint32m8, mask: vbool8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv64i32.nxv64i64.i64"]
        fn _vluxei64_v_i32m8_m(_poison: vint32m8, base: *const i32, bindex: vint32m8, mask: vbool8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vluxei64_v_i32m8_m(poison!(), base as *const i32, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i64mf8_m(base: *const u64, bindex: vint64mf8, mask: vboolf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv1i64.nxv1i64.i64"]
        fn _vluxei64_v_i64mf8_m(_poison: vint64mf8, base: *const i64, bindex: vint64mf8, mask: vboolf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vluxei64_v_i64mf8_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i64mf4_m(base: *const u64, bindex: vint64mf4, mask: vboolf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv2i64.nxv2i64.i64"]
        fn _vluxei64_v_i64mf4_m(_poison: vint64mf4, base: *const i64, bindex: vint64mf4, mask: vboolf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vluxei64_v_i64mf4_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i64mf2_m(base: *const u64, bindex: vint64mf2, mask: vboolf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv4i64.nxv4i64.i64"]
        fn _vluxei64_v_i64mf2_m(_poison: vint64mf2, base: *const i64, bindex: vint64mf2, mask: vboolf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vluxei64_v_i64mf2_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i64m1_m(base: *const u64, bindex: vint64m1, mask: vbool1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv8i64.nxv8i64.i64"]
        fn _vluxei64_v_i64m1_m(_poison: vint64m1, base: *const i64, bindex: vint64m1, mask: vbool1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vluxei64_v_i64m1_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i64m2_m(base: *const u64, bindex: vint64m2, mask: vbool2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv16i64.nxv16i64.i64"]
        fn _vluxei64_v_i64m2_m(_poison: vint64m2, base: *const i64, bindex: vint64m2, mask: vbool2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vluxei64_v_i64m2_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i64m4_m(base: *const u64, bindex: vint64m4, mask: vbool4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv32i64.nxv32i64.i64"]
        fn _vluxei64_v_i64m4_m(_poison: vint64m4, base: *const i64, bindex: vint64m4, mask: vbool4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vluxei64_v_i64m4_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vluxei64_v_i64m8_m(base: *const u64, bindex: vint64m8, mask: vbool8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vluxei.mask.nxv64i64.nxv64i64.i64"]
        fn _vluxei64_v_i64m8_m(_poison: vint64m8, base: *const i64, bindex: vint64m8, mask: vbool8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vluxei64_v_i64m8_m(poison!(), base as *const i64, bindex, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i8mf8(vs2: vint8mf8, vs1: vint8mf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv1i8.nxv1i8.i64"]
        fn _vadd_vv_i8mf8(_poison: vint8mf8, vs2: vint8mf8, vs1: vint8mf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vadd_vv_i8mf8(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i8mf4(vs2: vint8mf4, vs1: vint8mf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv2i8.nxv2i8.i64"]
        fn _vadd_vv_i8mf4(_poison: vint8mf4, vs2: vint8mf4, vs1: vint8mf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vadd_vv_i8mf4(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i8mf2(vs2: vint8mf2, vs1: vint8mf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv4i8.nxv4i8.i64"]
        fn _vadd_vv_i8mf2(_poison: vint8mf2, vs2: vint8mf2, vs1: vint8mf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vadd_vv_i8mf2(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i8m1(vs2: vint8m1, vs1: vint8m1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv8i8.nxv8i8.i64"]
        fn _vadd_vv_i8m1(_poison: vint8m1, vs2: vint8m1, vs1: vint8m1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vadd_vv_i8m1(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i8m2(vs2: vint8m2, vs1: vint8m2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv16i8.nxv16i8.i64"]
        fn _vadd_vv_i8m2(_poison: vint8m2, vs2: vint8m2, vs1: vint8m2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vadd_vv_i8m2(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i8m4(vs2: vint8m4, vs1: vint8m4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv32i8.nxv32i8.i64"]
        fn _vadd_vv_i8m4(_poison: vint8m4, vs2: vint8m4, vs1: vint8m4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vadd_vv_i8m4(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i8m8(vs2: vint8m8, vs1: vint8m8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv64i8.nxv64i8.i64"]
        fn _vadd_vv_i8m8(_poison: vint8m8, vs2: vint8m8, vs1: vint8m8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vadd_vv_i8m8(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i16mf8(vs2: vint16mf8, vs1: vint16mf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv1i16.nxv1i16.i64"]
        fn _vadd_vv_i16mf8(_poison: vint16mf8, vs2: vint16mf8, vs1: vint16mf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vadd_vv_i16mf8(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i16mf4(vs2: vint16mf4, vs1: vint16mf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv2i16.nxv2i16.i64"]
        fn _vadd_vv_i16mf4(_poison: vint16mf4, vs2: vint16mf4, vs1: vint16mf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vadd_vv_i16mf4(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i16mf2(vs2: vint16mf2, vs1: vint16mf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv4i16.nxv4i16.i64"]
        fn _vadd_vv_i16mf2(_poison: vint16mf2, vs2: vint16mf2, vs1: vint16mf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vadd_vv_i16mf2(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i16m1(vs2: vint16m1, vs1: vint16m1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv8i16.nxv8i16.i64"]
        fn _vadd_vv_i16m1(_poison: vint16m1, vs2: vint16m1, vs1: vint16m1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vadd_vv_i16m1(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i16m2(vs2: vint16m2, vs1: vint16m2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv16i16.nxv16i16.i64"]
        fn _vadd_vv_i16m2(_poison: vint16m2, vs2: vint16m2, vs1: vint16m2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vadd_vv_i16m2(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i16m4(vs2: vint16m4, vs1: vint16m4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv32i16.nxv32i16.i64"]
        fn _vadd_vv_i16m4(_poison: vint16m4, vs2: vint16m4, vs1: vint16m4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vadd_vv_i16m4(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i16m8(vs2: vint16m8, vs1: vint16m8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv64i16.nxv64i16.i64"]
        fn _vadd_vv_i16m8(_poison: vint16m8, vs2: vint16m8, vs1: vint16m8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vadd_vv_i16m8(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i32mf8(vs2: vint32mf8, vs1: vint32mf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv1i32.nxv1i32.i64"]
        fn _vadd_vv_i32mf8(_poison: vint32mf8, vs2: vint32mf8, vs1: vint32mf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vadd_vv_i32mf8(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i32mf4(vs2: vint32mf4, vs1: vint32mf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv2i32.nxv2i32.i64"]
        fn _vadd_vv_i32mf4(_poison: vint32mf4, vs2: vint32mf4, vs1: vint32mf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vadd_vv_i32mf4(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i32mf2(vs2: vint32mf2, vs1: vint32mf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv4i32.nxv4i32.i64"]
        fn _vadd_vv_i32mf2(_poison: vint32mf2, vs2: vint32mf2, vs1: vint32mf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vadd_vv_i32mf2(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i32m1(vs2: vint32m1, vs1: vint32m1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv8i32.nxv8i32.i64"]
        fn _vadd_vv_i32m1(_poison: vint32m1, vs2: vint32m1, vs1: vint32m1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vadd_vv_i32m1(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i32m2(vs2: vint32m2, vs1: vint32m2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv16i32.nxv16i32.i64"]
        fn _vadd_vv_i32m2(_poison: vint32m2, vs2: vint32m2, vs1: vint32m2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vadd_vv_i32m2(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i32m4(vs2: vint32m4, vs1: vint32m4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv32i32.nxv32i32.i64"]
        fn _vadd_vv_i32m4(_poison: vint32m4, vs2: vint32m4, vs1: vint32m4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vadd_vv_i32m4(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i32m8(vs2: vint32m8, vs1: vint32m8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv64i32.nxv64i32.i64"]
        fn _vadd_vv_i32m8(_poison: vint32m8, vs2: vint32m8, vs1: vint32m8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vadd_vv_i32m8(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i64mf8(vs2: vint64mf8, vs1: vint64mf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv1i64.nxv1i64.i64"]
        fn _vadd_vv_i64mf8(_poison: vint64mf8, vs2: vint64mf8, vs1: vint64mf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vadd_vv_i64mf8(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i64mf4(vs2: vint64mf4, vs1: vint64mf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv2i64.nxv2i64.i64"]
        fn _vadd_vv_i64mf4(_poison: vint64mf4, vs2: vint64mf4, vs1: vint64mf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vadd_vv_i64mf4(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i64mf2(vs2: vint64mf2, vs1: vint64mf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv4i64.nxv4i64.i64"]
        fn _vadd_vv_i64mf2(_poison: vint64mf2, vs2: vint64mf2, vs1: vint64mf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vadd_vv_i64mf2(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i64m1(vs2: vint64m1, vs1: vint64m1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv8i64.nxv8i64.i64"]
        fn _vadd_vv_i64m1(_poison: vint64m1, vs2: vint64m1, vs1: vint64m1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vadd_vv_i64m1(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i64m2(vs2: vint64m2, vs1: vint64m2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv16i64.nxv16i64.i64"]
        fn _vadd_vv_i64m2(_poison: vint64m2, vs2: vint64m2, vs1: vint64m2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vadd_vv_i64m2(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i64m4(vs2: vint64m4, vs1: vint64m4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv32i64.nxv32i64.i64"]
        fn _vadd_vv_i64m4(_poison: vint64m4, vs2: vint64m4, vs1: vint64m4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vadd_vv_i64m4(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i64m8(vs2: vint64m8, vs1: vint64m8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.nxv64i64.nxv64i64.i64"]
        fn _vadd_vv_i64m8(_poison: vint64m8, vs2: vint64m8, vs1: vint64m8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vadd_vv_i64m8(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i8mf8_m(vs2: vint8mf8, vs1: vint8mf8, mask: vboolf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv1i8.nxv1i8.i64"]
        fn _vadd_vv_i8mf8_m(_poison: vint8mf8, vs2: vint8mf8, vs1: vint8mf8, mask: vboolf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vadd_vv_i8mf8_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i8mf4_m(vs2: vint8mf4, vs1: vint8mf4, mask: vboolf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv2i8.nxv2i8.i64"]
        fn _vadd_vv_i8mf4_m(_poison: vint8mf4, vs2: vint8mf4, vs1: vint8mf4, mask: vboolf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vadd_vv_i8mf4_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i8mf2_m(vs2: vint8mf2, vs1: vint8mf2, mask: vboolf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv4i8.nxv4i8.i64"]
        fn _vadd_vv_i8mf2_m(_poison: vint8mf2, vs2: vint8mf2, vs1: vint8mf2, mask: vboolf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vadd_vv_i8mf2_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i8m1_m(vs2: vint8m1, vs1: vint8m1, mask: vbool1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv8i8.nxv8i8.i64"]
        fn _vadd_vv_i8m1_m(_poison: vint8m1, vs2: vint8m1, vs1: vint8m1, mask: vbool1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vadd_vv_i8m1_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i8m2_m(vs2: vint8m2, vs1: vint8m2, mask: vbool2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv16i8.nxv16i8.i64"]
        fn _vadd_vv_i8m2_m(_poison: vint8m2, vs2: vint8m2, vs1: vint8m2, mask: vbool2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vadd_vv_i8m2_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i8m4_m(vs2: vint8m4, vs1: vint8m4, mask: vbool4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv32i8.nxv32i8.i64"]
        fn _vadd_vv_i8m4_m(_poison: vint8m4, vs2: vint8m4, vs1: vint8m4, mask: vbool4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vadd_vv_i8m4_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i8m8_m(vs2: vint8m8, vs1: vint8m8, mask: vbool8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv64i8.nxv64i8.i64"]
        fn _vadd_vv_i8m8_m(_poison: vint8m8, vs2: vint8m8, vs1: vint8m8, mask: vbool8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vadd_vv_i8m8_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i16mf8_m(vs2: vint16mf8, vs1: vint16mf8, mask: vboolf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv1i16.nxv1i16.i64"]
        fn _vadd_vv_i16mf8_m(_poison: vint16mf8, vs2: vint16mf8, vs1: vint16mf8, mask: vboolf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vadd_vv_i16mf8_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i16mf4_m(vs2: vint16mf4, vs1: vint16mf4, mask: vboolf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv2i16.nxv2i16.i64"]
        fn _vadd_vv_i16mf4_m(_poison: vint16mf4, vs2: vint16mf4, vs1: vint16mf4, mask: vboolf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vadd_vv_i16mf4_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i16mf2_m(vs2: vint16mf2, vs1: vint16mf2, mask: vboolf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv4i16.nxv4i16.i64"]
        fn _vadd_vv_i16mf2_m(_poison: vint16mf2, vs2: vint16mf2, vs1: vint16mf2, mask: vboolf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vadd_vv_i16mf2_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i16m1_m(vs2: vint16m1, vs1: vint16m1, mask: vbool1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv8i16.nxv8i16.i64"]
        fn _vadd_vv_i16m1_m(_poison: vint16m1, vs2: vint16m1, vs1: vint16m1, mask: vbool1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vadd_vv_i16m1_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i16m2_m(vs2: vint16m2, vs1: vint16m2, mask: vbool2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv16i16.nxv16i16.i64"]
        fn _vadd_vv_i16m2_m(_poison: vint16m2, vs2: vint16m2, vs1: vint16m2, mask: vbool2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vadd_vv_i16m2_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i16m4_m(vs2: vint16m4, vs1: vint16m4, mask: vbool4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv32i16.nxv32i16.i64"]
        fn _vadd_vv_i16m4_m(_poison: vint16m4, vs2: vint16m4, vs1: vint16m4, mask: vbool4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vadd_vv_i16m4_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i16m8_m(vs2: vint16m8, vs1: vint16m8, mask: vbool8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv64i16.nxv64i16.i64"]
        fn _vadd_vv_i16m8_m(_poison: vint16m8, vs2: vint16m8, vs1: vint16m8, mask: vbool8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vadd_vv_i16m8_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i32mf8_m(vs2: vint32mf8, vs1: vint32mf8, mask: vboolf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv1i32.nxv1i32.i64"]
        fn _vadd_vv_i32mf8_m(_poison: vint32mf8, vs2: vint32mf8, vs1: vint32mf8, mask: vboolf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vadd_vv_i32mf8_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i32mf4_m(vs2: vint32mf4, vs1: vint32mf4, mask: vboolf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv2i32.nxv2i32.i64"]
        fn _vadd_vv_i32mf4_m(_poison: vint32mf4, vs2: vint32mf4, vs1: vint32mf4, mask: vboolf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vadd_vv_i32mf4_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i32mf2_m(vs2: vint32mf2, vs1: vint32mf2, mask: vboolf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv4i32.nxv4i32.i64"]
        fn _vadd_vv_i32mf2_m(_poison: vint32mf2, vs2: vint32mf2, vs1: vint32mf2, mask: vboolf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vadd_vv_i32mf2_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i32m1_m(vs2: vint32m1, vs1: vint32m1, mask: vbool1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv8i32.nxv8i32.i64"]
        fn _vadd_vv_i32m1_m(_poison: vint32m1, vs2: vint32m1, vs1: vint32m1, mask: vbool1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vadd_vv_i32m1_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i32m2_m(vs2: vint32m2, vs1: vint32m2, mask: vbool2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv16i32.nxv16i32.i64"]
        fn _vadd_vv_i32m2_m(_poison: vint32m2, vs2: vint32m2, vs1: vint32m2, mask: vbool2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vadd_vv_i32m2_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i32m4_m(vs2: vint32m4, vs1: vint32m4, mask: vbool4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv32i32.nxv32i32.i64"]
        fn _vadd_vv_i32m4_m(_poison: vint32m4, vs2: vint32m4, vs1: vint32m4, mask: vbool4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vadd_vv_i32m4_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i32m8_m(vs2: vint32m8, vs1: vint32m8, mask: vbool8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv64i32.nxv64i32.i64"]
        fn _vadd_vv_i32m8_m(_poison: vint32m8, vs2: vint32m8, vs1: vint32m8, mask: vbool8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vadd_vv_i32m8_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i64mf8_m(vs2: vint64mf8, vs1: vint64mf8, mask: vboolf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv1i64.nxv1i64.i64"]
        fn _vadd_vv_i64mf8_m(_poison: vint64mf8, vs2: vint64mf8, vs1: vint64mf8, mask: vboolf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vadd_vv_i64mf8_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i64mf4_m(vs2: vint64mf4, vs1: vint64mf4, mask: vboolf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv2i64.nxv2i64.i64"]
        fn _vadd_vv_i64mf4_m(_poison: vint64mf4, vs2: vint64mf4, vs1: vint64mf4, mask: vboolf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vadd_vv_i64mf4_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i64mf2_m(vs2: vint64mf2, vs1: vint64mf2, mask: vboolf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv4i64.nxv4i64.i64"]
        fn _vadd_vv_i64mf2_m(_poison: vint64mf2, vs2: vint64mf2, vs1: vint64mf2, mask: vboolf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vadd_vv_i64mf2_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i64m1_m(vs2: vint64m1, vs1: vint64m1, mask: vbool1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv8i64.nxv8i64.i64"]
        fn _vadd_vv_i64m1_m(_poison: vint64m1, vs2: vint64m1, vs1: vint64m1, mask: vbool1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vadd_vv_i64m1_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i64m2_m(vs2: vint64m2, vs1: vint64m2, mask: vbool2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv16i64.nxv16i64.i64"]
        fn _vadd_vv_i64m2_m(_poison: vint64m2, vs2: vint64m2, vs1: vint64m2, mask: vbool2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vadd_vv_i64m2_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i64m4_m(vs2: vint64m4, vs1: vint64m4, mask: vbool4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv32i64.nxv32i64.i64"]
        fn _vadd_vv_i64m4_m(_poison: vint64m4, vs2: vint64m4, vs1: vint64m4, mask: vbool4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vadd_vv_i64m4_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vadd_vv_i64m8_m(vs2: vint64m8, vs1: vint64m8, mask: vbool8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vadd.mask.nxv64i64.nxv64i64.i64"]
        fn _vadd_vv_i64m8_m(_poison: vint64m8, vs2: vint64m8, vs1: vint64m8, mask: vbool8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vadd_vv_i64m8_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i8mf8(vs2: vint8mf8, vs1: vint8mf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv1i8.nxv1i8.i64"]
        fn _vsub_vv_i8mf8(_poison: vint8mf8, vs2: vint8mf8, vs1: vint8mf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vsub_vv_i8mf8(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i8mf4(vs2: vint8mf4, vs1: vint8mf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv2i8.nxv2i8.i64"]
        fn _vsub_vv_i8mf4(_poison: vint8mf4, vs2: vint8mf4, vs1: vint8mf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vsub_vv_i8mf4(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i8mf2(vs2: vint8mf2, vs1: vint8mf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv4i8.nxv4i8.i64"]
        fn _vsub_vv_i8mf2(_poison: vint8mf2, vs2: vint8mf2, vs1: vint8mf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vsub_vv_i8mf2(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i8m1(vs2: vint8m1, vs1: vint8m1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv8i8.nxv8i8.i64"]
        fn _vsub_vv_i8m1(_poison: vint8m1, vs2: vint8m1, vs1: vint8m1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vsub_vv_i8m1(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i8m2(vs2: vint8m2, vs1: vint8m2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv16i8.nxv16i8.i64"]
        fn _vsub_vv_i8m2(_poison: vint8m2, vs2: vint8m2, vs1: vint8m2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vsub_vv_i8m2(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i8m4(vs2: vint8m4, vs1: vint8m4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv32i8.nxv32i8.i64"]
        fn _vsub_vv_i8m4(_poison: vint8m4, vs2: vint8m4, vs1: vint8m4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vsub_vv_i8m4(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i8m8(vs2: vint8m8, vs1: vint8m8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv64i8.nxv64i8.i64"]
        fn _vsub_vv_i8m8(_poison: vint8m8, vs2: vint8m8, vs1: vint8m8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vsub_vv_i8m8(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i16mf8(vs2: vint16mf8, vs1: vint16mf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv1i16.nxv1i16.i64"]
        fn _vsub_vv_i16mf8(_poison: vint16mf8, vs2: vint16mf8, vs1: vint16mf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vsub_vv_i16mf8(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i16mf4(vs2: vint16mf4, vs1: vint16mf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv2i16.nxv2i16.i64"]
        fn _vsub_vv_i16mf4(_poison: vint16mf4, vs2: vint16mf4, vs1: vint16mf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vsub_vv_i16mf4(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i16mf2(vs2: vint16mf2, vs1: vint16mf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv4i16.nxv4i16.i64"]
        fn _vsub_vv_i16mf2(_poison: vint16mf2, vs2: vint16mf2, vs1: vint16mf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vsub_vv_i16mf2(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i16m1(vs2: vint16m1, vs1: vint16m1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv8i16.nxv8i16.i64"]
        fn _vsub_vv_i16m1(_poison: vint16m1, vs2: vint16m1, vs1: vint16m1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vsub_vv_i16m1(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i16m2(vs2: vint16m2, vs1: vint16m2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv16i16.nxv16i16.i64"]
        fn _vsub_vv_i16m2(_poison: vint16m2, vs2: vint16m2, vs1: vint16m2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vsub_vv_i16m2(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i16m4(vs2: vint16m4, vs1: vint16m4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv32i16.nxv32i16.i64"]
        fn _vsub_vv_i16m4(_poison: vint16m4, vs2: vint16m4, vs1: vint16m4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vsub_vv_i16m4(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i16m8(vs2: vint16m8, vs1: vint16m8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv64i16.nxv64i16.i64"]
        fn _vsub_vv_i16m8(_poison: vint16m8, vs2: vint16m8, vs1: vint16m8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vsub_vv_i16m8(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i32mf8(vs2: vint32mf8, vs1: vint32mf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv1i32.nxv1i32.i64"]
        fn _vsub_vv_i32mf8(_poison: vint32mf8, vs2: vint32mf8, vs1: vint32mf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vsub_vv_i32mf8(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i32mf4(vs2: vint32mf4, vs1: vint32mf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv2i32.nxv2i32.i64"]
        fn _vsub_vv_i32mf4(_poison: vint32mf4, vs2: vint32mf4, vs1: vint32mf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vsub_vv_i32mf4(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i32mf2(vs2: vint32mf2, vs1: vint32mf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv4i32.nxv4i32.i64"]
        fn _vsub_vv_i32mf2(_poison: vint32mf2, vs2: vint32mf2, vs1: vint32mf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vsub_vv_i32mf2(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i32m1(vs2: vint32m1, vs1: vint32m1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv8i32.nxv8i32.i64"]
        fn _vsub_vv_i32m1(_poison: vint32m1, vs2: vint32m1, vs1: vint32m1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vsub_vv_i32m1(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i32m2(vs2: vint32m2, vs1: vint32m2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv16i32.nxv16i32.i64"]
        fn _vsub_vv_i32m2(_poison: vint32m2, vs2: vint32m2, vs1: vint32m2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vsub_vv_i32m2(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i32m4(vs2: vint32m4, vs1: vint32m4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv32i32.nxv32i32.i64"]
        fn _vsub_vv_i32m4(_poison: vint32m4, vs2: vint32m4, vs1: vint32m4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vsub_vv_i32m4(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i32m8(vs2: vint32m8, vs1: vint32m8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv64i32.nxv64i32.i64"]
        fn _vsub_vv_i32m8(_poison: vint32m8, vs2: vint32m8, vs1: vint32m8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vsub_vv_i32m8(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i64mf8(vs2: vint64mf8, vs1: vint64mf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv1i64.nxv1i64.i64"]
        fn _vsub_vv_i64mf8(_poison: vint64mf8, vs2: vint64mf8, vs1: vint64mf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vsub_vv_i64mf8(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i64mf4(vs2: vint64mf4, vs1: vint64mf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv2i64.nxv2i64.i64"]
        fn _vsub_vv_i64mf4(_poison: vint64mf4, vs2: vint64mf4, vs1: vint64mf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vsub_vv_i64mf4(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i64mf2(vs2: vint64mf2, vs1: vint64mf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv4i64.nxv4i64.i64"]
        fn _vsub_vv_i64mf2(_poison: vint64mf2, vs2: vint64mf2, vs1: vint64mf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vsub_vv_i64mf2(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i64m1(vs2: vint64m1, vs1: vint64m1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv8i64.nxv8i64.i64"]
        fn _vsub_vv_i64m1(_poison: vint64m1, vs2: vint64m1, vs1: vint64m1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vsub_vv_i64m1(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i64m2(vs2: vint64m2, vs1: vint64m2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv16i64.nxv16i64.i64"]
        fn _vsub_vv_i64m2(_poison: vint64m2, vs2: vint64m2, vs1: vint64m2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vsub_vv_i64m2(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i64m4(vs2: vint64m4, vs1: vint64m4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv32i64.nxv32i64.i64"]
        fn _vsub_vv_i64m4(_poison: vint64m4, vs2: vint64m4, vs1: vint64m4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vsub_vv_i64m4(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i64m8(vs2: vint64m8, vs1: vint64m8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.nxv64i64.nxv64i64.i64"]
        fn _vsub_vv_i64m8(_poison: vint64m8, vs2: vint64m8, vs1: vint64m8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vsub_vv_i64m8(poison!(), vs2, vs1, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i8mf8_m(vs2: vint8mf8, vs1: vint8mf8, mask: vboolf8, vl: usize) -> vint8mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv1i8.nxv1i8.i64"]
        fn _vsub_vv_i8mf8_m(_poison: vint8mf8, vs2: vint8mf8, vs1: vint8mf8, mask: vboolf8, vl: isize) -> vint8mf8;
    }
    
    unsafe {
        _vsub_vv_i8mf8_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i8mf4_m(vs2: vint8mf4, vs1: vint8mf4, mask: vboolf4, vl: usize) -> vint8mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv2i8.nxv2i8.i64"]
        fn _vsub_vv_i8mf4_m(_poison: vint8mf4, vs2: vint8mf4, vs1: vint8mf4, mask: vboolf4, vl: isize) -> vint8mf4;
    }
    
    unsafe {
        _vsub_vv_i8mf4_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i8mf2_m(vs2: vint8mf2, vs1: vint8mf2, mask: vboolf2, vl: usize) -> vint8mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv4i8.nxv4i8.i64"]
        fn _vsub_vv_i8mf2_m(_poison: vint8mf2, vs2: vint8mf2, vs1: vint8mf2, mask: vboolf2, vl: isize) -> vint8mf2;
    }
    
    unsafe {
        _vsub_vv_i8mf2_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i8m1_m(vs2: vint8m1, vs1: vint8m1, mask: vbool1, vl: usize) -> vint8m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv8i8.nxv8i8.i64"]
        fn _vsub_vv_i8m1_m(_poison: vint8m1, vs2: vint8m1, vs1: vint8m1, mask: vbool1, vl: isize) -> vint8m1;
    }
    
    unsafe {
        _vsub_vv_i8m1_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i8m2_m(vs2: vint8m2, vs1: vint8m2, mask: vbool2, vl: usize) -> vint8m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv16i8.nxv16i8.i64"]
        fn _vsub_vv_i8m2_m(_poison: vint8m2, vs2: vint8m2, vs1: vint8m2, mask: vbool2, vl: isize) -> vint8m2;
    }
    
    unsafe {
        _vsub_vv_i8m2_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i8m4_m(vs2: vint8m4, vs1: vint8m4, mask: vbool4, vl: usize) -> vint8m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv32i8.nxv32i8.i64"]
        fn _vsub_vv_i8m4_m(_poison: vint8m4, vs2: vint8m4, vs1: vint8m4, mask: vbool4, vl: isize) -> vint8m4;
    }
    
    unsafe {
        _vsub_vv_i8m4_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i8m8_m(vs2: vint8m8, vs1: vint8m8, mask: vbool8, vl: usize) -> vint8m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv64i8.nxv64i8.i64"]
        fn _vsub_vv_i8m8_m(_poison: vint8m8, vs2: vint8m8, vs1: vint8m8, mask: vbool8, vl: isize) -> vint8m8;
    }
    
    unsafe {
        _vsub_vv_i8m8_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i16mf8_m(vs2: vint16mf8, vs1: vint16mf8, mask: vboolf8, vl: usize) -> vint16mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv1i16.nxv1i16.i64"]
        fn _vsub_vv_i16mf8_m(_poison: vint16mf8, vs2: vint16mf8, vs1: vint16mf8, mask: vboolf8, vl: isize) -> vint16mf8;
    }
    
    unsafe {
        _vsub_vv_i16mf8_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i16mf4_m(vs2: vint16mf4, vs1: vint16mf4, mask: vboolf4, vl: usize) -> vint16mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv2i16.nxv2i16.i64"]
        fn _vsub_vv_i16mf4_m(_poison: vint16mf4, vs2: vint16mf4, vs1: vint16mf4, mask: vboolf4, vl: isize) -> vint16mf4;
    }
    
    unsafe {
        _vsub_vv_i16mf4_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i16mf2_m(vs2: vint16mf2, vs1: vint16mf2, mask: vboolf2, vl: usize) -> vint16mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv4i16.nxv4i16.i64"]
        fn _vsub_vv_i16mf2_m(_poison: vint16mf2, vs2: vint16mf2, vs1: vint16mf2, mask: vboolf2, vl: isize) -> vint16mf2;
    }
    
    unsafe {
        _vsub_vv_i16mf2_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i16m1_m(vs2: vint16m1, vs1: vint16m1, mask: vbool1, vl: usize) -> vint16m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv8i16.nxv8i16.i64"]
        fn _vsub_vv_i16m1_m(_poison: vint16m1, vs2: vint16m1, vs1: vint16m1, mask: vbool1, vl: isize) -> vint16m1;
    }
    
    unsafe {
        _vsub_vv_i16m1_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i16m2_m(vs2: vint16m2, vs1: vint16m2, mask: vbool2, vl: usize) -> vint16m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv16i16.nxv16i16.i64"]
        fn _vsub_vv_i16m2_m(_poison: vint16m2, vs2: vint16m2, vs1: vint16m2, mask: vbool2, vl: isize) -> vint16m2;
    }
    
    unsafe {
        _vsub_vv_i16m2_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i16m4_m(vs2: vint16m4, vs1: vint16m4, mask: vbool4, vl: usize) -> vint16m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv32i16.nxv32i16.i64"]
        fn _vsub_vv_i16m4_m(_poison: vint16m4, vs2: vint16m4, vs1: vint16m4, mask: vbool4, vl: isize) -> vint16m4;
    }
    
    unsafe {
        _vsub_vv_i16m4_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i16m8_m(vs2: vint16m8, vs1: vint16m8, mask: vbool8, vl: usize) -> vint16m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv64i16.nxv64i16.i64"]
        fn _vsub_vv_i16m8_m(_poison: vint16m8, vs2: vint16m8, vs1: vint16m8, mask: vbool8, vl: isize) -> vint16m8;
    }
    
    unsafe {
        _vsub_vv_i16m8_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i32mf8_m(vs2: vint32mf8, vs1: vint32mf8, mask: vboolf8, vl: usize) -> vint32mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv1i32.nxv1i32.i64"]
        fn _vsub_vv_i32mf8_m(_poison: vint32mf8, vs2: vint32mf8, vs1: vint32mf8, mask: vboolf8, vl: isize) -> vint32mf8;
    }
    
    unsafe {
        _vsub_vv_i32mf8_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i32mf4_m(vs2: vint32mf4, vs1: vint32mf4, mask: vboolf4, vl: usize) -> vint32mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv2i32.nxv2i32.i64"]
        fn _vsub_vv_i32mf4_m(_poison: vint32mf4, vs2: vint32mf4, vs1: vint32mf4, mask: vboolf4, vl: isize) -> vint32mf4;
    }
    
    unsafe {
        _vsub_vv_i32mf4_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i32mf2_m(vs2: vint32mf2, vs1: vint32mf2, mask: vboolf2, vl: usize) -> vint32mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv4i32.nxv4i32.i64"]
        fn _vsub_vv_i32mf2_m(_poison: vint32mf2, vs2: vint32mf2, vs1: vint32mf2, mask: vboolf2, vl: isize) -> vint32mf2;
    }
    
    unsafe {
        _vsub_vv_i32mf2_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i32m1_m(vs2: vint32m1, vs1: vint32m1, mask: vbool1, vl: usize) -> vint32m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv8i32.nxv8i32.i64"]
        fn _vsub_vv_i32m1_m(_poison: vint32m1, vs2: vint32m1, vs1: vint32m1, mask: vbool1, vl: isize) -> vint32m1;
    }
    
    unsafe {
        _vsub_vv_i32m1_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i32m2_m(vs2: vint32m2, vs1: vint32m2, mask: vbool2, vl: usize) -> vint32m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv16i32.nxv16i32.i64"]
        fn _vsub_vv_i32m2_m(_poison: vint32m2, vs2: vint32m2, vs1: vint32m2, mask: vbool2, vl: isize) -> vint32m2;
    }
    
    unsafe {
        _vsub_vv_i32m2_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i32m4_m(vs2: vint32m4, vs1: vint32m4, mask: vbool4, vl: usize) -> vint32m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv32i32.nxv32i32.i64"]
        fn _vsub_vv_i32m4_m(_poison: vint32m4, vs2: vint32m4, vs1: vint32m4, mask: vbool4, vl: isize) -> vint32m4;
    }
    
    unsafe {
        _vsub_vv_i32m4_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i32m8_m(vs2: vint32m8, vs1: vint32m8, mask: vbool8, vl: usize) -> vint32m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv64i32.nxv64i32.i64"]
        fn _vsub_vv_i32m8_m(_poison: vint32m8, vs2: vint32m8, vs1: vint32m8, mask: vbool8, vl: isize) -> vint32m8;
    }
    
    unsafe {
        _vsub_vv_i32m8_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i64mf8_m(vs2: vint64mf8, vs1: vint64mf8, mask: vboolf8, vl: usize) -> vint64mf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv1i64.nxv1i64.i64"]
        fn _vsub_vv_i64mf8_m(_poison: vint64mf8, vs2: vint64mf8, vs1: vint64mf8, mask: vboolf8, vl: isize) -> vint64mf8;
    }
    
    unsafe {
        _vsub_vv_i64mf8_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i64mf4_m(vs2: vint64mf4, vs1: vint64mf4, mask: vboolf4, vl: usize) -> vint64mf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv2i64.nxv2i64.i64"]
        fn _vsub_vv_i64mf4_m(_poison: vint64mf4, vs2: vint64mf4, vs1: vint64mf4, mask: vboolf4, vl: isize) -> vint64mf4;
    }
    
    unsafe {
        _vsub_vv_i64mf4_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i64mf2_m(vs2: vint64mf2, vs1: vint64mf2, mask: vboolf2, vl: usize) -> vint64mf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv4i64.nxv4i64.i64"]
        fn _vsub_vv_i64mf2_m(_poison: vint64mf2, vs2: vint64mf2, vs1: vint64mf2, mask: vboolf2, vl: isize) -> vint64mf2;
    }
    
    unsafe {
        _vsub_vv_i64mf2_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i64m1_m(vs2: vint64m1, vs1: vint64m1, mask: vbool1, vl: usize) -> vint64m1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv8i64.nxv8i64.i64"]
        fn _vsub_vv_i64m1_m(_poison: vint64m1, vs2: vint64m1, vs1: vint64m1, mask: vbool1, vl: isize) -> vint64m1;
    }
    
    unsafe {
        _vsub_vv_i64m1_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i64m2_m(vs2: vint64m2, vs1: vint64m2, mask: vbool2, vl: usize) -> vint64m2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv16i64.nxv16i64.i64"]
        fn _vsub_vv_i64m2_m(_poison: vint64m2, vs2: vint64m2, vs1: vint64m2, mask: vbool2, vl: isize) -> vint64m2;
    }
    
    unsafe {
        _vsub_vv_i64m2_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i64m4_m(vs2: vint64m4, vs1: vint64m4, mask: vbool4, vl: usize) -> vint64m4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv32i64.nxv32i64.i64"]
        fn _vsub_vv_i64m4_m(_poison: vint64m4, vs2: vint64m4, vs1: vint64m4, mask: vbool4, vl: isize) -> vint64m4;
    }
    
    unsafe {
        _vsub_vv_i64m4_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsub_vv_i64m8_m(vs2: vint64m8, vs1: vint64m8, mask: vbool8, vl: usize) -> vint64m8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsub.mask.nxv64i64.nxv64i64.i64"]
        fn _vsub_vv_i64m8_m(_poison: vint64m8, vs2: vint64m8, vs1: vint64m8, mask: vbool8, vl: isize) -> vint64m8;
    }
    
    unsafe {
        _vsub_vv_i64m8_m(poison!(), vs2, vs1, mask, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlm_v_b1(base: *const u8, vl: usize) -> vboolf8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlm.nxv1i1.i64"]
        fn _vlm_v_b1(base: *const i8, vl: isize) -> vboolf8;
    }
    
    unsafe {
        _vlm_v_b1(base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlm_v_b2(base: *const u8, vl: usize) -> vboolf4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlm.nxv2i1.i64"]
        fn _vlm_v_b2(base: *const i8, vl: isize) -> vboolf4;
    }
    
    unsafe {
        _vlm_v_b2(base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlm_v_b4(base: *const u8, vl: usize) -> vboolf2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlm.nxv4i1.i64"]
        fn _vlm_v_b4(base: *const i8, vl: isize) -> vboolf2;
    }
    
    unsafe {
        _vlm_v_b4(base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlm_v_b8(base: *const u8, vl: usize) -> vbool1 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlm.nxv8i1.i64"]
        fn _vlm_v_b8(base: *const i8, vl: isize) -> vbool1;
    }
    
    unsafe {
        _vlm_v_b8(base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlm_v_b16(base: *const u8, vl: usize) -> vbool2 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlm.nxv16i1.i64"]
        fn _vlm_v_b16(base: *const i8, vl: isize) -> vbool2;
    }
    
    unsafe {
        _vlm_v_b16(base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlm_v_b32(base: *const u8, vl: usize) -> vbool4 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlm.nxv32i1.i64"]
        fn _vlm_v_b32(base: *const i8, vl: isize) -> vbool4;
    }
    
    unsafe {
        _vlm_v_b32(base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vlm_v_b64(base: *const u8, vl: usize) -> vbool8 {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vlm.nxv64i1.i64"]
        fn _vlm_v_b64(base: *const i8, vl: isize) -> vbool8;
    }
    
    unsafe {
        _vlm_v_b64(base as *const i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsm_v_b1(vs: vboolf8, base: *mut u8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsm.nxv1i1.i64"]
        fn _vsm_v_b1(vs: vboolf8, base: *mut i8, vl: isize);
    }
    
    unsafe {
        _vsm_v_b1(vs, base as *mut i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsm_v_b2(vs: vboolf4, base: *mut u8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsm.nxv2i1.i64"]
        fn _vsm_v_b2(vs: vboolf4, base: *mut i8, vl: isize);
    }
    
    unsafe {
        _vsm_v_b2(vs, base as *mut i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsm_v_b4(vs: vboolf2, base: *mut u8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsm.nxv4i1.i64"]
        fn _vsm_v_b4(vs: vboolf2, base: *mut i8, vl: isize);
    }
    
    unsafe {
        _vsm_v_b4(vs, base as *mut i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsm_v_b8(vs: vbool1, base: *mut u8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsm.nxv8i1.i64"]
        fn _vsm_v_b8(vs: vbool1, base: *mut i8, vl: isize);
    }
    
    unsafe {
        _vsm_v_b8(vs, base as *mut i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsm_v_b16(vs: vbool2, base: *mut u8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsm.nxv16i1.i64"]
        fn _vsm_v_b16(vs: vbool2, base: *mut i8, vl: isize);
    }
    
    unsafe {
        _vsm_v_b16(vs, base as *mut i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsm_v_b32(vs: vbool4, base: *mut u8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsm.nxv32i1.i64"]
        fn _vsm_v_b32(vs: vbool4, base: *mut i8, vl: isize);
    }
    
    unsafe {
        _vsm_v_b32(vs, base as *mut i8, vl as isize)
    }
}
#[inline]
#[target_feature(enable = "v")]
pub unsafe fn vsm_v_b64(vs: vbool8, base: *mut u8, vl: usize) {
    #[allow(improper_ctypes)]
    extern "unadjusted" {
        #[link_name = "llvm.riscv.vsm.nxv64i1.i64"]
        fn _vsm_v_b64(vs: vbool8, base: *mut i8, vl: isize);
    }
    
    unsafe {
        _vsm_v_b64(vs, base as *mut i8, vl as isize)
    }
}
